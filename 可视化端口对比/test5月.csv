Plugin ID,CVE,CVSS v2.0 Base Score,Risk,Host,Protocol,Port,Name,Synopsis,Description,Solution,See Also,Plugin Output
"10114","CVE-1999-0524","0.0","None","192.168.0.12","icmp","0","ICMP Timestamp Request Remote Date Disclosure","It is possible to determine the exact time set on the remote host.","The remote host answers to an ICMP timestamp request.  This allows an
attacker to know the date that is set on the targeted machine, which
may assist an unauthenticated, remote attacker in defeating time-based
authentication protocols.

Timestamps returned from machines running Windows Vista / 7 / 2008 /
2008 R2 are deliberately incorrect, but usually within 1000 seconds of
the actual system time.","Filter out the ICMP timestamp requests (13), and the outgoing ICMP
timestamp replies (14).","","The difference between the local and remote clocks is 5 seconds.
"
"10223","CVE-1999-0632","0.0","None","192.168.0.12","udp","111","RPC portmapper Service Detection","An ONC RPC portmapper is running on the remote host.","The RPC portmapper is running on this port.

The portmapper allows someone to get the port number of each RPC
service running on the remote host by sending either multiple lookup
requests or a DUMP request.","n/a","",""
"10267","","","None","192.168.0.12","tcp","22","SSH Server Type and Version Information","An SSH server is listening on this port.","It is possible to obtain information about the remote SSH server by
sending an empty authentication request.","n/a","","
SSH version : SSH-2.0-OpenSSH_9.3
SSH supported authentication : publickey,password,keyboard-interactive
"
"10287","","","None","192.168.0.12","udp","0","Traceroute Information","It was possible to obtain traceroute information.","Makes a traceroute to the remote host.","n/a","","For your information, here is the traceroute from 192.168.0.4 to 192.168.0.12 : 
192.168.0.4
192.168.0.12

Hop Count: 1
"
"10863","","","None","192.168.0.12","tcp","5671","SSL Certificate Information","This plugin displays the SSL certificate.","This plugin connects to every SSL-related port and attempts to 
extract and dump the X.509 certificate.","n/a","","Subject Name: 

Common Name: VM-16-13-centos
Organization: server

Issuer Name: 

Common Name: TLSGenSelfSignedtRootCA 2022-08-24T12:12:18.024187
Locality: $$$$

Serial Number: 01 

Version: 3

Signature Algorithm: SHA-256 With RSA Encryption

Not Valid Before: Aug 24 04:12:18 2022 GMT
Not Valid After: Aug 21 04:12:18 2032 GMT

Public Key Info: 

Algorithm: RSA Encryption
Key Length: 2048 bits
Public Key: 00 A3 A3 EE D9 BB 09 34 DE 56 CC 42 41 74 83 F2 AB 05 23 07 
            CE 51 6D E1 92 25 7C FB 70 37 A7 8C 95 FF 77 11 C9 DF F2 87 
            63 3D C8 D8 29 E2 C3 4C A5 03 08 5A F4 DA 4C D4 B4 EC FF 48 
            76 F8 23 E4 35 A2 DB F9 98 C2 CF 7C D8 68 9B 5B 9F 16 DD 6F 
            E4 68 D5 C2 1C 6B C5 D1 EC 6B DD 60 CD 00 FA FB B6 BD 7C B2 
            35 A3 A1 29 36 02 F5 D7 19 15 2F F7 D7 76 4C 30 53 9A 2B 2C 
            42 F0 35 6C 2A CB AE 47 B5 A2 E4 40 3A F4 DF 7D 4E 03 04 04 
            11 94 B4 D0 BD F0 63 9A BD D1 07 0E 31 32 6A EF 17 43 E9 8C 
            C7 73 58 CF 1B 21 41 74 26 0E C8 24 F7 B6 93 BF D8 59 29 5B 
            64 60 4C 7A 21 88 CF 3F 28 B3 C9 34 E0 F1 FF 0E 2B 56 82 6D 
            B1 86 B8 A5 B3 BC F2 51 22 F8 EE FD 1D 01 EC 3F 3B 2E 0A 41 
            33 DB BD CD 0C 0E 8C FC 98 F1 95 71 A7 CD B4 50 74 61 97 FC 
            A4 83 7E 1C 25 33 E7 76 DD 18 83 E7 7E 68 67 FE 79 
Exponent: 01 00 01 

Signature Length: 256 bytes / 2048 bits
Signature: 00 8F AD 34 5F BE 48 E6 E5 FE A3 AC BB 89 31 8B 60 9C 86 DC 
           D2 B2 7C 1B 42 F0 C2 92 24 93 CC 17 8B DC 8B 60 79 21 36 C2 
           BC 08 A7 D9 AB 1E 5A 8A C6 A1 86 32 26 7B 79 75 D7 F6 57 9E 
           0B 49 3B 52 44 0A 3E CB EA 91 AF 9C F5 74 E7 AD FC 01 7D 08 
           07 51 63 ED B8 9F 34 55 86 9E E0 F5 34 03 9B 30 48 55 1A FA 
           69 26 27 03 FE 25 49 DD 55 D2 DD 45 3B 48 E2 96 B8 84 B3 15 
           17 09 51 0B FB 84 72 32 C0 9B 36 DB 58 F3 35 27 1E EF 98 75 
           22 C0 0A D5 05 88 C2 E8 79 58 DA 81 A2 D2 F5 72 5E 1C 43 C1 
           A7 F5 B6 33 9B FA BE D5 C7 93 83 95 D9 86 4A 4F 24 0B 5B 91 
           5B 54 B4 C5 7C D7 F3 00 0A E3 DC D7 CB 38 4B 1C 17 A4 B7 1E 
           2A AB 5B 13 D0 15 01 1B E4 60 2B 1B 32 5D 7D 70 4B B1 EB 1C 
           53 23 90 1C 5C 37 3C A3 00 30 61 0E 20 59 9B 11 AC 43 AF 33 
           67 73 5C 1F 43 33 54 40 D0 1B 7C 88 B5 E4 07 4E 08 

Extension: Basic Constraints (2.5.29.19)
Critical: 0


Extension: Key Usage (2.5.29.15)
Critical: 0
Key Usage: Digital Signature, Key Encipherment


Extension: Extended Key Usage (2.5.29.37)
Critical: 0
Purpose#1: Web Server Authentication (1.3.6.1.5.5.7.3.1)


Extension: Subject Alternative Name (2.5.29.17)
Critical: 0
DNS: VM-16-13-centos
DNS: VM-16-13-centos
DNS: localhost


Extension: Subject Key Identifier (2.5.29.14)
Critical: 0
Subject Key Identifier: 6D 2A A6 BF E1 E6 19 65 F6 44 B8 A7 B7 3D 3E 66 49 86 41 5F 


Extension: Authority Key Identifier (2.5.29.35)
Critical: 0
Key Identifier: 10 6E B5 BE 68 D8 6F 9C C4 EF EB 99 96 FE E2 5F 87 8E 2E 98 


Extension: CRL Distribution Points (2.5.29.31)
Critical: 0
URI: http://localhost:8000/basic.crl


Fingerprints : 

SHA-256 Fingerprint: 3B 0B E8 68 8D 0A A6 BD 05 B7 E3 8D D6 00 85 5B EC 49 4D C1 
                     B3 BA 30 0C A6 3E 87 3C 35 76 E3 F0 
SHA-1 Fingerprint: 44 35 CD 79 35 5C CA 83 B6 C7 32 91 64 6C 4D 03 A0 DF D1 63 
MD5 Fingerprint: A3 EE 8F 46 DA 3F BC 35 AF B1 EE 44 14 83 0D 23 


PEM certificate : 

-----BEGIN CERTIFICATE-----
MIIDzTCCArWgAwIBAgIBATANBgkqhkiG9w0BAQsFADBMMTswOQYDVQQDDDJUTFNHZW5TZWxmU2lnbmVkdFJvb3RDQSAyMDIyLTA4LTI0VDEyOjEyOjE4LjAyNDE4NzENMAsGA1UEBwwEJCQkJDAeFw0yMjA4MjQwNDEyMThaFw0zMjA4MjEwNDEyMThaMCsxGDAWBgNVBAMMD1ZNLTE2LTEzLWNlbnRvczEPMA0GA1UECgwGc2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAo6Pu2bsJNN5WzEJBdIPyqwUjB85RbeGSJXz7cDenjJX/dxHJ3/KHYz3I2Cniw0ylAwha9NpM1LTs/0h2+CPkNaLb+ZjCz3zYaJtbnxbdb+Ro1cIca8XR7GvdYM0A+vu2vXyyNaOhKTYC9dcZFS/313ZMMFOaKyxC8DVsKsuuR7Wi5EA69N99TgMEBBGUtNC98GOavdEHDjEyau8XQ+mMx3NYzxshQXQmDsgk97aTv9hZKVtkYEx6IYjPPyizyTTg8f8OK1aCbbGGuKWzvPJRIvju/R0B7D87LgpBM9u9zQwOjPyY8ZVxp820UHRhl/ykg34cJTPndt0Yg+d+aGf+eQIDAQABo4HaMIHXMAkGA1UdEwQCMAAwCwYDVR0PBAQDAgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMBMDYGA1UdEQQvMC2CD1ZNLTE2LTEzLWNlbnRvc4IPVk0tMTYtMTMtY2VudG9zgglsb2NhbGhvc3QwHQYDVR0OBBYEFG0qpr/h5hll9kS4p7c9PmZJhkFfMB8GA1UdIwQYMBaAFBButb5o2G+cxO/rmZb+4l+Hji6YMDAGA1UdHwQpMCcwJaAjoCGGH2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9iYXNpYy5jcmwwDQYJKoZIhvcNAQELBQADggEBAI+tNF++SObl/qOsu4kxi2CchtzSsnwbQvDCkiSTzBeL3ItgeSE2wrwIp9mrHlqKxqGGMiZ7eXXX9leeC0k7UkQKPsvqka+c9XTnrfwBfQgHUWPtuJ80VYae4PU0A5swSFUa+mkmJwP+JUndVdLdRTtI4pa4hLMVFwlRC/uEcjLAmzbbWPM1Jx7vmHUiwArVBYjC6HlY2oGi0vVyXhxDwaf1tjOb+r7Vx5ODldmGSk8kC1uRW1S0xXzX8wAK49zXyzhLHBektx4qq1sT0BUBG+RgKxsyXX1wS7HrHFMjkBxcNzyjADBhDiBZmxGsQ68zZ3NcH0MzVEDQG3yIteQHTgg=
-----END CERTIFICATE-----"
"10881","","","None","192.168.0.12","tcp","22","SSH Protocol Versions Supported","A SSH server is running on the remote host.","This plugin determines the versions of the SSH protocol supported by
the remote SSH daemon.","n/a","","The remote SSH daemon supports the following versions of the
SSH protocol :

  - 1.99
  - 2.0
"
"10919","","","None","192.168.0.12","tcp","0","Open Port Re-check","Previously open ports are now closed.","One of several ports that were previously open are now closed or
unresponsive.

There are several possible reasons for this :

  - The scan may have caused a service to freeze or stop
    running.

  - An administrator may have stopped a particular service
    during the scanning process.

This might be an availability problem related to the following :

  - A network outage has been experienced during the scan,
    and the remote network cannot be reached anymore by the
    scanner.

  - This scanner may has been blacklisted by the system
    administrator or by an automatic intrusion detection /
    prevention system that detected the scan.

  - The remote host is now down, either because a user
    turned it off during the scan or because a select denial
    of service was effective.

In any case, the audit of the remote host might be incomplete and may
need to be done again.","Steps to resolve this issue include :

- Increase checks_read_timeout and/or reduce max_checks.

- Disable any IPS during the Nessus scan","","Port 5671 was detected as being open but is now closed
"
"11111","","","None","192.168.0.12","tcp","111","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on TCP port 111 :

 - program: 100000 (portmapper), version: 4
 - program: 100000 (portmapper), version: 3
 - program: 100000 (portmapper), version: 2
"
"11111","","","None","192.168.0.12","udp","111","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on UDP port 111 :

 - program: 100000 (portmapper), version: 4
 - program: 100000 (portmapper), version: 3
 - program: 100000 (portmapper), version: 2
"
"11219","","","None","192.168.0.12","tcp","22","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 22/tcp was found to be open"
"11219","","","None","192.168.0.12","tcp","111","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 111/tcp was found to be open"
"11219","","","None","192.168.0.12","tcp","5671","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 5671/tcp was found to be open"
"11219","","","None","192.168.0.12","tcp","6379","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 6379/tcp was found to be open"
"11219","","","None","192.168.0.12","tcp","10050","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 10050/tcp was found to be open"
"11219","","","None","192.168.0.12","tcp","19651","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 19651/tcp was found to be open"
"11936","","","None","192.168.0.12","tcp","0","OS Identification","It is possible to guess the remote operating system.","Using a combination of remote probes (e.g., TCP/IP, SMB, HTTP, NTP,
SNMP, etc.), it is possible to guess the name of the remote operating
system in use. It is also possible sometimes to guess the version of
the operating system.","n/a","","
Remote operating system : Linux Kernel 4.8
Confidence level : 60
Method : ICMP

 
The remote host is running Linux Kernel 4.8"
"14788","","","None","192.168.0.12","tcp","0","IP Protocols Scan","This plugin detects the protocols understood by the remote IP stack.","This plugin detects the protocols understood by the remote IP stack.","n/a","http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml","The following IP protocols are accepted on this host:
1	ICMP
2	IGMP
6	TCP
17	UDP
103	PIM
136	UDPLite
"
"17975","","","None","192.168.0.12","tcp","6379","Service Detection (GET request)","The remote service could be identified.","It was possible to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","The remote service appears to be a Redis server, an open source,
persistent key-value data store."
"17975","","","None","192.168.0.12","tcp","19651","Service Detection (GET request)","The remote service could be identified.","It was possible to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","The remote service appears to be a Redis server, an open source,
persistent key-value data store."
"19506","","","None","192.168.0.12","tcp","0","Nessus Scan Information","This plugin displays information about the Nessus scan.","This plugin displays, for each tested host, information about the
scan itself :

  - The version of the plugin set.
  - The type of scanner (Nessus or Nessus Home).
  - The version of the Nessus Engine.
  - The port scanner(s) used.
  - The port range scanned.
  - The ping round trip time 
  - Whether credentialed or third-party patch management
    checks are possible.
  - Whether the display of superseded patches is enabled
  - The date of the scan.
  - The duration of the scan.
  - The number of hosts scanned in parallel.
  - The number of checks done in parallel.","n/a","","Information about this scan : 

Nessus version : 10.3.1
Nessus build : 20006
Plugin feed version : 202402261439
Scanner edition used : Nessus

ERROR: Your plugins have not been updated since 2024/2/26
Performing a scan with an older plugin set will yield out-of-date results and
produce an incomplete audit. Please run nessus-update-plugins to get the
newest vulnerability checks from Nessus.org.

Scanner OS : WINDOWS
Scanner distribution : win-x86-64
Scan type : Normal
Scan name : 手机报24年4月扫描
Scan policy used : dict_policy_low
Scanner IP : 192.168.0.4
Port scanner(s) : nessus_syn_scanner 
Port range : all
Ping RTT : Unavailable
Thorough tests : yes
Experimental tests : no
Plugin debugging enabled : no
Paranoia level : 1
Report verbosity : 1
Safe checks : yes
Optimize the test : yes
Credentialed checks : no
Patch management checks : None
Display superseded patches : yes (supersedence plugin did not launch)
CGI scanning : enabled
Web application tests : enabled
Web app tests -  Test mode : all_pairs
Web app tests -  Try all HTTP methods : yes
Web app tests -  Maximum run time : 10 minutes.
Web app tests -  Stop at first flaw : param
Max hosts : 15
Max checks : 2
Recv timeout : 15
Backports : None
Allow post-scan editing : Yes
Nessus Plugin Signature Checking : Enabled
Audit File Signature Checking : Disabled
Scan Start Date : 2024/5/7 9:10 China Standard Time
Scan duration : 1174 sec
Scan for malware : no
"
"21643","","","None","192.168.0.12","tcp","5671","SSL Cipher Suites Supported","The remote service encrypts communications using SSL.","This plugin detects which SSL ciphers are supported by the remote
service for encrypting communications.","n/a","https://www.openssl.org/docs/man1.0.2/man1/ciphers.html
http://www.nessus.org/u?e17ffced","
Here is the list of SSL ciphers supported by the remote server :
Each group is reported per SSL Version.

SSL Version : TLSv12
  High Strength Ciphers (>= 112-bit key)

    Name                          Code             KEX           Auth     Encryption             MAC
    ----------------------        ----------       ---           ----     ---------------------  ---
    DHE-RSA-AES128-SHA256         0x00, 0x9E       DH            RSA      AES-GCM(128)           SHA256
    DHE-RSA-AES256-SHA384         0x00, 0x9F       DH            RSA      AES-GCM(256)           SHA384
    ECDHE-RSA-AES128-SHA256       0xC0, 0x2F       ECDH          RSA      AES-GCM(128)           SHA256
    ECDHE-RSA-AES256-SHA384       0xC0, 0x30       ECDH          RSA      AES-GCM(256)           SHA384
    DHE-RSA-AES128-SHA            0x00, 0x33       DH            RSA      AES-CBC(128)           SHA1
    DHE-RSA-AES256-SHA            0x00, 0x39       DH            RSA      AES-CBC(256)           SHA1
    ECDHE-RSA-AES128-SHA          0xC0, 0x13       ECDH          RSA      AES-CBC(128)           SHA1
    ECDHE-RSA-AES256-SHA          0xC0, 0x14       ECDH          RSA      AES-CBC(256)           SHA1
    DHE-RSA-AES128-SHA256         0x00, 0x67       DH            RSA      AES-CBC(128)           SHA256
    DHE-RSA-AES256-SHA256         0x00, 0x6B       DH            RSA      AES-CBC(256)           SHA256
    ECDHE-RSA-AES128-SHA256       0xC0, 0x27       ECDH          RSA      AES-CBC(128)           SHA256
    ECDHE-RSA-AES256-SHA384       0xC0, 0x28       ECDH          RSA      AES-CBC(256)           SHA384

The fields above are :

  {Tenable ciphername}
  {Cipher ID code}
  Kex={key exchange}
  Auth={authentication}
  Encrypt={symmetric encryption method}
  MAC={message authentication code}
  {export flag}
"
"22964","","","None","192.168.0.12","tcp","22","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","An SSH server is running on this port."
"22964","","","None","192.168.0.12","tcp","5671","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","A TLSv1.2 server answered on this port.
"
"22964","","","None","192.168.0.12","tcp","10050","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","The service closed the connection without sending any data.
It might be protected by some sort of TCP wrapper."
"25220","","","None","192.168.0.12","tcp","0","TCP/IP Timestamps Supported","The remote service implements TCP timestamps.","The remote host implements TCP timestamps, as defined by RFC1323.  A
side effect of this feature is that the uptime of the remote host can
sometimes be computed.","n/a","http://www.ietf.org/rfc/rfc1323.txt",""
"35297","","","None","192.168.0.12","tcp","5671","SSL Service Requests Client Certificate","The remote service requests an SSL client certificate.","The remote service encrypts communications using SSL/TLS, requests a
client certificate, and may require a valid certificate in order to
establish a connection to the underlying service.","n/a","","
A TLSv12 server is listening on this port that requests a client certificate.
"
"45590","","","None","192.168.0.12","tcp","0","Common Platform Enumeration (CPE)","It was possible to enumerate CPE names that matched on the remote
system.","By using information obtained from a Nessus scan, this plugin reports
CPE (Common Platform Enumeration) matches for various hardware and
software products found on a host. 

Note that if an official CPE is not available for the product, this
plugin computes the best possible CPE based on the information
available from the scan.","n/a","http://cpe.mitre.org/
https://nvd.nist.gov/products/cpe","
The remote operating system matched the following CPE : 

  cpe:/o:linux:linux_kernel -> Linux Kernel

Following application CPE's matched on the remote system : 

  cpe:/a:openbsd:openssh:9.3 -> OpenBSD OpenSSH
  cpe:/a:pivotal_software:redis -> Piviotal Software Redis
"
"51192","","6.4","Medium","192.168.0.12","tcp","5671","SSL Certificate Cannot Be Trusted","The SSL certificate for this service cannot be trusted.","The server's X.509 certificate cannot be trusted. This situation can
occur in three different ways, in which the chain of trust can be
broken, as stated below :

  - First, the top of the certificate chain sent by the
    server might not be descended from a known public
    certificate authority. This can occur either when the
    top of the chain is an unrecognized, self-signed
    certificate, or when intermediate certificates are
    missing that would connect the top of the certificate
    chain to a known public certificate authority.

  - Second, the certificate chain may contain a certificate
    that is not valid at the time of the scan. This can
    occur either when the scan occurs before one of the
    certificate's 'notBefore' dates, or after one of the
    certificate's 'notAfter' dates.

  - Third, the certificate chain may contain a signature
    that either didn't match the certificate's information
    or could not be verified. Bad signatures can be fixed by
    getting the certificate with the bad signature to be
    re-signed by its issuer. Signatures that could not be
    verified are the result of the certificate's issuer
    using a signing algorithm that Nessus either does not
    support or does not recognize.

If the remote host is a public host in production, any break in the
chain makes it more difficult for users to verify the authenticity and 
identity of the web server. This could make it easier to carry out 
man-in-the-middle attacks against the remote host.","Purchase or generate a proper SSL certificate for this service.","https://www.itu.int/rec/T-REC-X.509/en
https://en.wikipedia.org/wiki/X.509","
The following certificate was at the top of the certificate
chain sent by the remote host, but it is signed by an unknown
certificate authority :

|-Subject : CN=TLSGenSelfSignedtRootCA 2022-08-24T12:12:18.024187/L=$$$$
|-Issuer  : CN=TLSGenSelfSignedtRootCA 2022-08-24T12:12:18.024187/L=$$$$
"
"53335","","","None","192.168.0.12","tcp","111","RPC portmapper (TCP)","An ONC RPC portmapper is running on the remote host.","The RPC portmapper is running on this port. 

The portmapper allows someone to get the port number of each RPC
service running on the remote host by sending either multiple lookup
requests or a DUMP request.","n/a","",""
"56984","","","None","192.168.0.12","tcp","5671","SSL / TLS Versions Supported","The remote service encrypts communications.","This plugin detects which SSL and TLS versions are supported by the
remote service for encrypting communications.","n/a","","
This port supports TLSv1.2.
"
"57041","","","None","192.168.0.12","tcp","5671","SSL Perfect Forward Secrecy Cipher Suites Supported","The remote service supports the use of SSL Perfect Forward Secrecy
ciphers, which maintain confidentiality even if the key is stolen.","The remote host supports the use of SSL ciphers that offer Perfect
Forward Secrecy (PFS) encryption.  These cipher suites ensure that
recorded SSL traffic cannot be broken at a future date if the server's
private key is compromised.","n/a","https://www.openssl.org/docs/manmaster/man1/ciphers.html
https://en.wikipedia.org/wiki/Diffie-Hellman_key_exchange
https://en.wikipedia.org/wiki/Perfect_forward_secrecy","
Here is the list of SSL PFS ciphers supported by the remote server :

  High Strength Ciphers (>= 112-bit key)

    Name                          Code             KEX           Auth     Encryption             MAC
    ----------------------        ----------       ---           ----     ---------------------  ---
    DHE-RSA-AES128-SHA256         0x00, 0x9E       DH            RSA      AES-GCM(128)           SHA256
    DHE-RSA-AES256-SHA384         0x00, 0x9F       DH            RSA      AES-GCM(256)           SHA384
    ECDHE-RSA-AES128-SHA256       0xC0, 0x2F       ECDH          RSA      AES-GCM(128)           SHA256
    ECDHE-RSA-AES256-SHA384       0xC0, 0x30       ECDH          RSA      AES-GCM(256)           SHA384
    DHE-RSA-AES128-SHA            0x00, 0x33       DH            RSA      AES-CBC(128)           SHA1
    DHE-RSA-AES256-SHA            0x00, 0x39       DH            RSA      AES-CBC(256)           SHA1
    ECDHE-RSA-AES128-SHA          0xC0, 0x13       ECDH          RSA      AES-CBC(128)           SHA1
    ECDHE-RSA-AES256-SHA          0xC0, 0x14       ECDH          RSA      AES-CBC(256)           SHA1
    DHE-RSA-AES128-SHA256         0x00, 0x67       DH            RSA      AES-CBC(128)           SHA256
    DHE-RSA-AES256-SHA256         0x00, 0x6B       DH            RSA      AES-CBC(256)           SHA256
    ECDHE-RSA-AES128-SHA256       0xC0, 0x27       ECDH          RSA      AES-CBC(128)           SHA256
    ECDHE-RSA-AES256-SHA384       0xC0, 0x28       ECDH          RSA      AES-CBC(256)           SHA384

The fields above are :

  {Tenable ciphername}
  {Cipher ID code}
  Kex={key exchange}
  Auth={authentication}
  Encrypt={symmetric encryption method}
  MAC={message authentication code}
  {export flag}
"
"57582","","6.4","Medium","192.168.0.12","tcp","5671","SSL Self-Signed Certificate","The SSL certificate chain for this service ends in an unrecognized
self-signed certificate.","The X.509 certificate chain for this service is not signed by a
recognized certificate authority.  If the remote host is a public host
in production, this nullifies the use of SSL as anyone could establish
a man-in-the-middle attack against the remote host. 

Note that this plugin does not check for certificate chains that end
in a certificate that is not self-signed, but is signed by an
unrecognized certificate authority.","Purchase or generate a proper SSL certificate for this service.","","
The following certificate was found at the top of the certificate
chain sent by the remote host, but is self-signed and was not
found in the list of known certificate authorities :

|-Subject : CN=TLSGenSelfSignedtRootCA 2022-08-24T12:12:18.024187/L=$$$$
"
"66334","","","None","192.168.0.12","tcp","0","Patch Report","The remote host is missing several patches.","The remote host is missing one or more security patches. This plugin lists the newest version of each patch to install 
to make sure the remote host is up-to-date.

Note: Because the 'Show missing patches that have been superseded' setting in your scan policy depends on this plugin,
it will always run and cannot be disabled.","Install the patches listed below.","","

. You need to take the following action :

[ SSH Terrapin Prefix Truncation Weakness (CVE-2023-48795) (187315) ]

+ Action to take : Contact the vendor for an update with the strict key exchange countermeasures or disable the affected algorithms.


"
"70544","","","None","192.168.0.12","tcp","5671","SSL Cipher Block Chaining Cipher Suites Supported","The remote service supports the use of SSL Cipher Block Chaining
ciphers, which combine previous blocks with subsequent ones.","The remote host supports the use of SSL ciphers that operate in Cipher
Block Chaining (CBC) mode.  These cipher suites offer additional
security over Electronic Codebook (ECB) mode, but have the potential to
leak information if used improperly.","n/a","https://www.openssl.org/docs/manmaster/man1/ciphers.html
http://www.nessus.org/u?cc4a822a
https://www.openssl.org/~bodo/tls-cbc.txt","
Here is the list of SSL CBC ciphers supported by the remote server :

  High Strength Ciphers (>= 112-bit key)

    Name                          Code             KEX           Auth     Encryption             MAC
    ----------------------        ----------       ---           ----     ---------------------  ---
    DHE-RSA-AES128-SHA            0x00, 0x33       DH            RSA      AES-CBC(128)           SHA1
    DHE-RSA-AES256-SHA            0x00, 0x39       DH            RSA      AES-CBC(256)           SHA1
    ECDHE-RSA-AES128-SHA          0xC0, 0x13       ECDH          RSA      AES-CBC(128)           SHA1
    ECDHE-RSA-AES256-SHA          0xC0, 0x14       ECDH          RSA      AES-CBC(256)           SHA1
    DHE-RSA-AES128-SHA256         0x00, 0x67       DH            RSA      AES-CBC(128)           SHA256
    DHE-RSA-AES256-SHA256         0x00, 0x6B       DH            RSA      AES-CBC(256)           SHA256
    ECDHE-RSA-AES128-SHA256       0xC0, 0x27       ECDH          RSA      AES-CBC(128)           SHA256
    ECDHE-RSA-AES256-SHA384       0xC0, 0x28       ECDH          RSA      AES-CBC(256)           SHA384

The fields above are :

  {Tenable ciphername}
  {Cipher ID code}
  Kex={key exchange}
  Auth={authentication}
  Encrypt={symmetric encryption method}
  MAC={message authentication code}
  {export flag}
"
"70657","","","None","192.168.0.12","tcp","22","SSH Algorithms and Languages Supported","An SSH server is listening on this port.","This script detects which algorithms and languages are supported by
the remote service for encrypting communications.","n/a","","
Nessus negotiated the following encryption algorithm with the server : 

The server supports the following options for kex_algorithms : 

  diffie-hellman-group-exchange-sha1
  diffie-hellman-group-exchange-sha256
  diffie-hellman-group1-sha1
  diffie-hellman-group14-sha1
  ecdh-sha2-nistp256
  ecdh-sha2-nistp384
  ecdh-sha2-nistp521

The server supports the following options for server_host_key_algorithms : 

  ecdsa-sha2-nistp256
  rsa-sha2-256
  rsa-sha2-512
  ssh-ed25519
  ssh-rsa

The server supports the following options for encryption_algorithms_client_to_server : 

  aes128-ctr
  aes128-gcm@openssh.com
  aes192-ctr
  aes256-ctr
  aes256-gcm@openssh.com
  chacha20-poly1305@openssh.com

The server supports the following options for encryption_algorithms_server_to_client : 

  aes128-ctr
  aes128-gcm@openssh.com
  aes192-ctr
  aes256-ctr
  aes256-gcm@openssh.com
  chacha20-poly1305@openssh.com

The server supports the following options for mac_algorithms_client_to_server : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
  hmac-sha2-256
  hmac-sha2-256-etm@openssh.com
  hmac-sha2-512
  hmac-sha2-512-etm@openssh.com
  umac-128-etm@openssh.com
  umac-128@openssh.com
  umac-64-etm@openssh.com
  umac-64@openssh.com

The server supports the following options for mac_algorithms_server_to_client : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
  hmac-sha2-256
  hmac-sha2-256-etm@openssh.com
  hmac-sha2-512
  hmac-sha2-512-etm@openssh.com
  umac-128-etm@openssh.com
  umac-128@openssh.com
  umac-64-etm@openssh.com
  umac-64@openssh.com

The server supports the following options for compression_algorithms_client_to_server : 

  none
  zlib@openssh.com

The server supports the following options for compression_algorithms_server_to_client : 

  none
  zlib@openssh.com
"
"91263","","","None","192.168.0.12","tcp","5671","SSL/TLS Service Requires Client Certificate","The remote service requires an SSL client certificate to establish
an SSL/TLS connection.","The remote service encrypts communications using SSL/TLS and requires
a client certificate in order to establish an SSL/TLS connection.","n/a","","
A TLSv12 server is listening on this port and requires client certificate verification.
"
"94761","","","None","192.168.0.12","tcp","5671","SSL Root Certification Authority Certificate Information","A root Certification Authority certificate was found at the top of the
certificate chain.","The remote service uses an SSL certificate chain that contains a
self-signed root Certification Authority certificate at the top of the
chain.","Ensure that use of this root Certification Authority certificate
complies with your organization's acceptable use and security
policies.","https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc778623(v=ws.10)","
The following root Certification Authority certificate was found :

|-Subject             : CN=TLSGenSelfSignedtRootCA 2022-08-24T12:12:18.024187/L=$$$$
|-Issuer              : CN=TLSGenSelfSignedtRootCA 2022-08-24T12:12:18.024187/L=$$$$
|-Valid From          : Aug 24 04:12:18 2022 GMT
|-Valid To            : Aug 21 04:12:18 2032 GMT
|-Signature Algorithm : SHA-256 With RSA Encryption
"
"100635","","","None","192.168.0.12","tcp","6379","Redis Server Detection","A document-oriented database system is running on the remote host.","Redis, a document-oriented database system, is running on the remote
host.","n/a","https://redis.io","
  Version : unknown
"
"100635","","","None","192.168.0.12","tcp","19651","Redis Server Detection","A document-oriented database system is running on the remote host.","Redis, a document-oriented database system, is running on the remote
host.","n/a","https://redis.io","
  Version : unknown
"
"110723","","","None","192.168.0.12","tcp","0","Target Credential Status by Authentication Protocol - No Credentials Provided","Nessus was able to find common ports used for local checks,
however, no credentials were provided in the scan policy.","Nessus was not able to successfully authenticate directly to the
remote target on an available authentication protocol. Nessus was
able to connect to the remote port and identify that the service
running on the port supports an authentication protocol, but Nessus
failed to authenticate to the remote service using the provided
credentials. There may have been a protocol failure that prevented
authentication from being attempted or all of the provided credentials
for the authentication protocol may be invalid. See plugin output for
error details.

Please note the following :

- This plugin reports per protocol, so it is possible for
  valid credentials to be provided for one protocol and not
  another. For example, authentication may succeed via SSH
  but fail via SMB, while no credentials were provided for
  an available SNMP service.

- Providing valid credentials for all available
  authentication protocols may improve scan coverage, but
  the value of successful authentication for a given
  protocol may vary from target to target depending upon
  what data (if any) is gathered from the target via that
  protocol. For example, successful authentication via SSH
  is more valuable for Linux targets than for Windows
  targets, and likewise successful authentication via SMB
  is more valuable for Windows targets than for Linux
  targets.","n/a","","SSH was detected on port 22 but no credentials were provided.
SSH local checks were not enabled.

"
"117886","","","None","192.168.0.12","tcp","0","OS Security Patch Assessment Not Available","OS Security Patch Assessment is not available.","OS Security Patch Assessment is not available on the remote host.
This does not necessarily indicate a problem with the scan.
Credentials may not have been provided, OS security patch assessment
may not be supported for the target, the target may not have been
identified, or another issue may have occurred that prevented OS
security patch assessment from being available. See plugin output for
details.

This plugin reports non-failure information impacting the availability
of OS Security Patch Assessment. Failure information is reported by
plugin 21745 : 'OS Security Patch Assessment failed'.  If a target
host is not supported for OS Security Patch Assessment, plugin
110695 : 'OS Security Patch Assessment Checks Not Supported' will
report concurrently with this plugin.","n/a","","
The following issues were reported :

  - Plugin      : no_local_checks_credentials.nasl
    Plugin ID   : 110723
    Plugin Name : Target Credential Status by Authentication Protocol - No Credentials Provided
    Message     : 
Credentials were not provided for detected SSH service.
"
"132634","","","None","192.168.0.12","tcp","0","Deprecated SSLv2 Connection Attempts","Secure Connections, using a deprecated protocol were attempted as part of the scan","This plugin enumerates and reports any SSLv2 connections which 
  were attempted as part of a scan. This protocol has been deemed prohibited since 2011 because of security 
  vulnerabilities and most major ssl libraries such as openssl, nss, mbed and wolfssl do not provide this functionality
  in their latest versions. This protocol has been deprecated in Nessus 8.9 and later.","N/A","","
Nessus attempted the following SSLv2 connection(s) as part of this scan: 

Plugin ID: 42476
Timestamp: 2024-05-07 01:15:15
Port: 22

"
"136318","","","None","192.168.0.12","tcp","5671","TLS Version 1.2 Protocol Detection","The remote service encrypts traffic using a version of TLS.","The remote service accepts connections encrypted using TLS 1.2.","N/A","https://tools.ietf.org/html/rfc5246","TLSv1.2 is enabled and the server supports at least one cipher."
"149334","","","None","192.168.0.12","tcp","22","SSH Password Authentication Accepted","The SSH server on the remote host accepts password authentication.","The SSH server on the remote host accepts password authentication.","n/a","https://tools.ietf.org/html/rfc4252#section-8",""
"153588","","","None","192.168.0.12","tcp","22","SSH SHA-1 HMAC Algorithms Enabled","The remote SSH server is configured to enable SHA-1 HMAC algorithms.","The remote SSH server is configured to enable SHA-1 HMAC algorithms.

Although NIST has formally deprecated use of SHA-1 for digital signatures, SHA-1 is still considered secure for HMAC as
the security of HMAC does not rely on the underlying hash function being resistant to collisions.

Note that this plugin only checks for the options of the remote SSH server.","n/a","","
The following client-to-server SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1
  hmac-sha1-etm@openssh.com

The following server-to-client SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
"
"153953","","2.6","Low","192.168.0.12","tcp","22","SSH Weak Key Exchange Algorithms Enabled","The remote SSH server is configured to allow weak key exchange algorithms.","The remote SSH server is configured to allow key exchange algorithms which are considered weak.

This is based on the IETF draft document Key Exchange (KEX) Method Updates and Recommendations for Secure Shell (SSH)
RFC9142. Section 4 lists guidance on key exchange algorithms that SHOULD NOT and MUST NOT be
enabled. This includes:

  diffie-hellman-group-exchange-sha1

  diffie-hellman-group1-sha1

  gss-gex-sha1-*

  gss-group1-sha1-*

  gss-group14-sha1-*

  rsa1024-sha1

Note that this plugin only checks for the options of the SSH server, and it does not check for vulnerable software
versions.","Contact the vendor or consult product documentation to disable the weak algorithms.","https://datatracker.ietf.org/doc/html/rfc9142","
The following weak key exchange algorithms are enabled : 

  diffie-hellman-group-exchange-sha1
  diffie-hellman-group1-sha1
"
"156899","","","None","192.168.0.12","tcp","5671","SSL/TLS Recommended Cipher Suites","The remote host advertises discouraged SSL/TLS ciphers.","The remote host has open SSL/TLS ports which advertise discouraged cipher suites. It is recommended to only enable
support for the following cipher suites:

TLSv1.3:
  - 0x13,0x01 TLS13_AES_128_GCM_SHA256
  - 0x13,0x02 TLS13_AES_256_GCM_SHA384
  - 0x13,0x03 TLS13_CHACHA20_POLY1305_SHA256

TLSv1.2:
  - 0xC0,0x2B ECDHE-ECDSA-AES128-GCM-SHA256
  - 0xC0,0x2F ECDHE-RSA-AES128-GCM-SHA256
  - 0xC0,0x2C ECDHE-ECDSA-AES256-GCM-SHA384
  - 0xC0,0x30 ECDHE-RSA-AES256-GCM-SHA384
  - 0xCC,0xA9 ECDHE-ECDSA-CHACHA20-POLY1305
  - 0xCC,0xA8 ECDHE-RSA-CHACHA20-POLY1305

This is the recommended configuration for the vast majority of services, as it is highly secure and compatible with
nearly every client released in the last five (or more) years.","Only enable support for recommened cipher suites.","https://wiki.mozilla.org/Security/Server_Side_TLS
https://ssl-config.mozilla.org/","The remote host has listening SSL/TLS ports which advertise the discouraged cipher suites outlined below:


  High Strength Ciphers (>= 112-bit key)

    Name                          Code             KEX           Auth     Encryption             MAC
    ----------------------        ----------       ---           ----     ---------------------  ---
    DHE-RSA-AES128-SHA256         0x00, 0x9E       DH            RSA      AES-GCM(128)           SHA256
    DHE-RSA-AES256-SHA384         0x00, 0x9F       DH            RSA      AES-GCM(256)           SHA384
    DHE-RSA-AES128-SHA            0x00, 0x33       DH            RSA      AES-CBC(128)           SHA1
    DHE-RSA-AES256-SHA            0x00, 0x39       DH            RSA      AES-CBC(256)           SHA1
    ECDHE-RSA-AES128-SHA          0xC0, 0x13       ECDH          RSA      AES-CBC(128)           SHA1
    ECDHE-RSA-AES256-SHA          0xC0, 0x14       ECDH          RSA      AES-CBC(256)           SHA1
    DHE-RSA-AES128-SHA256         0x00, 0x67       DH            RSA      AES-CBC(128)           SHA256
    DHE-RSA-AES256-SHA256         0x00, 0x6B       DH            RSA      AES-CBC(256)           SHA256
    ECDHE-RSA-AES128-SHA256       0xC0, 0x27       ECDH          RSA      AES-CBC(128)           SHA256
    ECDHE-RSA-AES256-SHA384       0xC0, 0x28       ECDH          RSA      AES-CBC(256)           SHA384

The fields above are :

  {Tenable ciphername}
  {Cipher ID code}
  Kex={key exchange}
  Auth={authentication}
  Encrypt={symmetric encryption method}
  MAC={message authentication code}
  {export flag}
"
"181418","","","None","192.168.0.12","tcp","22","OpenSSH Detection","An OpenSSH-based SSH server was detected on the remote host.","An OpenSSH-based SSH server was detected on the remote host.","n/a","https://www.openssh.com/","
  Service : ssh
  Version : 9.3
  Banner  : SSH-2.0-OpenSSH_9.3
"
"187201","CVE-2023-48795","6.4","Medium","192.168.0.12","tcp","22","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_9.3
  Installed version : 9.3
  Fixed version     : 9.6p1 / 9.6
"
"187201","CVE-2023-51384","6.4","Medium","192.168.0.12","tcp","22","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_9.3
  Installed version : 9.3
  Fixed version     : 9.6p1 / 9.6
"
"187201","CVE-2023-51385","6.4","Medium","192.168.0.12","tcp","22","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_9.3
  Installed version : 9.3
  Fixed version     : 9.6p1 / 9.6
"
"187315","CVE-2023-48795","5.4","Medium","192.168.0.12","tcp","22","SSH Terrapin Prefix Truncation Weakness (CVE-2023-48795)","The remote SSH server is vulnerable to a mitm prefix truncation attack.","The remote SSH server is vulnerable to a man-in-the-middle prefix truncation weakness known as Terrapin. This can
allow a remote, man-in-the-middle attacker to bypass integrity checks and downgrade the connection's security.

Note that this plugin only checks for remote SSH servers that support either ChaCha20-Poly1305 or CBC with
Encrypt-then-MAC and do not support the strict key exchange countermeasures. It does not check for vulnerable software
versions.","Contact the vendor for an update with the strict key exchange countermeasures or disable the affected algorithms.","https://terrapin-attack.com/","Supports following ChaCha20-Poly1305 Client to Server algorithm : chacha20-poly1305@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : umac-64-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : umac-128-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha2-256-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha2-512-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha1-etm@openssh.com
Supports following ChaCha20-Poly1305 Server to Client algorithm : chacha20-poly1305@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : umac-64-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : umac-128-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha2-256-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha2-512-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha1-etm@openssh.com
"
"10114","CVE-1999-0524","0.0","None","192.168.0.18","icmp","0","ICMP Timestamp Request Remote Date Disclosure","It is possible to determine the exact time set on the remote host.","The remote host answers to an ICMP timestamp request.  This allows an
attacker to know the date that is set on the targeted machine, which
may assist an unauthenticated, remote attacker in defeating time-based
authentication protocols.

Timestamps returned from machines running Windows Vista / 7 / 2008 /
2008 R2 are deliberately incorrect, but usually within 1000 seconds of
the actual system time.","Filter out the ICMP timestamp requests (13), and the outgoing ICMP
timestamp replies (14).","","The difference between the local and remote clocks is 6 seconds.
"
"10223","CVE-1999-0632","0.0","None","192.168.0.18","udp","111","RPC portmapper Service Detection","An ONC RPC portmapper is running on the remote host.","The RPC portmapper is running on this port.

The portmapper allows someone to get the port number of each RPC
service running on the remote host by sending either multiple lookup
requests or a DUMP request.","n/a","",""
"10267","","","None","192.168.0.18","tcp","22","SSH Server Type and Version Information","An SSH server is listening on this port.","It is possible to obtain information about the remote SSH server by
sending an empty authentication request.","n/a","","
SSH version : SSH-2.0-OpenSSH_8.8
SSH supported authentication : publickey,password
"
"10287","","","None","192.168.0.18","udp","0","Traceroute Information","It was possible to obtain traceroute information.","Makes a traceroute to the remote host.","n/a","","For your information, here is the traceroute from 192.168.0.4 to 192.168.0.18 : 
192.168.0.4
192.168.0.18

Hop Count: 1
"
"10881","","","None","192.168.0.18","tcp","22","SSH Protocol Versions Supported","A SSH server is running on the remote host.","This plugin determines the versions of the SSH protocol supported by
the remote SSH daemon.","n/a","","The remote SSH daemon supports the following versions of the
SSH protocol :

  - 1.99
  - 2.0
"
"11111","","","None","192.168.0.18","tcp","111","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on TCP port 111 :

 - program: 100000 (portmapper), version: 4
 - program: 100000 (portmapper), version: 3
 - program: 100000 (portmapper), version: 2
"
"11111","","","None","192.168.0.18","udp","111","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on UDP port 111 :

 - program: 100000 (portmapper), version: 4
 - program: 100000 (portmapper), version: 3
 - program: 100000 (portmapper), version: 2
"
"11154","","","None","192.168.0.18","tcp","4330","Unknown Service Detection: Banner Retrieval","There is an unknown service running on the remote host.","Nessus was unable to identify a service on the remote host even though
it returned a banner of some type.","n/a","","
If you know what this service is and think the banner could be used to
identify it, please send a description of the service along with the
following output to svc-signatures@nessus.org :

  Port   : 4330
  Type   : spontaneous
  Banner : 
0x00:  00 00 00 10 00 00 70 00 00 00 00 00 FF FF CF 9D    ......p.........
           0x10:                                                                     
           
"
"11154","","","None","192.168.0.18","tcp","44321","Unknown Service Detection: Banner Retrieval","There is an unknown service running on the remote host.","Nessus was unable to identify a service on the remote host even though
it returned a banner of some type.","n/a","","
If you know what this service is and think the banner could be used to
identify it, please send a description of the service along with the
following output to svc-signatures@nessus.org :

  Port   : 44321
  Type   : spontaneous
  Banner : 
0x00:  00 00 00 14 00 00 70 00 00 00 00 00 00 00 00 00    ......p.........
           0x10:  02 01 0E 57                                        ...W            
           
"
"11219","","","None","192.168.0.18","tcp","22","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 22/tcp was found to be open"
"11219","","","None","192.168.0.18","tcp","111","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 111/tcp was found to be open"
"11219","","","None","192.168.0.18","tcp","4330","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 4330/tcp was found to be open"
"11219","","","None","192.168.0.18","tcp","44321","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 44321/tcp was found to be open"
"11936","","","None","192.168.0.18","tcp","0","OS Identification","It is possible to guess the remote operating system.","Using a combination of remote probes (e.g., TCP/IP, SMB, HTTP, NTP,
SNMP, etc.), it is possible to guess the name of the remote operating
system in use. It is also possible sometimes to guess the version of
the operating system.","n/a","","
Remote operating system : Linux Kernel 2.6
Confidence level : 65
Method : SinFP

 
The remote host is running Linux Kernel 2.6"
"14788","","","None","192.168.0.18","tcp","0","IP Protocols Scan","This plugin detects the protocols understood by the remote IP stack.","This plugin detects the protocols understood by the remote IP stack.","n/a","http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml","The following IP protocols are accepted on this host:
1	ICMP
2	IGMP
6	TCP
17	UDP
103	PIM
136	UDPLite
"
"19506","","","None","192.168.0.18","tcp","0","Nessus Scan Information","This plugin displays information about the Nessus scan.","This plugin displays, for each tested host, information about the
scan itself :

  - The version of the plugin set.
  - The type of scanner (Nessus or Nessus Home).
  - The version of the Nessus Engine.
  - The port scanner(s) used.
  - The port range scanned.
  - The ping round trip time 
  - Whether credentialed or third-party patch management
    checks are possible.
  - Whether the display of superseded patches is enabled
  - The date of the scan.
  - The duration of the scan.
  - The number of hosts scanned in parallel.
  - The number of checks done in parallel.","n/a","","Information about this scan : 

Nessus version : 10.3.1
Nessus build : 20006
Plugin feed version : 202402261439
Scanner edition used : Nessus

ERROR: Your plugins have not been updated since 2024/2/26
Performing a scan with an older plugin set will yield out-of-date results and
produce an incomplete audit. Please run nessus-update-plugins to get the
newest vulnerability checks from Nessus.org.

Scanner OS : WINDOWS
Scanner distribution : win-x86-64
Scan type : Normal
Scan name : 手机报24年4月扫描
Scan policy used : dict_policy_low
Scanner IP : 192.168.0.4
Port scanner(s) : nessus_syn_scanner 
Port range : all
Ping RTT : Unavailable
Thorough tests : yes
Experimental tests : no
Plugin debugging enabled : no
Paranoia level : 1
Report verbosity : 1
Safe checks : yes
Optimize the test : yes
Credentialed checks : no
Patch management checks : None
Display superseded patches : yes (supersedence plugin did not launch)
CGI scanning : enabled
Web application tests : enabled
Web app tests -  Test mode : all_pairs
Web app tests -  Try all HTTP methods : yes
Web app tests -  Maximum run time : 10 minutes.
Web app tests -  Stop at first flaw : param
Max hosts : 15
Max checks : 2
Recv timeout : 15
Backports : None
Allow post-scan editing : Yes
Nessus Plugin Signature Checking : Enabled
Audit File Signature Checking : Disabled
Scan Start Date : 2024/5/7 9:07 China Standard Time
Scan duration : 904 sec
Scan for malware : no
"
"22964","","","None","192.168.0.18","tcp","22","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","An SSH server is running on this port."
"25220","","","None","192.168.0.18","tcp","0","TCP/IP Timestamps Supported","The remote service implements TCP timestamps.","The remote host implements TCP timestamps, as defined by RFC1323.  A
side effect of this feature is that the uptime of the remote host can
sometimes be computed.","n/a","http://www.ietf.org/rfc/rfc1323.txt",""
"45590","","","None","192.168.0.18","tcp","0","Common Platform Enumeration (CPE)","It was possible to enumerate CPE names that matched on the remote
system.","By using information obtained from a Nessus scan, this plugin reports
CPE (Common Platform Enumeration) matches for various hardware and
software products found on a host. 

Note that if an official CPE is not available for the product, this
plugin computes the best possible CPE based on the information
available from the scan.","n/a","http://cpe.mitre.org/
https://nvd.nist.gov/products/cpe","
The remote operating system matched the following CPE : 

  cpe:/o:linux:linux_kernel -> Linux Kernel

Following application CPE matched on the remote system : 

  cpe:/a:openbsd:openssh:8.8 -> OpenBSD OpenSSH
"
"53335","","","None","192.168.0.18","tcp","111","RPC portmapper (TCP)","An ONC RPC portmapper is running on the remote host.","The RPC portmapper is running on this port. 

The portmapper allows someone to get the port number of each RPC
service running on the remote host by sending either multiple lookup
requests or a DUMP request.","n/a","",""
"54615","","","None","192.168.0.18","tcp","0","Device Type","It is possible to guess the remote device type.","Based on the remote operating system, it is possible to determine
what the remote system type is (eg: a printer, router, general-purpose
computer, etc).","n/a","","Remote device type : general-purpose
Confidence level : 65
"
"66334","","","None","192.168.0.18","tcp","0","Patch Report","The remote host is missing several patches.","The remote host is missing one or more security patches. This plugin lists the newest version of each patch to install 
to make sure the remote host is up-to-date.

Note: Because the 'Show missing patches that have been superseded' setting in your scan policy depends on this plugin,
it will always run and cannot be disabled.","Install the patches listed below.","","

. You need to take the following action :

[ SSH Terrapin Prefix Truncation Weakness (CVE-2023-48795) (187315) ]

+ Action to take : Contact the vendor for an update with the strict key exchange countermeasures or disable the affected algorithms.


"
"70657","","","None","192.168.0.18","tcp","22","SSH Algorithms and Languages Supported","An SSH server is listening on this port.","This script detects which algorithms and languages are supported by
the remote service for encrypting communications.","n/a","","
Nessus negotiated the following encryption algorithm with the server : 

The server supports the following options for kex_algorithms : 

  diffie-hellman-group-exchange-sha1
  diffie-hellman-group-exchange-sha256
  diffie-hellman-group1-sha1
  diffie-hellman-group14-sha1
  ecdh-sha2-nistp256
  ecdh-sha2-nistp384
  ecdh-sha2-nistp521

The server supports the following options for server_host_key_algorithms : 

  ecdsa-sha2-nistp256
  rsa-sha2-256
  rsa-sha2-512
  ssh-ed25519
  ssh-rsa

The server supports the following options for encryption_algorithms_client_to_server : 

  aes128-ctr
  aes128-gcm@openssh.com
  aes192-ctr
  aes256-ctr
  aes256-gcm@openssh.com
  chacha20-poly1305@openssh.com

The server supports the following options for encryption_algorithms_server_to_client : 

  aes128-ctr
  aes128-gcm@openssh.com
  aes192-ctr
  aes256-ctr
  aes256-gcm@openssh.com
  chacha20-poly1305@openssh.com

The server supports the following options for mac_algorithms_client_to_server : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
  hmac-sha2-256
  hmac-sha2-256-etm@openssh.com
  hmac-sha2-512
  hmac-sha2-512-etm@openssh.com
  umac-128-etm@openssh.com
  umac-128@openssh.com
  umac-64-etm@openssh.com
  umac-64@openssh.com

The server supports the following options for mac_algorithms_server_to_client : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
  hmac-sha2-256
  hmac-sha2-256-etm@openssh.com
  hmac-sha2-512
  hmac-sha2-512-etm@openssh.com
  umac-128-etm@openssh.com
  umac-128@openssh.com
  umac-64-etm@openssh.com
  umac-64@openssh.com

The server supports the following options for compression_algorithms_client_to_server : 

  none
  zlib@openssh.com

The server supports the following options for compression_algorithms_server_to_client : 

  none
  zlib@openssh.com
"
"110723","","","None","192.168.0.18","tcp","0","Target Credential Status by Authentication Protocol - No Credentials Provided","Nessus was able to find common ports used for local checks,
however, no credentials were provided in the scan policy.","Nessus was not able to successfully authenticate directly to the
remote target on an available authentication protocol. Nessus was
able to connect to the remote port and identify that the service
running on the port supports an authentication protocol, but Nessus
failed to authenticate to the remote service using the provided
credentials. There may have been a protocol failure that prevented
authentication from being attempted or all of the provided credentials
for the authentication protocol may be invalid. See plugin output for
error details.

Please note the following :

- This plugin reports per protocol, so it is possible for
  valid credentials to be provided for one protocol and not
  another. For example, authentication may succeed via SSH
  but fail via SMB, while no credentials were provided for
  an available SNMP service.

- Providing valid credentials for all available
  authentication protocols may improve scan coverage, but
  the value of successful authentication for a given
  protocol may vary from target to target depending upon
  what data (if any) is gathered from the target via that
  protocol. For example, successful authentication via SSH
  is more valuable for Linux targets than for Windows
  targets, and likewise successful authentication via SMB
  is more valuable for Windows targets than for Linux
  targets.","n/a","","SSH was detected on port 22 but no credentials were provided.
SSH local checks were not enabled.

"
"117886","","","None","192.168.0.18","tcp","0","OS Security Patch Assessment Not Available","OS Security Patch Assessment is not available.","OS Security Patch Assessment is not available on the remote host.
This does not necessarily indicate a problem with the scan.
Credentials may not have been provided, OS security patch assessment
may not be supported for the target, the target may not have been
identified, or another issue may have occurred that prevented OS
security patch assessment from being available. See plugin output for
details.

This plugin reports non-failure information impacting the availability
of OS Security Patch Assessment. Failure information is reported by
plugin 21745 : 'OS Security Patch Assessment failed'.  If a target
host is not supported for OS Security Patch Assessment, plugin
110695 : 'OS Security Patch Assessment Checks Not Supported' will
report concurrently with this plugin.","n/a","","
The following issues were reported :

  - Plugin      : no_local_checks_credentials.nasl
    Plugin ID   : 110723
    Plugin Name : Target Credential Status by Authentication Protocol - No Credentials Provided
    Message     : 
Credentials were not provided for detected SSH service.
"
"132634","","","None","192.168.0.18","tcp","0","Deprecated SSLv2 Connection Attempts","Secure Connections, using a deprecated protocol were attempted as part of the scan","This plugin enumerates and reports any SSLv2 connections which 
  were attempted as part of a scan. This protocol has been deemed prohibited since 2011 because of security 
  vulnerabilities and most major ssl libraries such as openssl, nss, mbed and wolfssl do not provide this functionality
  in their latest versions. This protocol has been deprecated in Nessus 8.9 and later.","N/A","","
Nessus attempted the following SSLv2 connection(s) as part of this scan: 

Plugin ID: 42476
Timestamp: 2024-05-07 01:07:59
Port: 22

"
"149334","","","None","192.168.0.18","tcp","22","SSH Password Authentication Accepted","The SSH server on the remote host accepts password authentication.","The SSH server on the remote host accepts password authentication.","n/a","https://tools.ietf.org/html/rfc4252#section-8",""
"153588","","","None","192.168.0.18","tcp","22","SSH SHA-1 HMAC Algorithms Enabled","The remote SSH server is configured to enable SHA-1 HMAC algorithms.","The remote SSH server is configured to enable SHA-1 HMAC algorithms.

Although NIST has formally deprecated use of SHA-1 for digital signatures, SHA-1 is still considered secure for HMAC as
the security of HMAC does not rely on the underlying hash function being resistant to collisions.

Note that this plugin only checks for the options of the remote SSH server.","n/a","","
The following client-to-server SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1
  hmac-sha1-etm@openssh.com

The following server-to-client SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
"
"153953","","2.6","Low","192.168.0.18","tcp","22","SSH Weak Key Exchange Algorithms Enabled","The remote SSH server is configured to allow weak key exchange algorithms.","The remote SSH server is configured to allow key exchange algorithms which are considered weak.

This is based on the IETF draft document Key Exchange (KEX) Method Updates and Recommendations for Secure Shell (SSH)
RFC9142. Section 4 lists guidance on key exchange algorithms that SHOULD NOT and MUST NOT be
enabled. This includes:

  diffie-hellman-group-exchange-sha1

  diffie-hellman-group1-sha1

  gss-gex-sha1-*

  gss-group1-sha1-*

  gss-group14-sha1-*

  rsa1024-sha1

Note that this plugin only checks for the options of the SSH server, and it does not check for vulnerable software
versions.","Contact the vendor or consult product documentation to disable the weak algorithms.","https://datatracker.ietf.org/doc/html/rfc9142","
The following weak key exchange algorithms are enabled : 

  diffie-hellman-group-exchange-sha1
  diffie-hellman-group1-sha1
"
"181418","","","None","192.168.0.18","tcp","22","OpenSSH Detection","An OpenSSH-based SSH server was detected on the remote host.","An OpenSSH-based SSH server was detected on the remote host.","n/a","https://www.openssh.com/","
  Service : ssh
  Version : 8.8
  Banner  : SSH-2.0-OpenSSH_8.8
"
"187201","CVE-2023-48795","6.4","Medium","192.168.0.18","tcp","22","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_8.8
  Installed version : 8.8
  Fixed version     : 9.6p1 / 9.6
"
"187201","CVE-2023-51384","6.4","Medium","192.168.0.18","tcp","22","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_8.8
  Installed version : 8.8
  Fixed version     : 9.6p1 / 9.6
"
"187201","CVE-2023-51385","6.4","Medium","192.168.0.18","tcp","22","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_8.8
  Installed version : 8.8
  Fixed version     : 9.6p1 / 9.6
"
"187315","CVE-2023-48795","5.4","Medium","192.168.0.18","tcp","22","SSH Terrapin Prefix Truncation Weakness (CVE-2023-48795)","The remote SSH server is vulnerable to a mitm prefix truncation attack.","The remote SSH server is vulnerable to a man-in-the-middle prefix truncation weakness known as Terrapin. This can
allow a remote, man-in-the-middle attacker to bypass integrity checks and downgrade the connection's security.

Note that this plugin only checks for remote SSH servers that support either ChaCha20-Poly1305 or CBC with
Encrypt-then-MAC and do not support the strict key exchange countermeasures. It does not check for vulnerable software
versions.","Contact the vendor for an update with the strict key exchange countermeasures or disable the affected algorithms.","https://terrapin-attack.com/","Supports following ChaCha20-Poly1305 Client to Server algorithm : chacha20-poly1305@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : umac-64-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : umac-128-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha2-256-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha2-512-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha1-etm@openssh.com
Supports following ChaCha20-Poly1305 Server to Client algorithm : chacha20-poly1305@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : umac-64-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : umac-128-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha2-256-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha2-512-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha1-etm@openssh.com
"
"10114","CVE-1999-0524","0.0","None","192.168.0.2","icmp","0","ICMP Timestamp Request Remote Date Disclosure","It is possible to determine the exact time set on the remote host.","The remote host answers to an ICMP timestamp request.  This allows an
attacker to know the date that is set on the targeted machine, which
may assist an unauthenticated, remote attacker in defeating time-based
authentication protocols.

Timestamps returned from machines running Windows Vista / 7 / 2008 /
2008 R2 are deliberately incorrect, but usually within 1000 seconds of
the actual system time.","Filter out the ICMP timestamp requests (13), and the outgoing ICMP
timestamp replies (14).","","The difference between the local and remote clocks is 6 seconds.
"
"10223","CVE-1999-0632","0.0","None","192.168.0.2","udp","111","RPC portmapper Service Detection","An ONC RPC portmapper is running on the remote host.","The RPC portmapper is running on this port.

The portmapper allows someone to get the port number of each RPC
service running on the remote host by sending either multiple lookup
requests or a DUMP request.","n/a","",""
"10267","","","None","192.168.0.2","tcp","22","SSH Server Type and Version Information","An SSH server is listening on this port.","It is possible to obtain information about the remote SSH server by
sending an empty authentication request.","n/a","","
SSH version : SSH-2.0-OpenSSH_9.3
SSH supported authentication : publickey,password,keyboard-interactive
"
"10287","","","None","192.168.0.2","udp","0","Traceroute Information","It was possible to obtain traceroute information.","Makes a traceroute to the remote host.","n/a","","For your information, here is the traceroute from 192.168.0.4 to 192.168.0.2 : 
192.168.0.4
192.168.0.2

Hop Count: 1
"
"10658","","","None","192.168.0.2","tcp","1521","Oracle Database tnslsnr Service Remote Version Disclosure","An Oracle tnslsnr service is listening on the remote port.","The remote host is running the Oracle tnslsnr service, a network
interface to Oracle databases.  This product allows a remote user to
determine the presence and version number of a given Oracle
installation.","Filter incoming traffic to this port so that only authorized hosts can
connect to it.","","A TNS service is running on this port but it
refused to honor an attempt to connect to it.
(The TNS reply code was 4)"
"10881","","","None","192.168.0.2","tcp","22","SSH Protocol Versions Supported","A SSH server is running on the remote host.","This plugin determines the versions of the SSH protocol supported by
the remote SSH daemon.","n/a","","The remote SSH daemon supports the following versions of the
SSH protocol :

  - 1.99
  - 2.0
"
"11111","","","None","192.168.0.2","tcp","111","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on TCP port 111 :

 - program: 100000 (portmapper), version: 4
 - program: 100000 (portmapper), version: 3
 - program: 100000 (portmapper), version: 2
"
"11111","","","None","192.168.0.2","udp","111","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on UDP port 111 :

 - program: 100000 (portmapper), version: 4
 - program: 100000 (portmapper), version: 3
 - program: 100000 (portmapper), version: 2
"
"11219","","","None","192.168.0.2","tcp","22","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 22/tcp was found to be open"
"11219","","","None","192.168.0.2","tcp","111","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 111/tcp was found to be open"
"11219","","","None","192.168.0.2","tcp","1521","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 1521/tcp was found to be open"
"11219","","","None","192.168.0.2","tcp","10050","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 10050/tcp was found to be open"
"11219","","","None","192.168.0.2","tcp","32461","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 32461/tcp was found to be open"
"11936","","","None","192.168.0.2","tcp","0","OS Identification","It is possible to guess the remote operating system.","Using a combination of remote probes (e.g., TCP/IP, SMB, HTTP, NTP,
SNMP, etc.), it is possible to guess the name of the remote operating
system in use. It is also possible sometimes to guess the version of
the operating system.","n/a","","
Remote operating system : Linux
Confidence level : 59
Method : SinFP

 
The remote host is running Linux"
"14788","","","None","192.168.0.2","tcp","0","IP Protocols Scan","This plugin detects the protocols understood by the remote IP stack.","This plugin detects the protocols understood by the remote IP stack.","n/a","http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml","The following IP protocols are accepted on this host:
1	ICMP
2	IGMP
6	TCP
17	UDP
103	PIM
136	UDPLite
"
"19506","","","None","192.168.0.2","tcp","0","Nessus Scan Information","This plugin displays information about the Nessus scan.","This plugin displays, for each tested host, information about the
scan itself :

  - The version of the plugin set.
  - The type of scanner (Nessus or Nessus Home).
  - The version of the Nessus Engine.
  - The port scanner(s) used.
  - The port range scanned.
  - The ping round trip time 
  - Whether credentialed or third-party patch management
    checks are possible.
  - Whether the display of superseded patches is enabled
  - The date of the scan.
  - The duration of the scan.
  - The number of hosts scanned in parallel.
  - The number of checks done in parallel.","n/a","","Information about this scan : 

Nessus version : 10.3.1
Nessus build : 20006
Plugin feed version : 202402261439
Scanner edition used : Nessus

ERROR: Your plugins have not been updated since 2024/2/26
Performing a scan with an older plugin set will yield out-of-date results and
produce an incomplete audit. Please run nessus-update-plugins to get the
newest vulnerability checks from Nessus.org.

Scanner OS : WINDOWS
Scanner distribution : win-x86-64
Scan type : Normal
Scan name : 手机报24年4月扫描
Scan policy used : dict_policy_low
Scanner IP : 192.168.0.4
Port scanner(s) : nessus_syn_scanner 
Port range : all
Ping RTT : Unavailable
Thorough tests : yes
Experimental tests : no
Plugin debugging enabled : no
Paranoia level : 1
Report verbosity : 1
Safe checks : yes
Optimize the test : yes
Credentialed checks : no
Patch management checks : None
Display superseded patches : yes (supersedence plugin did not launch)
CGI scanning : enabled
Web application tests : enabled
Web app tests -  Test mode : all_pairs
Web app tests -  Try all HTTP methods : yes
Web app tests -  Maximum run time : 10 minutes.
Web app tests -  Stop at first flaw : param
Max hosts : 15
Max checks : 2
Recv timeout : 15
Backports : None
Allow post-scan editing : Yes
Nessus Plugin Signature Checking : Enabled
Audit File Signature Checking : Disabled
Scan Start Date : 2024/5/7 9:06 China Standard Time
Scan duration : 1188 sec
Scan for malware : no
"
"22073","","","None","192.168.0.2","tcp","1521","Oracle Database Detection","A database service is listening on the remote host.","The remote host is running an Oracle database server. 

It may be possible to extract the version number of the remote TNS
(Transparent Network Substrate) listener by sending a 'VERSION'
request to the TNS listener service operating on this port. 

Note that the version of the TNS listener does not necessarily reflect
the version of the Oracle database it provides access to.","Restrict access to the database to allowed IPs only.","","
  The banner of the remote Oracle TNS listener on port 1521
  contains the following version :

    TNSLSNR for : Version 19.0.0.0.0


  Note: This banner can be read without authentication.
"
"22964","","","None","192.168.0.2","tcp","22","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","An SSH server is running on this port."
"22964","","","None","192.168.0.2","tcp","10050","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","The service closed the connection without sending any data.
It might be protected by some sort of TCP wrapper."
"25220","","","None","192.168.0.2","tcp","0","TCP/IP Timestamps Supported","The remote service implements TCP timestamps.","The remote host implements TCP timestamps, as defined by RFC1323.  A
side effect of this feature is that the uptime of the remote host can
sometimes be computed.","n/a","http://www.ietf.org/rfc/rfc1323.txt",""
"45590","","","None","192.168.0.2","tcp","0","Common Platform Enumeration (CPE)","It was possible to enumerate CPE names that matched on the remote
system.","By using information obtained from a Nessus scan, this plugin reports
CPE (Common Platform Enumeration) matches for various hardware and
software products found on a host. 

Note that if an official CPE is not available for the product, this
plugin computes the best possible CPE based on the information
available from the scan.","n/a","http://cpe.mitre.org/
https://nvd.nist.gov/products/cpe","
The remote operating system matched the following CPE : 

  cpe:/o:linux:linux_kernel -> Linux Kernel

Following application CPE's matched on the remote system : 

  cpe:/a:openbsd:openssh:9.3 -> OpenBSD OpenSSH
  cpe:/a:oracle:database_server -> Oracle Database Server
"
"53335","","","None","192.168.0.2","tcp","111","RPC portmapper (TCP)","An ONC RPC portmapper is running on the remote host.","The RPC portmapper is running on this port. 

The portmapper allows someone to get the port number of each RPC
service running on the remote host by sending either multiple lookup
requests or a DUMP request.","n/a","",""
"54615","","","None","192.168.0.2","tcp","0","Device Type","It is possible to guess the remote device type.","Based on the remote operating system, it is possible to determine
what the remote system type is (eg: a printer, router, general-purpose
computer, etc).","n/a","","Remote device type : general-purpose
Confidence level : 59
"
"66334","","","None","192.168.0.2","tcp","0","Patch Report","The remote host is missing several patches.","The remote host is missing one or more security patches. This plugin lists the newest version of each patch to install 
to make sure the remote host is up-to-date.

Note: Because the 'Show missing patches that have been superseded' setting in your scan policy depends on this plugin,
it will always run and cannot be disabled.","Install the patches listed below.","","

. You need to take the following action :

[ SSH Terrapin Prefix Truncation Weakness (CVE-2023-48795) (187315) ]

+ Action to take : Contact the vendor for an update with the strict key exchange countermeasures or disable the affected algorithms.


"
"70657","","","None","192.168.0.2","tcp","22","SSH Algorithms and Languages Supported","An SSH server is listening on this port.","This script detects which algorithms and languages are supported by
the remote service for encrypting communications.","n/a","","
Nessus negotiated the following encryption algorithm with the server : 

The server supports the following options for kex_algorithms : 

  diffie-hellman-group-exchange-sha1
  diffie-hellman-group-exchange-sha256
  diffie-hellman-group1-sha1
  diffie-hellman-group14-sha1
  ecdh-sha2-nistp256
  ecdh-sha2-nistp384
  ecdh-sha2-nistp521

The server supports the following options for server_host_key_algorithms : 

  ecdsa-sha2-nistp256
  rsa-sha2-256
  rsa-sha2-512
  ssh-ed25519
  ssh-rsa

The server supports the following options for encryption_algorithms_client_to_server : 

  aes128-ctr
  aes128-gcm@openssh.com
  aes192-ctr
  aes256-ctr
  aes256-gcm@openssh.com
  chacha20-poly1305@openssh.com

The server supports the following options for encryption_algorithms_server_to_client : 

  aes128-ctr
  aes128-gcm@openssh.com
  aes192-ctr
  aes256-ctr
  aes256-gcm@openssh.com
  chacha20-poly1305@openssh.com

The server supports the following options for mac_algorithms_client_to_server : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
  hmac-sha2-256
  hmac-sha2-256-etm@openssh.com
  hmac-sha2-512
  hmac-sha2-512-etm@openssh.com
  umac-128-etm@openssh.com
  umac-128@openssh.com
  umac-64-etm@openssh.com
  umac-64@openssh.com

The server supports the following options for mac_algorithms_server_to_client : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
  hmac-sha2-256
  hmac-sha2-256-etm@openssh.com
  hmac-sha2-512
  hmac-sha2-512-etm@openssh.com
  umac-128-etm@openssh.com
  umac-128@openssh.com
  umac-64-etm@openssh.com
  umac-64@openssh.com

The server supports the following options for compression_algorithms_client_to_server : 

  none
  zlib@openssh.com

The server supports the following options for compression_algorithms_server_to_client : 

  none
  zlib@openssh.com
"
"110723","","","None","192.168.0.2","tcp","0","Target Credential Status by Authentication Protocol - No Credentials Provided","Nessus was able to find common ports used for local checks,
however, no credentials were provided in the scan policy.","Nessus was not able to successfully authenticate directly to the
remote target on an available authentication protocol. Nessus was
able to connect to the remote port and identify that the service
running on the port supports an authentication protocol, but Nessus
failed to authenticate to the remote service using the provided
credentials. There may have been a protocol failure that prevented
authentication from being attempted or all of the provided credentials
for the authentication protocol may be invalid. See plugin output for
error details.

Please note the following :

- This plugin reports per protocol, so it is possible for
  valid credentials to be provided for one protocol and not
  another. For example, authentication may succeed via SSH
  but fail via SMB, while no credentials were provided for
  an available SNMP service.

- Providing valid credentials for all available
  authentication protocols may improve scan coverage, but
  the value of successful authentication for a given
  protocol may vary from target to target depending upon
  what data (if any) is gathered from the target via that
  protocol. For example, successful authentication via SSH
  is more valuable for Linux targets than for Windows
  targets, and likewise successful authentication via SMB
  is more valuable for Windows targets than for Linux
  targets.","n/a","","SSH was detected on port 22 but no credentials were provided.
SSH local checks were not enabled.

"
"117886","","","None","192.168.0.2","tcp","0","OS Security Patch Assessment Not Available","OS Security Patch Assessment is not available.","OS Security Patch Assessment is not available on the remote host.
This does not necessarily indicate a problem with the scan.
Credentials may not have been provided, OS security patch assessment
may not be supported for the target, the target may not have been
identified, or another issue may have occurred that prevented OS
security patch assessment from being available. See plugin output for
details.

This plugin reports non-failure information impacting the availability
of OS Security Patch Assessment. Failure information is reported by
plugin 21745 : 'OS Security Patch Assessment failed'.  If a target
host is not supported for OS Security Patch Assessment, plugin
110695 : 'OS Security Patch Assessment Checks Not Supported' will
report concurrently with this plugin.","n/a","","
The following issues were reported :

  - Plugin      : no_local_checks_credentials.nasl
    Plugin ID   : 110723
    Plugin Name : Target Credential Status by Authentication Protocol - No Credentials Provided
    Message     : 
Credentials were not provided for detected SSH service.
"
"132634","","","None","192.168.0.2","tcp","0","Deprecated SSLv2 Connection Attempts","Secure Connections, using a deprecated protocol were attempted as part of the scan","This plugin enumerates and reports any SSLv2 connections which 
  were attempted as part of a scan. This protocol has been deemed prohibited since 2011 because of security 
  vulnerabilities and most major ssl libraries such as openssl, nss, mbed and wolfssl do not provide this functionality
  in their latest versions. This protocol has been deprecated in Nessus 8.9 and later.","N/A","","
Nessus attempted the following SSLv2 connection(s) as part of this scan: 

Plugin ID: 42476
Timestamp: 2024-05-07 01:07:37
Port: 22

"
"149334","","","None","192.168.0.2","tcp","22","SSH Password Authentication Accepted","The SSH server on the remote host accepts password authentication.","The SSH server on the remote host accepts password authentication.","n/a","https://tools.ietf.org/html/rfc4252#section-8",""
"153588","","","None","192.168.0.2","tcp","22","SSH SHA-1 HMAC Algorithms Enabled","The remote SSH server is configured to enable SHA-1 HMAC algorithms.","The remote SSH server is configured to enable SHA-1 HMAC algorithms.

Although NIST has formally deprecated use of SHA-1 for digital signatures, SHA-1 is still considered secure for HMAC as
the security of HMAC does not rely on the underlying hash function being resistant to collisions.

Note that this plugin only checks for the options of the remote SSH server.","n/a","","
The following client-to-server SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1
  hmac-sha1-etm@openssh.com

The following server-to-client SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
"
"153953","","2.6","Low","192.168.0.2","tcp","22","SSH Weak Key Exchange Algorithms Enabled","The remote SSH server is configured to allow weak key exchange algorithms.","The remote SSH server is configured to allow key exchange algorithms which are considered weak.

This is based on the IETF draft document Key Exchange (KEX) Method Updates and Recommendations for Secure Shell (SSH)
RFC9142. Section 4 lists guidance on key exchange algorithms that SHOULD NOT and MUST NOT be
enabled. This includes:

  diffie-hellman-group-exchange-sha1

  diffie-hellman-group1-sha1

  gss-gex-sha1-*

  gss-group1-sha1-*

  gss-group14-sha1-*

  rsa1024-sha1

Note that this plugin only checks for the options of the SSH server, and it does not check for vulnerable software
versions.","Contact the vendor or consult product documentation to disable the weak algorithms.","https://datatracker.ietf.org/doc/html/rfc9142","
The following weak key exchange algorithms are enabled : 

  diffie-hellman-group-exchange-sha1
  diffie-hellman-group1-sha1
"
"181418","","","None","192.168.0.2","tcp","22","OpenSSH Detection","An OpenSSH-based SSH server was detected on the remote host.","An OpenSSH-based SSH server was detected on the remote host.","n/a","https://www.openssh.com/","
  Service : ssh
  Version : 9.3
  Banner  : SSH-2.0-OpenSSH_9.3
"
"187201","CVE-2023-48795","6.4","Medium","192.168.0.2","tcp","22","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_9.3
  Installed version : 9.3
  Fixed version     : 9.6p1 / 9.6
"
"187201","CVE-2023-51384","6.4","Medium","192.168.0.2","tcp","22","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_9.3
  Installed version : 9.3
  Fixed version     : 9.6p1 / 9.6
"
"187201","CVE-2023-51385","6.4","Medium","192.168.0.2","tcp","22","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_9.3
  Installed version : 9.3
  Fixed version     : 9.6p1 / 9.6
"
"187315","CVE-2023-48795","5.4","Medium","192.168.0.2","tcp","22","SSH Terrapin Prefix Truncation Weakness (CVE-2023-48795)","The remote SSH server is vulnerable to a mitm prefix truncation attack.","The remote SSH server is vulnerable to a man-in-the-middle prefix truncation weakness known as Terrapin. This can
allow a remote, man-in-the-middle attacker to bypass integrity checks and downgrade the connection's security.

Note that this plugin only checks for remote SSH servers that support either ChaCha20-Poly1305 or CBC with
Encrypt-then-MAC and do not support the strict key exchange countermeasures. It does not check for vulnerable software
versions.","Contact the vendor for an update with the strict key exchange countermeasures or disable the affected algorithms.","https://terrapin-attack.com/","Supports following ChaCha20-Poly1305 Client to Server algorithm : chacha20-poly1305@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : umac-64-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : umac-128-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha2-256-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha2-512-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha1-etm@openssh.com
Supports following ChaCha20-Poly1305 Server to Client algorithm : chacha20-poly1305@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : umac-64-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : umac-128-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha2-256-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha2-512-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha1-etm@openssh.com
"
"10114","CVE-1999-0524","0.0","None","192.168.0.5","icmp","0","ICMP Timestamp Request Remote Date Disclosure","It is possible to determine the exact time set on the remote host.","The remote host answers to an ICMP timestamp request.  This allows an
attacker to know the date that is set on the targeted machine, which
may assist an unauthenticated, remote attacker in defeating time-based
authentication protocols.

Timestamps returned from machines running Windows Vista / 7 / 2008 /
2008 R2 are deliberately incorrect, but usually within 1000 seconds of
the actual system time.","Filter out the ICMP timestamp requests (13), and the outgoing ICMP
timestamp replies (14).","","The difference between the local and remote clocks is 103 seconds.
"
"10223","CVE-1999-0632","0.0","None","192.168.0.5","udp","111","RPC portmapper Service Detection","An ONC RPC portmapper is running on the remote host.","The RPC portmapper is running on this port.

The portmapper allows someone to get the port number of each RPC
service running on the remote host by sending either multiple lookup
requests or a DUMP request.","n/a","",""
"10267","","","None","192.168.0.5","tcp","22","SSH Server Type and Version Information","An SSH server is listening on this port.","It is possible to obtain information about the remote SSH server by
sending an empty authentication request.","n/a","","
SSH version : SSH-2.0-OpenSSH_9.3
SSH supported authentication : publickey,password,keyboard-interactive
SSH banner : 
You have logged onto a secured server..All accesses logged

"
"10287","","","None","192.168.0.5","udp","0","Traceroute Information","It was possible to obtain traceroute information.","Makes a traceroute to the remote host.","n/a","","For your information, here is the traceroute from 192.168.0.4 to 192.168.0.5 : 
192.168.0.4
192.168.0.5

Hop Count: 1
"
"10437","","","None","192.168.0.5","tcp","2049","NFS Share Export List","The remote NFS server exports a list of shares.","This plugin retrieves the list of NFS exported shares.","Ensure each share is intended to be exported.","http://www.tldp.org/HOWTO/NFS-HOWTO/security.html","
Here is the export list of 192.168.0.5 :
  
  /data 192.168.0.0/24
"
"10658","","","None","192.168.0.5","tcp","1521","Oracle Database tnslsnr Service Remote Version Disclosure","An Oracle tnslsnr service is listening on the remote port.","The remote host is running the Oracle tnslsnr service, a network
interface to Oracle databases.  This product allows a remote user to
determine the presence and version number of a given Oracle
installation.","Filter incoming traffic to this port so that only authorized hosts can
connect to it.","","A TNS service is running on this port but it
refused to honor an attempt to connect to it.
(The TNS reply code was 4)"
"10863","","","None","192.168.0.5","tcp","5671","SSL Certificate Information","This plugin displays the SSL certificate.","This plugin connects to every SSL-related port and attempts to 
extract and dump the X.509 certificate.","n/a","","Subject Name: 

Common Name: VM-16-13-centos
Organization: server

Issuer Name: 

Common Name: TLSGenSelfSignedtRootCA 2022-08-24T12:12:18.024187
Locality: $$$$

Serial Number: 01 

Version: 3

Signature Algorithm: SHA-256 With RSA Encryption

Not Valid Before: Aug 24 04:12:18 2022 GMT
Not Valid After: Aug 21 04:12:18 2032 GMT

Public Key Info: 

Algorithm: RSA Encryption
Key Length: 2048 bits
Public Key: 00 A3 A3 EE D9 BB 09 34 DE 56 CC 42 41 74 83 F2 AB 05 23 07 
            CE 51 6D E1 92 25 7C FB 70 37 A7 8C 95 FF 77 11 C9 DF F2 87 
            63 3D C8 D8 29 E2 C3 4C A5 03 08 5A F4 DA 4C D4 B4 EC FF 48 
            76 F8 23 E4 35 A2 DB F9 98 C2 CF 7C D8 68 9B 5B 9F 16 DD 6F 
            E4 68 D5 C2 1C 6B C5 D1 EC 6B DD 60 CD 00 FA FB B6 BD 7C B2 
            35 A3 A1 29 36 02 F5 D7 19 15 2F F7 D7 76 4C 30 53 9A 2B 2C 
            42 F0 35 6C 2A CB AE 47 B5 A2 E4 40 3A F4 DF 7D 4E 03 04 04 
            11 94 B4 D0 BD F0 63 9A BD D1 07 0E 31 32 6A EF 17 43 E9 8C 
            C7 73 58 CF 1B 21 41 74 26 0E C8 24 F7 B6 93 BF D8 59 29 5B 
            64 60 4C 7A 21 88 CF 3F 28 B3 C9 34 E0 F1 FF 0E 2B 56 82 6D 
            B1 86 B8 A5 B3 BC F2 51 22 F8 EE FD 1D 01 EC 3F 3B 2E 0A 41 
            33 DB BD CD 0C 0E 8C FC 98 F1 95 71 A7 CD B4 50 74 61 97 FC 
            A4 83 7E 1C 25 33 E7 76 DD 18 83 E7 7E 68 67 FE 79 
Exponent: 01 00 01 

Signature Length: 256 bytes / 2048 bits
Signature: 00 8F AD 34 5F BE 48 E6 E5 FE A3 AC BB 89 31 8B 60 9C 86 DC 
           D2 B2 7C 1B 42 F0 C2 92 24 93 CC 17 8B DC 8B 60 79 21 36 C2 
           BC 08 A7 D9 AB 1E 5A 8A C6 A1 86 32 26 7B 79 75 D7 F6 57 9E 
           0B 49 3B 52 44 0A 3E CB EA 91 AF 9C F5 74 E7 AD FC 01 7D 08 
           07 51 63 ED B8 9F 34 55 86 9E E0 F5 34 03 9B 30 48 55 1A FA 
           69 26 27 03 FE 25 49 DD 55 D2 DD 45 3B 48 E2 96 B8 84 B3 15 
           17 09 51 0B FB 84 72 32 C0 9B 36 DB 58 F3 35 27 1E EF 98 75 
           22 C0 0A D5 05 88 C2 E8 79 58 DA 81 A2 D2 F5 72 5E 1C 43 C1 
           A7 F5 B6 33 9B FA BE D5 C7 93 83 95 D9 86 4A 4F 24 0B 5B 91 
           5B 54 B4 C5 7C D7 F3 00 0A E3 DC D7 CB 38 4B 1C 17 A4 B7 1E 
           2A AB 5B 13 D0 15 01 1B E4 60 2B 1B 32 5D 7D 70 4B B1 EB 1C 
           53 23 90 1C 5C 37 3C A3 00 30 61 0E 20 59 9B 11 AC 43 AF 33 
           67 73 5C 1F 43 33 54 40 D0 1B 7C 88 B5 E4 07 4E 08 

Extension: Basic Constraints (2.5.29.19)
Critical: 0


Extension: Key Usage (2.5.29.15)
Critical: 0
Key Usage: Digital Signature, Key Encipherment


Extension: Extended Key Usage (2.5.29.37)
Critical: 0
Purpose#1: Web Server Authentication (1.3.6.1.5.5.7.3.1)


Extension: Subject Alternative Name (2.5.29.17)
Critical: 0
DNS: VM-16-13-centos
DNS: VM-16-13-centos
DNS: localhost


Extension: Subject Key Identifier (2.5.29.14)
Critical: 0
Subject Key Identifier: 6D 2A A6 BF E1 E6 19 65 F6 44 B8 A7 B7 3D 3E 66 49 86 41 5F 


Extension: Authority Key Identifier (2.5.29.35)
Critical: 0
Key Identifier: 10 6E B5 BE 68 D8 6F 9C C4 EF EB 99 96 FE E2 5F 87 8E 2E 98 


Extension: CRL Distribution Points (2.5.29.31)
Critical: 0
URI: http://localhost:8000/basic.crl


Fingerprints : 

SHA-256 Fingerprint: 3B 0B E8 68 8D 0A A6 BD 05 B7 E3 8D D6 00 85 5B EC 49 4D C1 
                     B3 BA 30 0C A6 3E 87 3C 35 76 E3 F0 
SHA-1 Fingerprint: 44 35 CD 79 35 5C CA 83 B6 C7 32 91 64 6C 4D 03 A0 DF D1 63 
MD5 Fingerprint: A3 EE 8F 46 DA 3F BC 35 AF B1 EE 44 14 83 0D 23 


PEM certificate : 

-----BEGIN CERTIFICATE-----
MIIDzTCCArWgAwIBAgIBATANBgkqhkiG9w0BAQsFADBMMTswOQYDVQQDDDJUTFNHZW5TZWxmU2lnbmVkdFJvb3RDQSAyMDIyLTA4LTI0VDEyOjEyOjE4LjAyNDE4NzENMAsGA1UEBwwEJCQkJDAeFw0yMjA4MjQwNDEyMThaFw0zMjA4MjEwNDEyMThaMCsxGDAWBgNVBAMMD1ZNLTE2LTEzLWNlbnRvczEPMA0GA1UECgwGc2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAo6Pu2bsJNN5WzEJBdIPyqwUjB85RbeGSJXz7cDenjJX/dxHJ3/KHYz3I2Cniw0ylAwha9NpM1LTs/0h2+CPkNaLb+ZjCz3zYaJtbnxbdb+Ro1cIca8XR7GvdYM0A+vu2vXyyNaOhKTYC9dcZFS/313ZMMFOaKyxC8DVsKsuuR7Wi5EA69N99TgMEBBGUtNC98GOavdEHDjEyau8XQ+mMx3NYzxshQXQmDsgk97aTv9hZKVtkYEx6IYjPPyizyTTg8f8OK1aCbbGGuKWzvPJRIvju/R0B7D87LgpBM9u9zQwOjPyY8ZVxp820UHRhl/ykg34cJTPndt0Yg+d+aGf+eQIDAQABo4HaMIHXMAkGA1UdEwQCMAAwCwYDVR0PBAQDAgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMBMDYGA1UdEQQvMC2CD1ZNLTE2LTEzLWNlbnRvc4IPVk0tMTYtMTMtY2VudG9zgglsb2NhbGhvc3QwHQYDVR0OBBYEFG0qpr/h5hll9kS4p7c9PmZJhkFfMB8GA1UdIwQYMBaAFBButb5o2G+cxO/rmZb+4l+Hji6YMDAGA1UdHwQpMCcwJaAjoCGGH2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9iYXNpYy5jcmwwDQYJKoZIhvcNAQELBQADggEBAI+tNF++SObl/qOsu4kxi2CchtzSsnwbQvDCkiSTzBeL3ItgeSE2wrwIp9mrHlqKxqGGMiZ7eXXX9leeC0k7UkQKPsvqka+c9XTnrfwBfQgHUWPtuJ80VYae4PU0A5swSFUa+mkmJwP+JUndVdLdRTtI4pa4hLMVFwlRC/uEcjLAmzbbWPM1Jx7vmHUiwArVBYjC6HlY2oGi0vVyXhxDwaf1tjOb+r7Vx5ODldmGSk8kC1uRW1S0xXzX8wAK49zXyzhLHBektx4qq1sT0BUBG+RgKxsyXX1wS7HrHFMjkBxcNzyjADBhDiBZmxGsQ68zZ3NcH0MzVEDQG3yIteQHTgg=
-----END CERTIFICATE-----"
"10881","","","None","192.168.0.5","tcp","22","SSH Protocol Versions Supported","A SSH server is running on the remote host.","This plugin determines the versions of the SSH protocol supported by
the remote SSH daemon.","n/a","","The remote SSH daemon supports the following versions of the
SSH protocol :

  - 1.99
  - 2.0
"
"10919","","","None","192.168.0.5","tcp","0","Open Port Re-check","Previously open ports are now closed.","One of several ports that were previously open are now closed or
unresponsive.

There are several possible reasons for this :

  - The scan may have caused a service to freeze or stop
    running.

  - An administrator may have stopped a particular service
    during the scanning process.

This might be an availability problem related to the following :

  - A network outage has been experienced during the scan,
    and the remote network cannot be reached anymore by the
    scanner.

  - This scanner may has been blacklisted by the system
    administrator or by an automatic intrusion detection /
    prevention system that detected the scan.

  - The remote host is now down, either because a user
    turned it off during the scan or because a select denial
    of service was effective.

In any case, the audit of the remote host might be incomplete and may
need to be done again.","Steps to resolve this issue include :

- Increase checks_read_timeout and/or reduce max_checks.

- Disable any IPS during the Nessus scan","","Port 5671 was detected as being open but is now closed
"
"11111","","","None","192.168.0.5","tcp","111","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on TCP port 111 :

 - program: 100000 (portmapper), version: 4
 - program: 100000 (portmapper), version: 3
 - program: 100000 (portmapper), version: 2
"
"11111","","","None","192.168.0.5","tcp","2049","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on TCP port 2049 :

 - program: 100003 (nfs), version: 3
 - program: 100003 (nfs), version: 4
 - program: 100227 (nfs_acl), version: 3
"
"11111","","","None","192.168.0.5","tcp","20048","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on TCP port 20048 :

 - program: 100005 (mountd), version: 1
 - program: 100005 (mountd), version: 2
 - program: 100005 (mountd), version: 3
"
"11111","","","None","192.168.0.5","tcp","40013","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on TCP port 40013 :

 - program: 100021 (nlockmgr), version: 1
 - program: 100021 (nlockmgr), version: 3
 - program: 100021 (nlockmgr), version: 4
"
"11111","","","None","192.168.0.5","tcp","56937","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on TCP port 56937 :

 - program: 100024 (status), version: 1
"
"11111","","","None","192.168.0.5","udp","111","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on UDP port 111 :

 - program: 100000 (portmapper), version: 4
 - program: 100000 (portmapper), version: 3
 - program: 100000 (portmapper), version: 2
"
"11111","","","None","192.168.0.5","udp","2049","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on UDP port 2049 :

 - program: 100003 (nfs), version: 3
 - program: 100227 (nfs_acl), version: 3
"
"11111","","","None","192.168.0.5","udp","20048","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on UDP port 20048 :

 - program: 100005 (mountd), version: 1
 - program: 100005 (mountd), version: 2
 - program: 100005 (mountd), version: 3
"
"11111","","","None","192.168.0.5","udp","56852","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on UDP port 56852 :

 - program: 100021 (nlockmgr), version: 1
 - program: 100021 (nlockmgr), version: 3
 - program: 100021 (nlockmgr), version: 4
"
"11111","","","None","192.168.0.5","udp","59029","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on UDP port 59029 :

 - program: 100024 (status), version: 1
"
"11219","","","None","192.168.0.5","tcp","22","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 22/tcp was found to be open"
"11219","","","None","192.168.0.5","tcp","111","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 111/tcp was found to be open"
"11219","","","None","192.168.0.5","tcp","1521","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 1521/tcp was found to be open"
"11219","","","None","192.168.0.5","tcp","2049","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 2049/tcp was found to be open"
"11219","","","None","192.168.0.5","tcp","5671","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 5671/tcp was found to be open"
"11219","","","None","192.168.0.5","tcp","6379","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 6379/tcp was found to be open"
"11219","","","None","192.168.0.5","tcp","20048","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 20048/tcp was found to be open"
"11219","","","None","192.168.0.5","tcp","38957","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 38957/tcp was found to be open"
"11219","","","None","192.168.0.5","tcp","40013","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 40013/tcp was found to be open"
"11219","","","None","192.168.0.5","tcp","56937","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 56937/tcp was found to be open"
"11356","CVE-1999-0170","10.0","Critical","192.168.0.5","udp","2049","NFS Exported Share Information Disclosure","It is possible to access NFS shares on the remote host.","At least one of the NFS shares exported by the remote server could be
mounted by the scanning host.  An attacker may be able to leverage
this to read (and possibly write) files on remote host.","Configure NFS on the remote host so that only authorized hosts can
mount its remote shares.","","
The following NFS shares could be mounted :

+ /data
"
"11356","CVE-1999-0211","10.0","Critical","192.168.0.5","udp","2049","NFS Exported Share Information Disclosure","It is possible to access NFS shares on the remote host.","At least one of the NFS shares exported by the remote server could be
mounted by the scanning host.  An attacker may be able to leverage
this to read (and possibly write) files on remote host.","Configure NFS on the remote host so that only authorized hosts can
mount its remote shares.","","
The following NFS shares could be mounted :

+ /data
"
"11356","CVE-1999-0554","10.0","Critical","192.168.0.5","udp","2049","NFS Exported Share Information Disclosure","It is possible to access NFS shares on the remote host.","At least one of the NFS shares exported by the remote server could be
mounted by the scanning host.  An attacker may be able to leverage
this to read (and possibly write) files on remote host.","Configure NFS on the remote host so that only authorized hosts can
mount its remote shares.","","
The following NFS shares could be mounted :

+ /data
"
"11936","","","None","192.168.0.5","tcp","0","OS Identification","It is possible to guess the remote operating system.","Using a combination of remote probes (e.g., TCP/IP, SMB, HTTP, NTP,
SNMP, etc.), it is possible to guess the name of the remote operating
system in use. It is also possible sometimes to guess the version of
the operating system.","n/a","","
Remote operating system : Linux Kernel 2.6
Confidence level : 65
Method : SinFP

 
The remote host is running Linux Kernel 2.6"
"14788","","","None","192.168.0.5","tcp","0","IP Protocols Scan","This plugin detects the protocols understood by the remote IP stack.","This plugin detects the protocols understood by the remote IP stack.","n/a","http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml","The following IP protocols are accepted on this host:
1	ICMP
2	IGMP
6	TCP
17	UDP
103	PIM
136	UDPLite
"
"17975","","","None","192.168.0.5","tcp","6379","Service Detection (GET request)","The remote service could be identified.","It was possible to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","The remote service appears to be a Redis server, an open source,
persistent key-value data store."
"19506","","","None","192.168.0.5","tcp","0","Nessus Scan Information","This plugin displays information about the Nessus scan.","This plugin displays, for each tested host, information about the
scan itself :

  - The version of the plugin set.
  - The type of scanner (Nessus or Nessus Home).
  - The version of the Nessus Engine.
  - The port scanner(s) used.
  - The port range scanned.
  - The ping round trip time 
  - Whether credentialed or third-party patch management
    checks are possible.
  - Whether the display of superseded patches is enabled
  - The date of the scan.
  - The duration of the scan.
  - The number of hosts scanned in parallel.
  - The number of checks done in parallel.","n/a","","Information about this scan : 

Nessus version : 10.3.1
Nessus build : 20006
Plugin feed version : 202402261439
Scanner edition used : Nessus

ERROR: Your plugins have not been updated since 2024/2/26
Performing a scan with an older plugin set will yield out-of-date results and
produce an incomplete audit. Please run nessus-update-plugins to get the
newest vulnerability checks from Nessus.org.

Scanner OS : WINDOWS
Scanner distribution : win-x86-64
Scan type : Normal
Scan name : 手机报24年4月扫描
Scan policy used : dict_policy_low
Scanner IP : 192.168.0.4
Port scanner(s) : nessus_syn_scanner 
Port range : all
Ping RTT : Unavailable
Thorough tests : yes
Experimental tests : no
Plugin debugging enabled : no
Paranoia level : 1
Report verbosity : 1
Safe checks : yes
Optimize the test : yes
Credentialed checks : no
Patch management checks : None
Display superseded patches : yes (supersedence plugin did not launch)
CGI scanning : enabled
Web application tests : enabled
Web app tests -  Test mode : all_pairs
Web app tests -  Try all HTTP methods : yes
Web app tests -  Maximum run time : 10 minutes.
Web app tests -  Stop at first flaw : param
Max hosts : 15
Max checks : 2
Recv timeout : 15
Backports : None
Allow post-scan editing : Yes
Nessus Plugin Signature Checking : Enabled
Audit File Signature Checking : Disabled
Scan Start Date : 2024/5/7 9:57 China Standard Time
Scan duration : 1859 sec
Scan for malware : no
"
"21643","","","None","192.168.0.5","tcp","5671","SSL Cipher Suites Supported","The remote service encrypts communications using SSL.","This plugin detects which SSL ciphers are supported by the remote
service for encrypting communications.","n/a","https://www.openssl.org/docs/man1.0.2/man1/ciphers.html
http://www.nessus.org/u?e17ffced","
Here is the list of SSL ciphers supported by the remote server :
Each group is reported per SSL Version.

SSL Version : TLSv12
  High Strength Ciphers (>= 112-bit key)

    Name                          Code             KEX           Auth     Encryption             MAC
    ----------------------        ----------       ---           ----     ---------------------  ---
    DHE-RSA-AES128-SHA256         0x00, 0x9E       DH            RSA      AES-GCM(128)           SHA256
    DHE-RSA-AES256-SHA384         0x00, 0x9F       DH            RSA      AES-GCM(256)           SHA384
    ECDHE-RSA-AES128-SHA256       0xC0, 0x2F       ECDH          RSA      AES-GCM(128)           SHA256
    ECDHE-RSA-AES256-SHA384       0xC0, 0x30       ECDH          RSA      AES-GCM(256)           SHA384
    DHE-RSA-AES128-SHA            0x00, 0x33       DH            RSA      AES-CBC(128)           SHA1
    DHE-RSA-AES256-SHA            0x00, 0x39       DH            RSA      AES-CBC(256)           SHA1
    ECDHE-RSA-AES128-SHA          0xC0, 0x13       ECDH          RSA      AES-CBC(128)           SHA1
    ECDHE-RSA-AES256-SHA          0xC0, 0x14       ECDH          RSA      AES-CBC(256)           SHA1
    DHE-RSA-AES128-SHA256         0x00, 0x67       DH            RSA      AES-CBC(128)           SHA256
    DHE-RSA-AES256-SHA256         0x00, 0x6B       DH            RSA      AES-CBC(256)           SHA256
    ECDHE-RSA-AES128-SHA256       0xC0, 0x27       ECDH          RSA      AES-CBC(128)           SHA256
    ECDHE-RSA-AES256-SHA384       0xC0, 0x28       ECDH          RSA      AES-CBC(256)           SHA384

The fields above are :

  {Tenable ciphername}
  {Cipher ID code}
  Kex={key exchange}
  Auth={authentication}
  Encrypt={symmetric encryption method}
  MAC={message authentication code}
  {export flag}
"
"22073","","","None","192.168.0.5","tcp","1521","Oracle Database Detection","A database service is listening on the remote host.","The remote host is running an Oracle database server. 

It may be possible to extract the version number of the remote TNS
(Transparent Network Substrate) listener by sending a 'VERSION'
request to the TNS listener service operating on this port. 

Note that the version of the TNS listener does not necessarily reflect
the version of the Oracle database it provides access to.","Restrict access to the database to allowed IPs only.","","
  The banner of the remote Oracle TNS listener on port 1521
  contains the following version :

    TNSLSNR for : Version 19.0.0.0.0


  Note: This banner can be read without authentication.
"
"22964","","","None","192.168.0.5","tcp","22","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","An SSH server is running on this port."
"22964","","","None","192.168.0.5","tcp","5671","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","A TLSv1.2 server answered on this port.
"
"25220","","","None","192.168.0.5","tcp","0","TCP/IP Timestamps Supported","The remote service implements TCP timestamps.","The remote host implements TCP timestamps, as defined by RFC1323.  A
side effect of this feature is that the uptime of the remote host can
sometimes be computed.","n/a","http://www.ietf.org/rfc/rfc1323.txt",""
"35297","","","None","192.168.0.5","tcp","5671","SSL Service Requests Client Certificate","The remote service requests an SSL client certificate.","The remote service encrypts communications using SSL/TLS, requests a
client certificate, and may require a valid certificate in order to
establish a connection to the underlying service.","n/a","","
A TLSv12 server is listening on this port that requests a client certificate.
"
"45590","","","None","192.168.0.5","tcp","0","Common Platform Enumeration (CPE)","It was possible to enumerate CPE names that matched on the remote
system.","By using information obtained from a Nessus scan, this plugin reports
CPE (Common Platform Enumeration) matches for various hardware and
software products found on a host. 

Note that if an official CPE is not available for the product, this
plugin computes the best possible CPE based on the information
available from the scan.","n/a","http://cpe.mitre.org/
https://nvd.nist.gov/products/cpe","
The remote operating system matched the following CPE : 

  cpe:/o:linux:linux_kernel -> Linux Kernel

Following application CPE's matched on the remote system : 

  cpe:/a:openbsd:openssh:9.3 -> OpenBSD OpenSSH
  cpe:/a:oracle:database_server -> Oracle Database Server
  cpe:/a:pivotal_software:redis -> Piviotal Software Redis
"
"51192","","6.4","Medium","192.168.0.5","tcp","5671","SSL Certificate Cannot Be Trusted","The SSL certificate for this service cannot be trusted.","The server's X.509 certificate cannot be trusted. This situation can
occur in three different ways, in which the chain of trust can be
broken, as stated below :

  - First, the top of the certificate chain sent by the
    server might not be descended from a known public
    certificate authority. This can occur either when the
    top of the chain is an unrecognized, self-signed
    certificate, or when intermediate certificates are
    missing that would connect the top of the certificate
    chain to a known public certificate authority.

  - Second, the certificate chain may contain a certificate
    that is not valid at the time of the scan. This can
    occur either when the scan occurs before one of the
    certificate's 'notBefore' dates, or after one of the
    certificate's 'notAfter' dates.

  - Third, the certificate chain may contain a signature
    that either didn't match the certificate's information
    or could not be verified. Bad signatures can be fixed by
    getting the certificate with the bad signature to be
    re-signed by its issuer. Signatures that could not be
    verified are the result of the certificate's issuer
    using a signing algorithm that Nessus either does not
    support or does not recognize.

If the remote host is a public host in production, any break in the
chain makes it more difficult for users to verify the authenticity and 
identity of the web server. This could make it easier to carry out 
man-in-the-middle attacks against the remote host.","Purchase or generate a proper SSL certificate for this service.","https://www.itu.int/rec/T-REC-X.509/en
https://en.wikipedia.org/wiki/X.509","
The following certificate was at the top of the certificate
chain sent by the remote host, but it is signed by an unknown
certificate authority :

|-Subject : CN=TLSGenSelfSignedtRootCA 2022-08-24T12:12:18.024187/L=$$$$
|-Issuer  : CN=TLSGenSelfSignedtRootCA 2022-08-24T12:12:18.024187/L=$$$$
"
"53335","","","None","192.168.0.5","tcp","111","RPC portmapper (TCP)","An ONC RPC portmapper is running on the remote host.","The RPC portmapper is running on this port. 

The portmapper allows someone to get the port number of each RPC
service running on the remote host by sending either multiple lookup
requests or a DUMP request.","n/a","",""
"54615","","","None","192.168.0.5","tcp","0","Device Type","It is possible to guess the remote device type.","Based on the remote operating system, it is possible to determine
what the remote system type is (eg: a printer, router, general-purpose
computer, etc).","n/a","","Remote device type : general-purpose
Confidence level : 65
"
"56984","","","None","192.168.0.5","tcp","5671","SSL / TLS Versions Supported","The remote service encrypts communications.","This plugin detects which SSL and TLS versions are supported by the
remote service for encrypting communications.","n/a","","
This port supports TLSv1.2.
"
"57041","","","None","192.168.0.5","tcp","5671","SSL Perfect Forward Secrecy Cipher Suites Supported","The remote service supports the use of SSL Perfect Forward Secrecy
ciphers, which maintain confidentiality even if the key is stolen.","The remote host supports the use of SSL ciphers that offer Perfect
Forward Secrecy (PFS) encryption.  These cipher suites ensure that
recorded SSL traffic cannot be broken at a future date if the server's
private key is compromised.","n/a","https://www.openssl.org/docs/manmaster/man1/ciphers.html
https://en.wikipedia.org/wiki/Diffie-Hellman_key_exchange
https://en.wikipedia.org/wiki/Perfect_forward_secrecy","
Here is the list of SSL PFS ciphers supported by the remote server :

  High Strength Ciphers (>= 112-bit key)

    Name                          Code             KEX           Auth     Encryption             MAC
    ----------------------        ----------       ---           ----     ---------------------  ---
    DHE-RSA-AES128-SHA256         0x00, 0x9E       DH            RSA      AES-GCM(128)           SHA256
    DHE-RSA-AES256-SHA384         0x00, 0x9F       DH            RSA      AES-GCM(256)           SHA384
    ECDHE-RSA-AES128-SHA256       0xC0, 0x2F       ECDH          RSA      AES-GCM(128)           SHA256
    ECDHE-RSA-AES256-SHA384       0xC0, 0x30       ECDH          RSA      AES-GCM(256)           SHA384
    DHE-RSA-AES128-SHA            0x00, 0x33       DH            RSA      AES-CBC(128)           SHA1
    DHE-RSA-AES256-SHA            0x00, 0x39       DH            RSA      AES-CBC(256)           SHA1
    ECDHE-RSA-AES128-SHA          0xC0, 0x13       ECDH          RSA      AES-CBC(128)           SHA1
    ECDHE-RSA-AES256-SHA          0xC0, 0x14       ECDH          RSA      AES-CBC(256)           SHA1
    DHE-RSA-AES128-SHA256         0x00, 0x67       DH            RSA      AES-CBC(128)           SHA256
    DHE-RSA-AES256-SHA256         0x00, 0x6B       DH            RSA      AES-CBC(256)           SHA256
    ECDHE-RSA-AES128-SHA256       0xC0, 0x27       ECDH          RSA      AES-CBC(128)           SHA256
    ECDHE-RSA-AES256-SHA384       0xC0, 0x28       ECDH          RSA      AES-CBC(256)           SHA384

The fields above are :

  {Tenable ciphername}
  {Cipher ID code}
  Kex={key exchange}
  Auth={authentication}
  Encrypt={symmetric encryption method}
  MAC={message authentication code}
  {export flag}
"
"57582","","6.4","Medium","192.168.0.5","tcp","5671","SSL Self-Signed Certificate","The SSL certificate chain for this service ends in an unrecognized
self-signed certificate.","The X.509 certificate chain for this service is not signed by a
recognized certificate authority.  If the remote host is a public host
in production, this nullifies the use of SSL as anyone could establish
a man-in-the-middle attack against the remote host. 

Note that this plugin does not check for certificate chains that end
in a certificate that is not self-signed, but is signed by an
unrecognized certificate authority.","Purchase or generate a proper SSL certificate for this service.","","
The following certificate was found at the top of the certificate
chain sent by the remote host, but is self-signed and was not
found in the list of known certificate authorities :

|-Subject : CN=TLSGenSelfSignedtRootCA 2022-08-24T12:12:18.024187/L=$$$$
"
"66334","","","None","192.168.0.5","tcp","0","Patch Report","The remote host is missing several patches.","The remote host is missing one or more security patches. This plugin lists the newest version of each patch to install 
to make sure the remote host is up-to-date.

Note: Because the 'Show missing patches that have been superseded' setting in your scan policy depends on this plugin,
it will always run and cannot be disabled.","Install the patches listed below.","","

. You need to take the following action :

[ OpenSSH < 9.6 Multiple Vulnerabilities (187201) ]

+ Action to take : Upgrade to OpenSSH version 9.6 or later.


"
"70544","","","None","192.168.0.5","tcp","5671","SSL Cipher Block Chaining Cipher Suites Supported","The remote service supports the use of SSL Cipher Block Chaining
ciphers, which combine previous blocks with subsequent ones.","The remote host supports the use of SSL ciphers that operate in Cipher
Block Chaining (CBC) mode.  These cipher suites offer additional
security over Electronic Codebook (ECB) mode, but have the potential to
leak information if used improperly.","n/a","https://www.openssl.org/docs/manmaster/man1/ciphers.html
http://www.nessus.org/u?cc4a822a
https://www.openssl.org/~bodo/tls-cbc.txt","
Here is the list of SSL CBC ciphers supported by the remote server :

  High Strength Ciphers (>= 112-bit key)

    Name                          Code             KEX           Auth     Encryption             MAC
    ----------------------        ----------       ---           ----     ---------------------  ---
    DHE-RSA-AES128-SHA            0x00, 0x33       DH            RSA      AES-CBC(128)           SHA1
    DHE-RSA-AES256-SHA            0x00, 0x39       DH            RSA      AES-CBC(256)           SHA1
    ECDHE-RSA-AES128-SHA          0xC0, 0x13       ECDH          RSA      AES-CBC(128)           SHA1
    ECDHE-RSA-AES256-SHA          0xC0, 0x14       ECDH          RSA      AES-CBC(256)           SHA1
    DHE-RSA-AES128-SHA256         0x00, 0x67       DH            RSA      AES-CBC(128)           SHA256
    DHE-RSA-AES256-SHA256         0x00, 0x6B       DH            RSA      AES-CBC(256)           SHA256
    ECDHE-RSA-AES128-SHA256       0xC0, 0x27       ECDH          RSA      AES-CBC(128)           SHA256
    ECDHE-RSA-AES256-SHA384       0xC0, 0x28       ECDH          RSA      AES-CBC(256)           SHA384

The fields above are :

  {Tenable ciphername}
  {Cipher ID code}
  Kex={key exchange}
  Auth={authentication}
  Encrypt={symmetric encryption method}
  MAC={message authentication code}
  {export flag}
"
"70657","","","None","192.168.0.5","tcp","22","SSH Algorithms and Languages Supported","An SSH server is listening on this port.","This script detects which algorithms and languages are supported by
the remote service for encrypting communications.","n/a","","
Nessus negotiated the following encryption algorithm with the server : 

The server supports the following options for kex_algorithms : 

  diffie-hellman-group-exchange-sha1
  diffie-hellman-group-exchange-sha256
  diffie-hellman-group1-sha1
  diffie-hellman-group14-sha1
  ecdh-sha2-nistp256
  ecdh-sha2-nistp384
  ecdh-sha2-nistp521
  kex-strict-s-v00@openssh.com

The server supports the following options for server_host_key_algorithms : 

  ecdsa-sha2-nistp256
  rsa-sha2-256
  rsa-sha2-512
  ssh-ed25519
  ssh-rsa

The server supports the following options for encryption_algorithms_client_to_server : 

  aes128-ctr
  aes192-ctr
  aes256-ctr

The server supports the following options for encryption_algorithms_server_to_client : 

  aes128-ctr
  aes192-ctr
  aes256-ctr

The server supports the following options for mac_algorithms_client_to_server : 

  hmac-sha1

The server supports the following options for mac_algorithms_server_to_client : 

  hmac-sha1

The server supports the following options for compression_algorithms_client_to_server : 

  none
  zlib@openssh.com

The server supports the following options for compression_algorithms_server_to_client : 

  none
  zlib@openssh.com
"
"94761","","","None","192.168.0.5","tcp","5671","SSL Root Certification Authority Certificate Information","A root Certification Authority certificate was found at the top of the
certificate chain.","The remote service uses an SSL certificate chain that contains a
self-signed root Certification Authority certificate at the top of the
chain.","Ensure that use of this root Certification Authority certificate
complies with your organization's acceptable use and security
policies.","https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc778623(v=ws.10)","
The following root Certification Authority certificate was found :

|-Subject             : CN=TLSGenSelfSignedtRootCA 2022-08-24T12:12:18.024187/L=$$$$
|-Issuer              : CN=TLSGenSelfSignedtRootCA 2022-08-24T12:12:18.024187/L=$$$$
|-Valid From          : Aug 24 04:12:18 2022 GMT
|-Valid To            : Aug 21 04:12:18 2032 GMT
|-Signature Algorithm : SHA-256 With RSA Encryption
"
"100635","","","None","192.168.0.5","tcp","6379","Redis Server Detection","A document-oriented database system is running on the remote host.","Redis, a document-oriented database system, is running on the remote
host.","n/a","https://redis.io","
  Version : unknown
"
"110723","","","None","192.168.0.5","tcp","0","Target Credential Status by Authentication Protocol - No Credentials Provided","Nessus was able to find common ports used for local checks,
however, no credentials were provided in the scan policy.","Nessus was not able to successfully authenticate directly to the
remote target on an available authentication protocol. Nessus was
able to connect to the remote port and identify that the service
running on the port supports an authentication protocol, but Nessus
failed to authenticate to the remote service using the provided
credentials. There may have been a protocol failure that prevented
authentication from being attempted or all of the provided credentials
for the authentication protocol may be invalid. See plugin output for
error details.

Please note the following :

- This plugin reports per protocol, so it is possible for
  valid credentials to be provided for one protocol and not
  another. For example, authentication may succeed via SSH
  but fail via SMB, while no credentials were provided for
  an available SNMP service.

- Providing valid credentials for all available
  authentication protocols may improve scan coverage, but
  the value of successful authentication for a given
  protocol may vary from target to target depending upon
  what data (if any) is gathered from the target via that
  protocol. For example, successful authentication via SSH
  is more valuable for Linux targets than for Windows
  targets, and likewise successful authentication via SMB
  is more valuable for Windows targets than for Linux
  targets.","n/a","","SSH was detected on port 22 but no credentials were provided.
SSH local checks were not enabled.

"
"117886","","","None","192.168.0.5","tcp","0","OS Security Patch Assessment Not Available","OS Security Patch Assessment is not available.","OS Security Patch Assessment is not available on the remote host.
This does not necessarily indicate a problem with the scan.
Credentials may not have been provided, OS security patch assessment
may not be supported for the target, the target may not have been
identified, or another issue may have occurred that prevented OS
security patch assessment from being available. See plugin output for
details.

This plugin reports non-failure information impacting the availability
of OS Security Patch Assessment. Failure information is reported by
plugin 21745 : 'OS Security Patch Assessment failed'.  If a target
host is not supported for OS Security Patch Assessment, plugin
110695 : 'OS Security Patch Assessment Checks Not Supported' will
report concurrently with this plugin.","n/a","","
The following issues were reported :

  - Plugin      : no_local_checks_credentials.nasl
    Plugin ID   : 110723
    Plugin Name : Target Credential Status by Authentication Protocol - No Credentials Provided
    Message     : 
Credentials were not provided for detected SSH service.
"
"132634","","","None","192.168.0.5","tcp","0","Deprecated SSLv2 Connection Attempts","Secure Connections, using a deprecated protocol were attempted as part of the scan","This plugin enumerates and reports any SSLv2 connections which 
  were attempted as part of a scan. This protocol has been deemed prohibited since 2011 because of security 
  vulnerabilities and most major ssl libraries such as openssl, nss, mbed and wolfssl do not provide this functionality
  in their latest versions. This protocol has been deprecated in Nessus 8.9 and later.","N/A","","
Nessus attempted the following SSLv2 connection(s) as part of this scan: 

Plugin ID: 42476
Timestamp: 2024-05-07 02:01:49
Port: 22

"
"136318","","","None","192.168.0.5","tcp","5671","TLS Version 1.2 Protocol Detection","The remote service encrypts traffic using a version of TLS.","The remote service accepts connections encrypted using TLS 1.2.","N/A","https://tools.ietf.org/html/rfc5246","TLSv1.2 is enabled and the server supports at least one cipher."
"149334","","","None","192.168.0.5","tcp","22","SSH Password Authentication Accepted","The SSH server on the remote host accepts password authentication.","The SSH server on the remote host accepts password authentication.","n/a","https://tools.ietf.org/html/rfc4252#section-8",""
"153588","","","None","192.168.0.5","tcp","22","SSH SHA-1 HMAC Algorithms Enabled","The remote SSH server is configured to enable SHA-1 HMAC algorithms.","The remote SSH server is configured to enable SHA-1 HMAC algorithms.

Although NIST has formally deprecated use of SHA-1 for digital signatures, SHA-1 is still considered secure for HMAC as
the security of HMAC does not rely on the underlying hash function being resistant to collisions.

Note that this plugin only checks for the options of the remote SSH server.","n/a","","
The following client-to-server SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1

The following server-to-client SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1
"
"153953","","2.6","Low","192.168.0.5","tcp","22","SSH Weak Key Exchange Algorithms Enabled","The remote SSH server is configured to allow weak key exchange algorithms.","The remote SSH server is configured to allow key exchange algorithms which are considered weak.

This is based on the IETF draft document Key Exchange (KEX) Method Updates and Recommendations for Secure Shell (SSH)
RFC9142. Section 4 lists guidance on key exchange algorithms that SHOULD NOT and MUST NOT be
enabled. This includes:

  diffie-hellman-group-exchange-sha1

  diffie-hellman-group1-sha1

  gss-gex-sha1-*

  gss-group1-sha1-*

  gss-group14-sha1-*

  rsa1024-sha1

Note that this plugin only checks for the options of the SSH server, and it does not check for vulnerable software
versions.","Contact the vendor or consult product documentation to disable the weak algorithms.","https://datatracker.ietf.org/doc/html/rfc9142","
The following weak key exchange algorithms are enabled : 

  diffie-hellman-group-exchange-sha1
  diffie-hellman-group1-sha1
"
"156899","","","None","192.168.0.5","tcp","5671","SSL/TLS Recommended Cipher Suites","The remote host advertises discouraged SSL/TLS ciphers.","The remote host has open SSL/TLS ports which advertise discouraged cipher suites. It is recommended to only enable
support for the following cipher suites:

TLSv1.3:
  - 0x13,0x01 TLS13_AES_128_GCM_SHA256
  - 0x13,0x02 TLS13_AES_256_GCM_SHA384
  - 0x13,0x03 TLS13_CHACHA20_POLY1305_SHA256

TLSv1.2:
  - 0xC0,0x2B ECDHE-ECDSA-AES128-GCM-SHA256
  - 0xC0,0x2F ECDHE-RSA-AES128-GCM-SHA256
  - 0xC0,0x2C ECDHE-ECDSA-AES256-GCM-SHA384
  - 0xC0,0x30 ECDHE-RSA-AES256-GCM-SHA384
  - 0xCC,0xA9 ECDHE-ECDSA-CHACHA20-POLY1305
  - 0xCC,0xA8 ECDHE-RSA-CHACHA20-POLY1305

This is the recommended configuration for the vast majority of services, as it is highly secure and compatible with
nearly every client released in the last five (or more) years.","Only enable support for recommened cipher suites.","https://wiki.mozilla.org/Security/Server_Side_TLS
https://ssl-config.mozilla.org/","The remote host has listening SSL/TLS ports which advertise the discouraged cipher suites outlined below:


  High Strength Ciphers (>= 112-bit key)

    Name                          Code             KEX           Auth     Encryption             MAC
    ----------------------        ----------       ---           ----     ---------------------  ---
    DHE-RSA-AES128-SHA256         0x00, 0x9E       DH            RSA      AES-GCM(128)           SHA256
    DHE-RSA-AES256-SHA384         0x00, 0x9F       DH            RSA      AES-GCM(256)           SHA384
    DHE-RSA-AES128-SHA            0x00, 0x33       DH            RSA      AES-CBC(128)           SHA1
    DHE-RSA-AES256-SHA            0x00, 0x39       DH            RSA      AES-CBC(256)           SHA1
    ECDHE-RSA-AES128-SHA          0xC0, 0x13       ECDH          RSA      AES-CBC(128)           SHA1
    ECDHE-RSA-AES256-SHA          0xC0, 0x14       ECDH          RSA      AES-CBC(256)           SHA1
    DHE-RSA-AES128-SHA256         0x00, 0x67       DH            RSA      AES-CBC(128)           SHA256
    DHE-RSA-AES256-SHA256         0x00, 0x6B       DH            RSA      AES-CBC(256)           SHA256
    ECDHE-RSA-AES128-SHA256       0xC0, 0x27       ECDH          RSA      AES-CBC(128)           SHA256
    ECDHE-RSA-AES256-SHA384       0xC0, 0x28       ECDH          RSA      AES-CBC(256)           SHA384

The fields above are :

  {Tenable ciphername}
  {Cipher ID code}
  Kex={key exchange}
  Auth={authentication}
  Encrypt={symmetric encryption method}
  MAC={message authentication code}
  {export flag}
"
"181418","","","None","192.168.0.5","tcp","22","OpenSSH Detection","An OpenSSH-based SSH server was detected on the remote host.","An OpenSSH-based SSH server was detected on the remote host.","n/a","https://www.openssh.com/","
  Service : ssh
  Version : 9.3
  Banner  : SSH-2.0-OpenSSH_9.3
"
"187201","CVE-2023-48795","6.4","Medium","192.168.0.5","tcp","22","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_9.3
  Installed version : 9.3
  Fixed version     : 9.6p1 / 9.6
"
"187201","CVE-2023-51384","6.4","Medium","192.168.0.5","tcp","22","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_9.3
  Installed version : 9.3
  Fixed version     : 9.6p1 / 9.6
"
"187201","CVE-2023-51385","6.4","Medium","192.168.0.5","tcp","22","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_9.3
  Installed version : 9.3
  Fixed version     : 9.6p1 / 9.6
"
"10114","CVE-1999-0524","0.0","None","192.168.0.8","icmp","0","ICMP Timestamp Request Remote Date Disclosure","It is possible to determine the exact time set on the remote host.","The remote host answers to an ICMP timestamp request.  This allows an
attacker to know the date that is set on the targeted machine, which
may assist an unauthenticated, remote attacker in defeating time-based
authentication protocols.

Timestamps returned from machines running Windows Vista / 7 / 2008 /
2008 R2 are deliberately incorrect, but usually within 1000 seconds of
the actual system time.","Filter out the ICMP timestamp requests (13), and the outgoing ICMP
timestamp replies (14).","","The difference between the local and remote clocks is 244 seconds.
"
"10223","CVE-1999-0632","0.0","None","192.168.0.8","udp","111","RPC portmapper Service Detection","An ONC RPC portmapper is running on the remote host.","The RPC portmapper is running on this port.

The portmapper allows someone to get the port number of each RPC
service running on the remote host by sending either multiple lookup
requests or a DUMP request.","n/a","",""
"10267","","","None","192.168.0.8","tcp","22","SSH Server Type and Version Information","An SSH server is listening on this port.","It is possible to obtain information about the remote SSH server by
sending an empty authentication request.","n/a","","
SSH version : SSH-2.0-OpenSSH_8.8
SSH supported authentication : publickey,password
"
"10267","","","None","192.168.0.8","tcp","7122","SSH Server Type and Version Information","An SSH server is listening on this port.","It is possible to obtain information about the remote SSH server by
sending an empty authentication request.","n/a","","
SSH version : SSH-2.0-OpenSSH_8.8
SSH supported authentication : publickey,password
"
"10287","","","None","192.168.0.8","udp","0","Traceroute Information","It was possible to obtain traceroute information.","Makes a traceroute to the remote host.","n/a","","For your information, here is the traceroute from 192.168.0.4 to 192.168.0.8 : 
192.168.0.4
192.168.0.8

Hop Count: 1
"
"10863","","","None","192.168.0.8","tcp","8653","SSL Certificate Information","This plugin displays the SSL certificate.","This plugin connects to every SSL-related port and attempts to 
extract and dump the X.509 certificate.","n/a","","Subject Name: 

Country: CN
State/Province: 重庆市
Organization: 重庆华龙数智科技有限公司
Common Name: *.cqliving.com

Issuer Name: 

Country: US
Organization: DigiCert Inc
Organization Unit: www.digicert.com
Common Name: GeoTrust RSA CA 2018

Serial Number: 02 00 20 2C 09 8E B6 75 4B 5B C0 37 79 70 C6 B1 

Version: 3

Signature Algorithm: SHA-256 With RSA Encryption

Not Valid Before: Nov 07 00:00:00 2023 GMT
Not Valid After: Nov 07 23:59:59 2024 GMT

Public Key Info: 

Algorithm: RSA Encryption
Key Length: 2048 bits
Public Key: 00 94 A3 56 10 E6 8D D4 20 9C C4 CD 03 04 04 05 01 7B A5 42 
            1B 68 2D 05 95 44 07 B3 42 32 13 96 01 4F 2A D1 40 28 F0 B4 
            FD FD 34 0E D8 5E A3 0B B0 F2 6F 67 D9 DD 2C 69 57 25 23 2A 
            EC BE 4A 3E 6D EE 8F 09 38 65 FF 14 E2 F1 01 A9 1F 45 F6 F0 
            87 45 AC E6 D1 10 78 77 D0 E5 FA E9 F4 85 4D A8 0E 95 59 0C 
            03 DB E8 E5 0C 85 56 CA F3 C3 F6 DF ED B2 B1 3E A5 C3 04 72 
            82 2F 01 B2 1F 14 84 C5 1F FB 56 0B BA 5A AB 33 3F 8B 11 A9 
            C3 F5 C4 3A E4 60 F1 B2 E4 EA EE A1 3C 4A D3 10 6D EE 67 D0 
            E0 26 8E 43 FA C6 88 80 4A E0 6D 0B EC 1D 1E FE 91 D7 E1 9C 
            C5 4A 9D 1A 4C 7C 95 13 ED AE 47 BF EC ED 1E 91 B9 C6 85 A4 
            1A 7F 29 32 86 0A D2 5D B8 30 0C EE 62 B5 29 EB 6B E3 3D 71 
            78 54 D2 A1 C4 A3 EA 4C E9 00 68 84 5E 03 63 A1 BC B0 75 F6 
            A3 9F 33 A9 EE 1D 68 8D 74 02 0E 93 60 A0 50 53 63 
Exponent: 01 00 01 

Signature Length: 256 bytes / 2048 bits
Signature: 00 11 E4 44 92 86 7B E8 DC A1 B5 97 7F 7F 39 9E 7B 47 18 B9 
           BC AD A7 37 B9 70 01 85 98 E4 AD 0E 84 F3 75 19 3E AC 89 89 
           19 C6 D0 D1 B7 E8 EE B3 AD 35 03 11 3A 3A 36 88 90 86 2B D3 
           2E 01 B7 87 5E F7 E9 03 DA DF 72 7B 8F C6 A0 7C 01 31 B2 24 
           81 EB 3B AE 3E 0B 06 CF AA 73 55 B9 C5 FF 45 F4 2B 2A 34 CB 
           3C 9D 19 0A 45 7A 53 F6 A0 2A 0C 44 B2 D0 42 F8 47 93 F1 6B 
           AA 9E 64 39 37 6D F9 30 94 62 9F 16 40 DA 64 9A FE B1 C2 F3 
           B6 0C 88 95 92 DC F7 35 30 CD 46 27 6F 00 8E D0 B8 BB FE 49 
           AC A8 A4 C8 70 71 3C BA 0B 75 CF 00 14 68 7A 66 2E F8 E9 85 
           6F 53 75 44 3E C4 5A 64 B3 FA 0F 18 19 0F 11 3C 1B C1 5C 07 
           11 2C 47 00 DC C2 45 FC E9 C6 B3 0A 5F 5A 8D FE BE B6 F9 E7 
           C0 37 27 57 80 13 83 94 FF 49 FB A1 C2 FC 8D 28 23 54 63 B3 
           64 FF D1 11 EC B7 B2 23 3A 31 CA 88 3A 06 45 24 31 

Extension: Authority Key Identifier (2.5.29.35)
Critical: 0
Key Identifier: 90 58 FF B0 9C 75 A8 51 54 77 B1 ED F2 A3 43 16 38 9E 6C C5 


Extension: Subject Key Identifier (2.5.29.14)
Critical: 0
Subject Key Identifier: 32 61 D6 2C E2 EE FC 85 4C 18 03 5D 03 BC 9E 1A 61 D4 41 9B 


Extension: Subject Alternative Name (2.5.29.17)
Critical: 0
DNS: *.cqliving.com
DNS: cqliving.com


Extension: Policies (2.5.29.32)
Critical: 0
Policy ID #1: 2.23.140.1.2.2
Qualifier ID #1: Certification Practice Statement (1.3.6.1.5.5.7.2.1)
CPS URI: http://www.digicert.com/CPS


Extension: Key Usage (2.5.29.15)
Critical: 1
Key Usage: Digital Signature, Key Encipherment


Extension: Extended Key Usage (2.5.29.37)
Critical: 0
Purpose#1: Web Server Authentication (1.3.6.1.5.5.7.3.1)
Purpose#2: Web Client Authentication (1.3.6.1.5.5.7.3.2)


Extension: CRL Distribution Points (2.5.29.31)
Critical: 0
URI: http://cdp.geotrust.com/GeoTrustRSACA2018.crl


Extension: Authority Information Access (1.3.6.1.5.5.7.1.1)
Critical: 0
Method#1: Online Certificate Status Protocol
URI: http://status.geotrust.com
Method#2: Certificate Authority Issuers
URI: http://cacerts.geotrust.com/GeoTrustRSACA2018.crt


Extension: Basic Constraints (2.5.29.19)
Critical: 1


Extension: 1.3.6.1.4.1.11129.2.4.2
Critical: 0
Data: 04 82 01 68 01 66 00 75 00 EE CD D0 64 D5 DB 1A CE C5 5C B7 
      9D B4 CD 13 A2 32 87 46 7C BC EC DE C3 51 48 59 46 71 1F B5 
      9B 00 00 01 8B A8 4C F5 58 00 00 04 03 00 46 30 44 02 20 60 
      28 5B ED E6 63 BC 39 F4 00 0A EC 34 79 30 96 BC 64 6D 3B 25 
      A6 15 03 38 0F CB F8 7D 7F 81 C4 02 20 52 B1 6A C1 73 B9 E2 
      1C 18 AD 76 76 E9 F9 93 18 51 5F FC 33 B4 FF 34 A7 11 0E 6D 
      42 0A 94 02 6B 00 76 00 48 B0 E3 6B DA A6 47 34 0F E5 6A 02 
      FA 9D 30 EB 1C 52 01 CB 56 DD 2C 81 D9 BB BF AB 39 D8 84 73 
      00 00 01 8B A8 4C F5 23 00 00 04 03 00 47 30 45 02 21 00 96 
      8C 0B 96 61 FB B0 7B 9A D8 14 D2 1F 2A D9 25 20 FA 38 3E 3D 
      D1 10 22 4A BC 68 04 E1 EC F6 09 02 20 43 46 AA D9 B2 01 36 
      E1 AE 89 55 F6 39 88 2E 01 5D 66 93 6D C8 6C 64 34 AB 92 AD 
      27 09 F3 3B D4 00 75 00 3F 17 4B 4F D7 22 47 58 94 1D 65 1C 
      84 BE 0D 12 ED 90 37 7F 1F 85 6A EB C1 BF 28 85 EC F8 64 6E 
      00 00 01 8B A8 4C F5 58 00 00 04 03 00 46 30 44 02 20 71 CD 
      BB 1D 72 17 26 51 D2 97 0D 7D CC E6 E1 EC 07 DC A3 A4 40 42 
      E6 76 0E 82 14 05 5C 02 B9 E0 02 20 56 40 BE 08 92 F1 1F 3E 
      4A A8 B8 D0 52 1C 30 21 A0 95 1D 34 92 CB 02 9F 96 AD 9E 4A 
      35 EF 96 CE 


Fingerprints : 

SHA-256 Fingerprint: 3F A9 37 65 68 B6 5D CA 7C 9C D6 18 1D 8D 37 76 42 9D E9 6E 
                     9D BA 8E 39 D6 0E 50 28 CF 0D 27 20 
SHA-1 Fingerprint: 09 B6 94 92 1B FC D0 49 72 FF 75 EB E4 FF 8F E2 92 E5 2D 46 
MD5 Fingerprint: 9F 21 EB 64 C8 DA 6D 97 34 AF 5B AE 76 4A DC 3A 


PEM certificate : 

-----BEGIN CERTIFICATE-----
MIIGdDCCBVygAwIBAgIQAgAgLAmOtnVLW8A3eXDGsTANBgkqhkiG9w0BAQsFADBeMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMR0wGwYDVQQDExRHZW9UcnVzdCBSU0EgQ0EgMjAxODAeFw0yMzExMDcwMDAwMDBaFw0yNDExMDcyMzU5NTlaMGkxCzAJBgNVBAYTAkNOMRIwEAYDVQQIDAnph43luobluIIxLTArBgNVBAoMJOmHjeW6huWNjum+meaVsOaZuuenkeaKgOaciemZkOWFrOWPuDEXMBUGA1UEAwwOKi5jcWxpdmluZy5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCUo1YQ5o3UIJzEzQMEBAUBe6VCG2gtBZVEB7NCMhOWAU8q0UAo8LT9/TQO2F6jC7Dyb2fZ3SxpVyUjKuy+Sj5t7o8JOGX/FOLxAakfRfbwh0Ws5tEQeHfQ5frp9IVNqA6VWQwD2+jlDIVWyvPD9t/tsrE+pcMEcoIvAbIfFITFH/tWC7paqzM/ixGpw/XEOuRg8bLk6u6hPErTEG3uZ9DgJo5D+saIgErgbQvsHR7+kdfhnMVKnRpMfJUT7a5Hv+ztHpG5xoWkGn8pMoYK0l24MAzuYrUp62vjPXF4VNKhxKPqTOkAaIReA2OhvLB19qOfM6nuHWiNdAIOk2CgUFNjAgMBAAGjggMhMIIDHTAfBgNVHSMEGDAWgBSQWP+wnHWoUVR3se3yo0MWOJ5sxTAdBgNVHQ4EFgQUMmHWLOLu/IVMGANdA7yeGmHUQZswJwYDVR0RBCAwHoIOKi5jcWxpdmluZy5jb22CDGNxbGl2aW5nLmNvbTA+BgNVHSAENzA1MDMGBmeBDAECAjApMCcGCCsGAQUFBwIBFhtodHRwOi8vd3d3LmRpZ2ljZXJ0LmNvbS9DUFMwDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA+BgNVHR8ENzA1MDOgMaAvhi1odHRwOi8vY2RwLmdlb3RydXN0LmNvbS9HZW9UcnVzdFJTQUNBMjAxOC5jcmwwdQYIKwYBBQUHAQEEaTBnMCYGCCsGAQUFBzABhhpodHRwOi8vc3RhdHVzLmdlb3RydXN0LmNvbTA9BggrBgEFBQcwAoYxaHR0cDovL2NhY2VydHMuZ2VvdHJ1c3QuY29tL0dlb1RydXN0UlNBQ0EyMDE4LmNydDAMBgNVHRMBAf8EAjAAMIIBfAYKKwYBBAHWeQIEAgSCAWwEggFoAWYAdQDuzdBk1dsazsVct520zROiModGfLzs3sNRSFlGcR+1mwAAAYuoTPVYAAAEAwBGMEQCIGAoW+3mY7w59AAK7DR5MJa8ZG07JaYVAzgPy/h9f4HEAiBSsWrBc7niHBitdnbp+ZMYUV/8M7T/NKcRDm1CCpQCawB2AEiw42vapkc0D+VqAvqdMOscUgHLVt0sgdm7v6s52IRzAAABi6hM9SMAAAQDAEcwRQIhAJaMC5Zh+7B7mtgU0h8q2SUg+jg+PdEQIkq8aATh7PYJAiBDRqrZsgE24a6JVfY5iC4BXWaTbchsZDSrkq0nCfM71AB1AD8XS0/XIkdYlB1lHIS+DRLtkDd/H4Vq68G/KIXs+GRuAAABi6hM9VgAAAQDAEYwRAIgcc27HXIXJlHSlw19zObh7Afco6RAQuZ2DoIUBVwCueACIFZAvgiS8R8+Sqi40FIcMCGglR00kssCn5atnko175bOMA0GCSqGSIb3DQEBCwUAA4IBAQAR5ESShnvo3KG1l39/OZ57Rxi5vK2nN7lwAYWY5K0OhPN1GT6siYkZxtDRt+jus601AxE6OjaIkIYr0y4Bt4de9+kD2t9ye4/GoHwBMbIkges7rj4LBs+qc1W5xf9F9CsqNMs8nRkKRXpT9qAqDESy0EL4R5Pxa6qeZDk3bfkwlGKfFkDaZJr+scLztgyIlZLc9zUwzUYnbwCO0Li7/kmsqKTIcHE8ugt1zwAUaHpmLvjphW9TdUQ+xFpks/oPGBkPETwbwVwHESxHANzCRfzpxrMKX1qN/r62+efANydXgBODlP9J+6HC/I0oI1Rjs2T/0RHst7IjOjHKiDoGRSQx
-----END CERTIFICATE-----"
"10881","","","None","192.168.0.8","tcp","22","SSH Protocol Versions Supported","A SSH server is running on the remote host.","This plugin determines the versions of the SSH protocol supported by
the remote SSH daemon.","n/a","","The remote SSH daemon supports the following versions of the
SSH protocol :

  - 1.99
  - 2.0
"
"10881","","","None","192.168.0.8","tcp","7122","SSH Protocol Versions Supported","A SSH server is running on the remote host.","This plugin determines the versions of the SSH protocol supported by
the remote SSH daemon.","n/a","","The remote SSH daemon supports the following versions of the
SSH protocol :

  - 1.99
  - 2.0
"
"10919","","","None","192.168.0.8","tcp","0","Open Port Re-check","Previously open ports are now closed.","One of several ports that were previously open are now closed or
unresponsive.

There are several possible reasons for this :

  - The scan may have caused a service to freeze or stop
    running.

  - An administrator may have stopped a particular service
    during the scanning process.

This might be an availability problem related to the following :

  - A network outage has been experienced during the scan,
    and the remote network cannot be reached anymore by the
    scanner.

  - This scanner may has been blacklisted by the system
    administrator or by an automatic intrusion detection /
    prevention system that detected the scan.

  - The remote host is now down, either because a user
    turned it off during the scan or because a select denial
    of service was effective.

In any case, the audit of the remote host might be incomplete and may
need to be done again.","Steps to resolve this issue include :

- Increase checks_read_timeout and/or reduce max_checks.

- Disable any IPS during the Nessus scan","","Port 7890 was detected as being open but is now closed
"
"11111","","","None","192.168.0.8","tcp","111","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on TCP port 111 :

 - program: 100000 (portmapper), version: 4
 - program: 100000 (portmapper), version: 3
 - program: 100000 (portmapper), version: 2
"
"11111","","","None","192.168.0.8","udp","111","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on UDP port 111 :

 - program: 100000 (portmapper), version: 4
 - program: 100000 (portmapper), version: 3
 - program: 100000 (portmapper), version: 2
"
"11153","","","None","192.168.0.8","tcp","7788","Service Detection (HELP Request)","The remote service could be identified.","It was possible to identify the remote service by its banner or by
looking at the error message it sends when it receives a 'HELP'
request.","n/a","","A web server seems to be running on this port."
"11154","","","None","192.168.0.8","tcp","4330","Unknown Service Detection: Banner Retrieval","There is an unknown service running on the remote host.","Nessus was unable to identify a service on the remote host even though
it returned a banner of some type.","n/a","","
If you know what this service is and think the banner could be used to
identify it, please send a description of the service along with the
following output to svc-signatures@nessus.org :

  Port   : 4330
  Type   : spontaneous
  Banner : 
0x00:  00 00 00 10 00 00 70 00 00 00 00 00 FF FF CF 9D    ......p.........
           0x10:                                                                     
           
"
"11154","","","None","192.168.0.8","tcp","44321","Unknown Service Detection: Banner Retrieval","There is an unknown service running on the remote host.","Nessus was unable to identify a service on the remote host even though
it returned a banner of some type.","n/a","","
If you know what this service is and think the banner could be used to
identify it, please send a description of the service along with the
following output to svc-signatures@nessus.org :

  Port   : 44321
  Type   : spontaneous
  Banner : 
0x00:  00 00 00 14 00 00 70 00 00 00 00 00 00 00 00 00    ......p.........
           0x10:  02 01 0E 57                                        ...W            
           
"
"11219","","","None","192.168.0.8","tcp","22","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 22/tcp was found to be open"
"11219","","","None","192.168.0.8","tcp","111","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 111/tcp was found to be open"
"11219","","","None","192.168.0.8","tcp","4000","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 4000/tcp was found to be open"
"11219","","","None","192.168.0.8","tcp","4330","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 4330/tcp was found to be open"
"11219","","","None","192.168.0.8","tcp","6688","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 6688/tcp was found to be open"
"11219","","","None","192.168.0.8","tcp","7122","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 7122/tcp was found to be open"
"11219","","","None","192.168.0.8","tcp","7788","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 7788/tcp was found to be open"
"11219","","","None","192.168.0.8","tcp","7890","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 7890/tcp was found to be open"
"11219","","","None","192.168.0.8","tcp","8083","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 8083/tcp was found to be open"
"11219","","","None","192.168.0.8","tcp","8084","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 8084/tcp was found to be open"
"11219","","","None","192.168.0.8","tcp","8093","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 8093/tcp was found to be open"
"11219","","","None","192.168.0.8","tcp","8653","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 8653/tcp was found to be open"
"11219","","","None","192.168.0.8","tcp","8654","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 8654/tcp was found to be open"
"11219","","","None","192.168.0.8","tcp","44321","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 44321/tcp was found to be open"
"11936","","","None","192.168.0.8","tcp","0","OS Identification","It is possible to guess the remote operating system.","Using a combination of remote probes (e.g., TCP/IP, SMB, HTTP, NTP,
SNMP, etc.), it is possible to guess the name of the remote operating
system in use. It is also possible sometimes to guess the version of
the operating system.","n/a","","
Remote operating system : Linux Kernel 2.6
Confidence level : 65
Method : SinFP

 
The remote host is running Linux Kernel 2.6"
"12085","","5.0","Medium","192.168.0.8","tcp","8083","Apache Tomcat Default Files","The remote web server contains default files.","The default error page, default index page, example JSPs and/or example servlets are installed on the remote Apache
Tomcat server. These files should be removed as they may help an attacker uncover information about the remote Tomcat
install or host itself.","Delete the default index page and remove the example JSP and servlets. Follow the Tomcat or OWASP instructions to 
replace or modify the default error page.","http://www.nessus.org/u?4cb3b4dd
https://www.owasp.org/index.php/Securing_tomcat","
The server is not configured to return a custom page in the event of a client requesting a non-existent resource.
This may result in a potential disclosure of sensitive information about the server to attackers.
"
"12085","","5.0","Medium","192.168.0.8","tcp","8084","Apache Tomcat Default Files","The remote web server contains default files.","The default error page, default index page, example JSPs and/or example servlets are installed on the remote Apache
Tomcat server. These files should be removed as they may help an attacker uncover information about the remote Tomcat
install or host itself.","Delete the default index page and remove the example JSP and servlets. Follow the Tomcat or OWASP instructions to 
replace or modify the default error page.","http://www.nessus.org/u?4cb3b4dd
https://www.owasp.org/index.php/Securing_tomcat","
The server is not configured to return a custom page in the event of a client requesting a non-existent resource.
This may result in a potential disclosure of sensitive information about the server to attackers.
"
"12085","","5.0","Medium","192.168.0.8","tcp","8093","Apache Tomcat Default Files","The remote web server contains default files.","The default error page, default index page, example JSPs and/or example servlets are installed on the remote Apache
Tomcat server. These files should be removed as they may help an attacker uncover information about the remote Tomcat
install or host itself.","Delete the default index page and remove the example JSP and servlets. Follow the Tomcat or OWASP instructions to 
replace or modify the default error page.","http://www.nessus.org/u?4cb3b4dd
https://www.owasp.org/index.php/Securing_tomcat","
The server is not configured to return a custom page in the event of a client requesting a non-existent resource.
This may result in a potential disclosure of sensitive information about the server to attackers.
"
"12085","","5.0","Medium","192.168.0.8","tcp","8653","Apache Tomcat Default Files","The remote web server contains default files.","The default error page, default index page, example JSPs and/or example servlets are installed on the remote Apache
Tomcat server. These files should be removed as they may help an attacker uncover information about the remote Tomcat
install or host itself.","Delete the default index page and remove the example JSP and servlets. Follow the Tomcat or OWASP instructions to 
replace or modify the default error page.","http://www.nessus.org/u?4cb3b4dd
https://www.owasp.org/index.php/Securing_tomcat","
The server is not configured to return a custom page in the event of a client requesting a non-existent resource.
This may result in a potential disclosure of sensitive information about the server to attackers.
"
"12085","","5.0","Medium","192.168.0.8","tcp","8654","Apache Tomcat Default Files","The remote web server contains default files.","The default error page, default index page, example JSPs and/or example servlets are installed on the remote Apache
Tomcat server. These files should be removed as they may help an attacker uncover information about the remote Tomcat
install or host itself.","Delete the default index page and remove the example JSP and servlets. Follow the Tomcat or OWASP instructions to 
replace or modify the default error page.","http://www.nessus.org/u?4cb3b4dd
https://www.owasp.org/index.php/Securing_tomcat","
The server is not configured to return a custom page in the event of a client requesting a non-existent resource.
This may result in a potential disclosure of sensitive information about the server to attackers.
"
"14788","","","None","192.168.0.8","tcp","0","IP Protocols Scan","This plugin detects the protocols understood by the remote IP stack.","This plugin detects the protocols understood by the remote IP stack.","n/a","http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml","The following IP protocols are accepted on this host:
1	ICMP
2	IGMP
6	TCP
17	UDP
103	PIM
136	UDPLite
"
"17975","","","None","192.168.0.8","tcp","8654","Service Detection (GET request)","The remote service could be identified.","It was possible to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","A web server is running on this port"
"19506","","","None","192.168.0.8","tcp","0","Nessus Scan Information","This plugin displays information about the Nessus scan.","This plugin displays, for each tested host, information about the
scan itself :

  - The version of the plugin set.
  - The type of scanner (Nessus or Nessus Home).
  - The version of the Nessus Engine.
  - The port scanner(s) used.
  - The port range scanned.
  - The ping round trip time 
  - Whether credentialed or third-party patch management
    checks are possible.
  - Whether the display of superseded patches is enabled
  - The date of the scan.
  - The duration of the scan.
  - The number of hosts scanned in parallel.
  - The number of checks done in parallel.","n/a","","Information about this scan : 

Nessus version : 10.3.1
Nessus build : 20006
Plugin feed version : 202402261439
Scanner edition used : Nessus

ERROR: Your plugins have not been updated since 2024/2/26
Performing a scan with an older plugin set will yield out-of-date results and
produce an incomplete audit. Please run nessus-update-plugins to get the
newest vulnerability checks from Nessus.org.

Scanner OS : WINDOWS
Scanner distribution : win-x86-64
Scan type : Normal
Scan name : 手机报24年4月扫描
Scan policy used : dict_policy_low
Scanner IP : 192.168.0.4
Port scanner(s) : nessus_syn_scanner 
Port range : all
Ping RTT : Unavailable
Thorough tests : yes
Experimental tests : no
Plugin debugging enabled : no
Paranoia level : 1
Report verbosity : 1
Safe checks : yes
Optimize the test : yes
Credentialed checks : no
Patch management checks : None
Display superseded patches : yes (supersedence plugin did not launch)
CGI scanning : enabled
Web application tests : enabled
Web app tests -  Test mode : all_pairs
Web app tests -  Try all HTTP methods : yes
Web app tests -  Maximum run time : 10 minutes.
Web app tests -  Stop at first flaw : param
Max hosts : 15
Max checks : 2
Recv timeout : 15
Backports : None
Allow post-scan editing : Yes
Nessus Plugin Signature Checking : Enabled
Audit File Signature Checking : Disabled
Scan Start Date : 2024/5/7 9:08 China Standard Time
Scan duration : 6744 sec
Scan for malware : no
"
"21643","","","None","192.168.0.8","tcp","8653","SSL Cipher Suites Supported","The remote service encrypts communications using SSL.","This plugin detects which SSL ciphers are supported by the remote
service for encrypting communications.","n/a","https://www.openssl.org/docs/man1.0.2/man1/ciphers.html
http://www.nessus.org/u?e17ffced","
Here is the list of SSL ciphers supported by the remote server :
Each group is reported per SSL Version.

SSL Version : TLSv12
  High Strength Ciphers (>= 112-bit key)

    Name                          Code             KEX           Auth     Encryption             MAC
    ----------------------        ----------       ---           ----     ---------------------  ---
    DHE-RSA-AES128-SHA256         0x00, 0x9E       DH            RSA      AES-GCM(128)           SHA256
    DHE-RSA-AES256-SHA384         0x00, 0x9F       DH            RSA      AES-GCM(256)           SHA384
    ECDHE-RSA-AES128-SHA256       0xC0, 0x2F       ECDH          RSA      AES-GCM(128)           SHA256
    ECDHE-RSA-AES256-SHA384       0xC0, 0x30       ECDH          RSA      AES-GCM(256)           SHA384
    DHE-RSA-AES128-SHA            0x00, 0x33       DH            RSA      AES-CBC(128)           SHA1
    DHE-RSA-AES256-SHA            0x00, 0x39       DH            RSA      AES-CBC(256)           SHA1
    ECDHE-RSA-AES128-SHA          0xC0, 0x13       ECDH          RSA      AES-CBC(128)           SHA1
    ECDHE-RSA-AES256-SHA          0xC0, 0x14       ECDH          RSA      AES-CBC(256)           SHA1
    DHE-RSA-AES128-SHA256         0x00, 0x67       DH            RSA      AES-CBC(128)           SHA256
    DHE-RSA-AES256-SHA256         0x00, 0x6B       DH            RSA      AES-CBC(256)           SHA256
    ECDHE-RSA-AES128-SHA256       0xC0, 0x27       ECDH          RSA      AES-CBC(128)           SHA256
    ECDHE-RSA-AES256-SHA384       0xC0, 0x28       ECDH          RSA      AES-CBC(256)           SHA384


SSL Version : TLSv11
  High Strength Ciphers (>= 112-bit key)

    Name                          Code             KEX           Auth     Encryption             MAC
    ----------------------        ----------       ---           ----     ---------------------  ---
    DHE-RSA-AES128-SHA            0x00, 0x33       DH            RSA      AES-CBC(128)           SHA1
    DHE-RSA-AES256-SHA            0x00, 0x39       DH            RSA      AES-CBC(256)           SHA1
    ECDHE-RSA-AES128-SHA          0xC0, 0x13       ECDH          RSA      AES-CBC(128)           SHA1
    ECDHE-RSA-AES256-SHA          0xC0, 0x14       ECDH          RSA      AES-CBC(256)           SHA1


SSL Version : TLSv1
  High Strength Ciphers (>= 112-bit key)

    Name                          Code             KEX           Auth     Encryption             MAC
    ----------------------        ----------       ---           ----     ---------------------  ---
    DHE-RSA-AES128-SHA            0x00, 0x33       DH            RSA      AES-CBC(128)           SHA1
    DHE-RSA-AES256-SHA            0x00, 0x39       DH            RSA      AES-CBC(256)           SHA1
    ECDHE-RSA-AES128-SHA          0xC0, 0x13       ECDH          RSA      AES-CBC(128)           SHA1
    ECDHE-RSA-AES256-SHA          0xC0, 0x14       ECDH          RSA      AES-CBC(256)           SHA1

The fields above are :

  {Tenable ciphername}
  {Cipher ID code}
  Kex={key exchange}
  Auth={authentication}
  Encrypt={symmetric encryption method}
  MAC={message authentication code}
  {export flag}
"
"22964","","","None","192.168.0.8","tcp","22","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","An SSH server is running on this port."
"22964","","","None","192.168.0.8","tcp","6688","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","A web server is running on this port."
"22964","","","None","192.168.0.8","tcp","7122","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","An SSH server is running on this port."
"22964","","","None","192.168.0.8","tcp","8083","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","A web server is running on this port."
"22964","","","None","192.168.0.8","tcp","8084","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","A web server is running on this port."
"22964","","","None","192.168.0.8","tcp","8093","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","A web server is running on this port."
"22964","","","None","192.168.0.8","tcp","8653","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","A TLSv1 server answered on this port.
"
"22964","","","None","192.168.0.8","tcp","8653","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","A web server is running on this port through TLSv1."
"22964","","","None","192.168.0.8","tcp","8654","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","The service closed the connection without sending any data.
It might be protected by some sort of TCP wrapper."
"24260","","","None","192.168.0.8","tcp","6688","HyperText Transfer Protocol (HTTP) Information","Some information about the remote HTTP configuration can be extracted.","This test gives some information about the remote HTTP protocol - the
version used, whether HTTP Keep-Alive is enabled, etc... 

This test is informational only and does not denote any security
problem.","n/a","","
Response Code : HTTP/1.1 404 

Protocol version : HTTP/1.1
HTTP/2 TLS Support: No
HTTP/2 Cleartext Support: No
SSL : no
Keep-Alive : yes
Options allowed : GET, HEAD, POST, PUT, DELETE, OPTIONS
Headers :

  Vary: Origin
  Vary: Access-Control-Request-Method
  Vary: Access-Control-Request-Headers
  Content-Type: application/json
  Transfer-Encoding: chunked
  Date: Tue, 07 May 2024 02:01:48 GMT
  Keep-Alive: timeout=60
  Connection: keep-alive
  
Response Body :

"
"24260","","","None","192.168.0.8","tcp","8083","HyperText Transfer Protocol (HTTP) Information","Some information about the remote HTTP configuration can be extracted.","This test gives some information about the remote HTTP protocol - the
version used, whether HTTP Keep-Alive is enabled, etc... 

This test is informational only and does not denote any security
problem.","n/a","","
Response Code : HTTP/1.1 404 

Protocol version : HTTP/1.1
HTTP/2 TLS Support: No
HTTP/2 Cleartext Support: No
SSL : no
Keep-Alive : yes
Options allowed : GET, HEAD, POST, PUT, DELETE, OPTIONS
Headers :

  Content-Type: text/html;charset=utf-8
  Content-Language: en
  Content-Length: 682
  Date: Tue, 07 May 2024 02:01:48 GMT
  Keep-Alive: timeout=20
  Connection: keep-alive
  
Response Body :

"
"24260","","","None","192.168.0.8","tcp","8084","HyperText Transfer Protocol (HTTP) Information","Some information about the remote HTTP configuration can be extracted.","This test gives some information about the remote HTTP protocol - the
version used, whether HTTP Keep-Alive is enabled, etc... 

This test is informational only and does not denote any security
problem.","n/a","","
Response Code : HTTP/1.1 404 

Protocol version : HTTP/1.1
HTTP/2 TLS Support: No
HTTP/2 Cleartext Support: No
SSL : no
Keep-Alive : yes
Options allowed : GET, HEAD, POST, PUT, DELETE, OPTIONS
Headers :

  Content-Type: text/html;charset=utf-8
  Content-Language: en
  Content-Length: 682
  Date: Tue, 07 May 2024 02:01:48 GMT
  Keep-Alive: timeout=20
  Connection: keep-alive
  
Response Body :

"
"24260","","","None","192.168.0.8","tcp","8093","HyperText Transfer Protocol (HTTP) Information","Some information about the remote HTTP configuration can be extracted.","This test gives some information about the remote HTTP protocol - the
version used, whether HTTP Keep-Alive is enabled, etc... 

This test is informational only and does not denote any security
problem.","n/a","","
Response Code : HTTP/1.1 404 

Protocol version : HTTP/1.1
HTTP/2 TLS Support: No
HTTP/2 Cleartext Support: No
SSL : no
Keep-Alive : yes
Options allowed : GET, HEAD, POST, PUT, DELETE, OPTIONS
Headers :

  Content-Type: text/html;charset=utf-8
  Content-Language: en
  Content-Length: 682
  Date: Tue, 07 May 2024 02:01:48 GMT
  Keep-Alive: timeout=20
  Connection: keep-alive
  
Response Body :

"
"24260","","","None","192.168.0.8","tcp","8653","HyperText Transfer Protocol (HTTP) Information","Some information about the remote HTTP configuration can be extracted.","This test gives some information about the remote HTTP protocol - the
version used, whether HTTP Keep-Alive is enabled, etc... 

This test is informational only and does not denote any security
problem.","n/a","","
Response Code : HTTP/1.1 404 

Protocol version : HTTP/1.1
HTTP/2 TLS Support: No
HTTP/2 Cleartext Support: No
SSL : yes
Keep-Alive : yes
Options allowed : GET, HEAD, POST, PUT, DELETE, OPTIONS
Headers :

  Content-Type: text/html;charset=utf-8
  Content-Language: en
  Content-Length: 682
  Date: Tue, 07 May 2024 02:01:49 GMT
  Keep-Alive: timeout=60
  Connection: keep-alive
  
Response Body :

"
"24260","","","None","192.168.0.8","tcp","8654","HyperText Transfer Protocol (HTTP) Information","Some information about the remote HTTP configuration can be extracted.","This test gives some information about the remote HTTP protocol - the
version used, whether HTTP Keep-Alive is enabled, etc... 

This test is informational only and does not denote any security
problem.","n/a","","
Response Code : HTTP/1.1 404 

Protocol version : HTTP/1.1
HTTP/2 TLS Support: No
HTTP/2 Cleartext Support: No
SSL : no
Keep-Alive : yes
Options allowed : GET, HEAD, POST, PUT, DELETE, OPTIONS
Headers :

  Content-Type: text/html;charset=utf-8
  Content-Language: en
  Content-Length: 682
  Date: Tue, 07 May 2024 02:01:49 GMT
  Keep-Alive: timeout=0
  Connection: keep-alive
  
Response Body :

"
"25220","","","None","192.168.0.8","tcp","0","TCP/IP Timestamps Supported","The remote service implements TCP timestamps.","The remote host implements TCP timestamps, as defined by RFC1323.  A
side effect of this feature is that the uptime of the remote host can
sometimes be computed.","n/a","http://www.ietf.org/rfc/rfc1323.txt",""
"39446","","","None","192.168.0.8","tcp","8083","Apache Tomcat Detection","The remote web server is an Apache Tomcat server.","Nessus was able to detect a remote Apache Tomcat
web server.","n/a","https://tomcat.apache.org/","
  URL        : http://192.168.0.8:8083/
  Version    : 9.0.87
  backported : 0
  source     : Apache Tomcat/9.0.87
"
"39446","","","None","192.168.0.8","tcp","8084","Apache Tomcat Detection","The remote web server is an Apache Tomcat server.","Nessus was able to detect a remote Apache Tomcat
web server.","n/a","https://tomcat.apache.org/","
  URL        : http://192.168.0.8:8084/
  Version    : 9.0.87
  backported : 0
  source     : Apache Tomcat/9.0.87
"
"39446","","","None","192.168.0.8","tcp","8093","Apache Tomcat Detection","The remote web server is an Apache Tomcat server.","Nessus was able to detect a remote Apache Tomcat
web server.","n/a","https://tomcat.apache.org/","
  URL        : http://192.168.0.8:8093/
  Version    : 9.0.87
  backported : 0
  source     : Apache Tomcat/9.0.87
"
"39446","","","None","192.168.0.8","tcp","8653","Apache Tomcat Detection","The remote web server is an Apache Tomcat server.","Nessus was able to detect a remote Apache Tomcat
web server.","n/a","https://tomcat.apache.org/","
  URL        : https://192.168.0.8:8653/
  Version    : 9.0.87
  backported : 0
  source     : Apache Tomcat/9.0.87
"
"39446","","","None","192.168.0.8","tcp","8654","Apache Tomcat Detection","The remote web server is an Apache Tomcat server.","Nessus was able to detect a remote Apache Tomcat
web server.","n/a","https://tomcat.apache.org/","
  URL        : http://192.168.0.8:8654/
  Version    : 9.0.87
  backported : 0
  source     : Apache Tomcat/9.0.87
"
"43111","","","None","192.168.0.8","tcp","6688","HTTP Methods Allowed (per directory)","This plugin determines which HTTP methods are allowed on various CGI
directories.","By calling the OPTIONS method, it is possible to determine which HTTP
methods are allowed on each directory.

The following HTTP methods are considered insecure:
  PUT, DELETE, CONNECT, TRACE, HEAD

Many frameworks and languages treat 'HEAD' as a 'GET' request, albeit
one without any body in the response. If a security constraint was
set on 'GET' requests such that only 'authenticatedUsers' could
access GET requests for a particular servlet or resource, it would be
bypassed for the 'HEAD' version. This allowed unauthorized blind
submission of any privileged GET request.

As this list may be incomplete, the plugin also tests - if 'Thorough
tests' are enabled or 'Enable web applications tests' is set to 'yes'
in the scan policy - various known HTTP methods on each directory and
considers them as unsupported if it receives a response code of 400,
403, 405, or 501.

Note that the plugin output is only informational and does not
necessarily indicate the presence of any security vulnerabilities.","n/a","http://www.nessus.org/u?d9c03a9a
http://www.nessus.org/u?b019cbdb
https://www.owasp.org/index.php/Test_HTTP_Methods_(OTG-CONFIG-006)","
Based on tests of each method : 

  - HTTP methods ACL BASELINE-CONTROL BCOPY BDELETE BMOVE BPROPFIND 
    BPROPPATCH CHECKIN CHECKOUT CONNECT COPY DEBUG DELETE GET HEAD 
    INDEX LABEL LOCK MERGE MKACTIVITY MKCOL MKWORKSPACE MOVE NOTIFY 
    OPTIONS ORDERPATCH PATCH POLL POST PROPFIND PROPPATCH PUT REPORT 
    RPC_IN_DATA RPC_OUT_DATA SEARCH SUBSCRIBE UNCHECKOUT UNLOCK 
    UNSUBSCRIBE UPDATE VERSION-CONTROL X-MS-ENUMATTS are allowed on : 

    /

  - Invalid/unknown HTTP methods are allowed on :

    /
"
"43111","","","None","192.168.0.8","tcp","8083","HTTP Methods Allowed (per directory)","This plugin determines which HTTP methods are allowed on various CGI
directories.","By calling the OPTIONS method, it is possible to determine which HTTP
methods are allowed on each directory.

The following HTTP methods are considered insecure:
  PUT, DELETE, CONNECT, TRACE, HEAD

Many frameworks and languages treat 'HEAD' as a 'GET' request, albeit
one without any body in the response. If a security constraint was
set on 'GET' requests such that only 'authenticatedUsers' could
access GET requests for a particular servlet or resource, it would be
bypassed for the 'HEAD' version. This allowed unauthorized blind
submission of any privileged GET request.

As this list may be incomplete, the plugin also tests - if 'Thorough
tests' are enabled or 'Enable web applications tests' is set to 'yes'
in the scan policy - various known HTTP methods on each directory and
considers them as unsupported if it receives a response code of 400,
403, 405, or 501.

Note that the plugin output is only informational and does not
necessarily indicate the presence of any security vulnerabilities.","n/a","http://www.nessus.org/u?d9c03a9a
http://www.nessus.org/u?b019cbdb
https://www.owasp.org/index.php/Test_HTTP_Methods_(OTG-CONFIG-006)","
Based on tests of each method : 

  - HTTP methods ACL BASELINE-CONTROL BCOPY BDELETE BMOVE BPROPFIND 
    BPROPPATCH CHECKIN CHECKOUT COPY DEBUG DELETE GET HEAD INDEX 
    LABEL LOCK MERGE MKACTIVITY MKCOL MKWORKSPACE MOVE NOTIFY OPTIONS 
    ORDERPATCH PATCH POLL POST PROPFIND PROPPATCH PUT REPORT 
    RPC_IN_DATA RPC_OUT_DATA SEARCH SUBSCRIBE TRACE UNCHECKOUT UNLOCK 
    UNSUBSCRIBE UPDATE VERSION-CONTROL X-MS-ENUMATTS are allowed on : 

    /

  - Invalid/unknown HTTP methods are allowed on :

    /
"
"43111","","","None","192.168.0.8","tcp","8084","HTTP Methods Allowed (per directory)","This plugin determines which HTTP methods are allowed on various CGI
directories.","By calling the OPTIONS method, it is possible to determine which HTTP
methods are allowed on each directory.

The following HTTP methods are considered insecure:
  PUT, DELETE, CONNECT, TRACE, HEAD

Many frameworks and languages treat 'HEAD' as a 'GET' request, albeit
one without any body in the response. If a security constraint was
set on 'GET' requests such that only 'authenticatedUsers' could
access GET requests for a particular servlet or resource, it would be
bypassed for the 'HEAD' version. This allowed unauthorized blind
submission of any privileged GET request.

As this list may be incomplete, the plugin also tests - if 'Thorough
tests' are enabled or 'Enable web applications tests' is set to 'yes'
in the scan policy - various known HTTP methods on each directory and
considers them as unsupported if it receives a response code of 400,
403, 405, or 501.

Note that the plugin output is only informational and does not
necessarily indicate the presence of any security vulnerabilities.","n/a","http://www.nessus.org/u?d9c03a9a
http://www.nessus.org/u?b019cbdb
https://www.owasp.org/index.php/Test_HTTP_Methods_(OTG-CONFIG-006)","
Based on tests of each method : 

  - HTTP methods ACL BASELINE-CONTROL BCOPY BDELETE BMOVE BPROPFIND 
    BPROPPATCH CHECKIN CHECKOUT COPY DEBUG DELETE GET HEAD INDEX 
    LABEL LOCK MERGE MKACTIVITY MKCOL MKWORKSPACE MOVE NOTIFY OPTIONS 
    ORDERPATCH PATCH POLL POST PROPFIND PROPPATCH PUT REPORT 
    RPC_IN_DATA RPC_OUT_DATA SEARCH SUBSCRIBE TRACE UNCHECKOUT UNLOCK 
    UNSUBSCRIBE UPDATE VERSION-CONTROL X-MS-ENUMATTS are allowed on : 

    /

  - Invalid/unknown HTTP methods are allowed on :

    /
"
"43111","","","None","192.168.0.8","tcp","8093","HTTP Methods Allowed (per directory)","This plugin determines which HTTP methods are allowed on various CGI
directories.","By calling the OPTIONS method, it is possible to determine which HTTP
methods are allowed on each directory.

The following HTTP methods are considered insecure:
  PUT, DELETE, CONNECT, TRACE, HEAD

Many frameworks and languages treat 'HEAD' as a 'GET' request, albeit
one without any body in the response. If a security constraint was
set on 'GET' requests such that only 'authenticatedUsers' could
access GET requests for a particular servlet or resource, it would be
bypassed for the 'HEAD' version. This allowed unauthorized blind
submission of any privileged GET request.

As this list may be incomplete, the plugin also tests - if 'Thorough
tests' are enabled or 'Enable web applications tests' is set to 'yes'
in the scan policy - various known HTTP methods on each directory and
considers them as unsupported if it receives a response code of 400,
403, 405, or 501.

Note that the plugin output is only informational and does not
necessarily indicate the presence of any security vulnerabilities.","n/a","http://www.nessus.org/u?d9c03a9a
http://www.nessus.org/u?b019cbdb
https://www.owasp.org/index.php/Test_HTTP_Methods_(OTG-CONFIG-006)","
Based on tests of each method : 

  - HTTP methods ACL BASELINE-CONTROL BCOPY BDELETE BMOVE BPROPFIND 
    BPROPPATCH CHECKIN CHECKOUT COPY DEBUG DELETE GET HEAD INDEX 
    LABEL LOCK MERGE MKACTIVITY MKCOL MKWORKSPACE MOVE NOTIFY OPTIONS 
    ORDERPATCH PATCH POLL POST PROPFIND PROPPATCH PUT REPORT 
    RPC_IN_DATA RPC_OUT_DATA SEARCH SUBSCRIBE TRACE UNCHECKOUT UNLOCK 
    UNSUBSCRIBE UPDATE VERSION-CONTROL X-MS-ENUMATTS are allowed on : 

    /

  - Invalid/unknown HTTP methods are allowed on :

    /
"
"43111","","","None","192.168.0.8","tcp","8653","HTTP Methods Allowed (per directory)","This plugin determines which HTTP methods are allowed on various CGI
directories.","By calling the OPTIONS method, it is possible to determine which HTTP
methods are allowed on each directory.

The following HTTP methods are considered insecure:
  PUT, DELETE, CONNECT, TRACE, HEAD

Many frameworks and languages treat 'HEAD' as a 'GET' request, albeit
one without any body in the response. If a security constraint was
set on 'GET' requests such that only 'authenticatedUsers' could
access GET requests for a particular servlet or resource, it would be
bypassed for the 'HEAD' version. This allowed unauthorized blind
submission of any privileged GET request.

As this list may be incomplete, the plugin also tests - if 'Thorough
tests' are enabled or 'Enable web applications tests' is set to 'yes'
in the scan policy - various known HTTP methods on each directory and
considers them as unsupported if it receives a response code of 400,
403, 405, or 501.

Note that the plugin output is only informational and does not
necessarily indicate the presence of any security vulnerabilities.","n/a","http://www.nessus.org/u?d9c03a9a
http://www.nessus.org/u?b019cbdb
https://www.owasp.org/index.php/Test_HTTP_Methods_(OTG-CONFIG-006)","
Based on tests of each method : 

  - HTTP methods ACL BASELINE-CONTROL BCOPY BDELETE BMOVE BPROPFIND 
    BPROPPATCH CHECKIN CHECKOUT COPY DEBUG DELETE GET HEAD INDEX 
    LABEL LOCK MERGE MKACTIVITY MKCOL MKWORKSPACE MOVE NOTIFY OPTIONS 
    ORDERPATCH PATCH POLL POST PROPFIND PROPPATCH PUT REPORT 
    RPC_IN_DATA RPC_OUT_DATA SEARCH SUBSCRIBE TRACE UNCHECKOUT UNLOCK 
    UNSUBSCRIBE UPDATE VERSION-CONTROL X-MS-ENUMATTS are allowed on : 

    /

  - Invalid/unknown HTTP methods are allowed on :

    /
"
"43111","","","None","192.168.0.8","tcp","8654","HTTP Methods Allowed (per directory)","This plugin determines which HTTP methods are allowed on various CGI
directories.","By calling the OPTIONS method, it is possible to determine which HTTP
methods are allowed on each directory.

The following HTTP methods are considered insecure:
  PUT, DELETE, CONNECT, TRACE, HEAD

Many frameworks and languages treat 'HEAD' as a 'GET' request, albeit
one without any body in the response. If a security constraint was
set on 'GET' requests such that only 'authenticatedUsers' could
access GET requests for a particular servlet or resource, it would be
bypassed for the 'HEAD' version. This allowed unauthorized blind
submission of any privileged GET request.

As this list may be incomplete, the plugin also tests - if 'Thorough
tests' are enabled or 'Enable web applications tests' is set to 'yes'
in the scan policy - various known HTTP methods on each directory and
considers them as unsupported if it receives a response code of 400,
403, 405, or 501.

Note that the plugin output is only informational and does not
necessarily indicate the presence of any security vulnerabilities.","n/a","http://www.nessus.org/u?d9c03a9a
http://www.nessus.org/u?b019cbdb
https://www.owasp.org/index.php/Test_HTTP_Methods_(OTG-CONFIG-006)","
Based on tests of each method : 

  - HTTP methods ACL BASELINE-CONTROL BCOPY BDELETE BMOVE BPROPFIND 
    BPROPPATCH CHECKIN CHECKOUT COPY DEBUG DELETE GET HEAD INDEX 
    LABEL LOCK MERGE MKACTIVITY MKCOL MKWORKSPACE MOVE NOTIFY OPTIONS 
    ORDERPATCH PATCH POLL POST PROPFIND PROPPATCH PUT REPORT 
    RPC_IN_DATA RPC_OUT_DATA SEARCH SUBSCRIBE TRACE UNCHECKOUT UNLOCK 
    UNSUBSCRIBE UPDATE VERSION-CONTROL X-MS-ENUMATTS are allowed on : 

    /

  - Invalid/unknown HTTP methods are allowed on :

    /
"
"45590","","","None","192.168.0.8","tcp","0","Common Platform Enumeration (CPE)","It was possible to enumerate CPE names that matched on the remote
system.","By using information obtained from a Nessus scan, this plugin reports
CPE (Common Platform Enumeration) matches for various hardware and
software products found on a host. 

Note that if an official CPE is not available for the product, this
plugin computes the best possible CPE based on the information
available from the scan.","n/a","http://cpe.mitre.org/
https://nvd.nist.gov/products/cpe","
The remote operating system matched the following CPE : 

  cpe:/o:linux:linux_kernel -> Linux Kernel

Following application CPE's matched on the remote system : 

  cpe:/a:apache:tomcat:9.0.87 -> Apache Software Foundation Tomcat
  cpe:/a:openbsd:openssh:8.8 -> OpenBSD OpenSSH
"
"53335","","","None","192.168.0.8","tcp","111","RPC portmapper (TCP)","An ONC RPC portmapper is running on the remote host.","The RPC portmapper is running on this port. 

The portmapper allows someone to get the port number of each RPC
service running on the remote host by sending either multiple lookup
requests or a DUMP request.","n/a","",""
"54615","","","None","192.168.0.8","tcp","0","Device Type","It is possible to guess the remote device type.","Based on the remote operating system, it is possible to determine
what the remote system type is (eg: a printer, router, general-purpose
computer, etc).","n/a","","Remote device type : general-purpose
Confidence level : 65
"
"56984","","","None","192.168.0.8","tcp","8653","SSL / TLS Versions Supported","The remote service encrypts communications.","This plugin detects which SSL and TLS versions are supported by the
remote service for encrypting communications.","n/a","","
This port supports TLSv1.0/TLSv1.1/TLSv1.2.
"
"57041","","","None","192.168.0.8","tcp","8653","SSL Perfect Forward Secrecy Cipher Suites Supported","The remote service supports the use of SSL Perfect Forward Secrecy
ciphers, which maintain confidentiality even if the key is stolen.","The remote host supports the use of SSL ciphers that offer Perfect
Forward Secrecy (PFS) encryption.  These cipher suites ensure that
recorded SSL traffic cannot be broken at a future date if the server's
private key is compromised.","n/a","https://www.openssl.org/docs/manmaster/man1/ciphers.html
https://en.wikipedia.org/wiki/Diffie-Hellman_key_exchange
https://en.wikipedia.org/wiki/Perfect_forward_secrecy","
Here is the list of SSL PFS ciphers supported by the remote server :

  High Strength Ciphers (>= 112-bit key)

    Name                          Code             KEX           Auth     Encryption             MAC
    ----------------------        ----------       ---           ----     ---------------------  ---
    DHE-RSA-AES128-SHA256         0x00, 0x9E       DH            RSA      AES-GCM(128)           SHA256
    DHE-RSA-AES256-SHA384         0x00, 0x9F       DH            RSA      AES-GCM(256)           SHA384
    ECDHE-RSA-AES128-SHA256       0xC0, 0x2F       ECDH          RSA      AES-GCM(128)           SHA256
    ECDHE-RSA-AES256-SHA384       0xC0, 0x30       ECDH          RSA      AES-GCM(256)           SHA384
    DHE-RSA-AES128-SHA            0x00, 0x33       DH            RSA      AES-CBC(128)           SHA1
    DHE-RSA-AES256-SHA            0x00, 0x39       DH            RSA      AES-CBC(256)           SHA1
    ECDHE-RSA-AES128-SHA          0xC0, 0x13       ECDH          RSA      AES-CBC(128)           SHA1
    ECDHE-RSA-AES256-SHA          0xC0, 0x14       ECDH          RSA      AES-CBC(256)           SHA1
    DHE-RSA-AES128-SHA256         0x00, 0x67       DH            RSA      AES-CBC(128)           SHA256
    DHE-RSA-AES256-SHA256         0x00, 0x6B       DH            RSA      AES-CBC(256)           SHA256
    ECDHE-RSA-AES128-SHA256       0xC0, 0x27       ECDH          RSA      AES-CBC(128)           SHA256
    ECDHE-RSA-AES256-SHA384       0xC0, 0x28       ECDH          RSA      AES-CBC(256)           SHA384

The fields above are :

  {Tenable ciphername}
  {Cipher ID code}
  Kex={key exchange}
  Auth={authentication}
  Encrypt={symmetric encryption method}
  MAC={message authentication code}
  {export flag}
"
"66334","","","None","192.168.0.8","tcp","0","Patch Report","The remote host is missing several patches.","The remote host is missing one or more security patches. This plugin lists the newest version of each patch to install 
to make sure the remote host is up-to-date.

Note: Because the 'Show missing patches that have been superseded' setting in your scan policy depends on this plugin,
it will always run and cannot be disabled.","Install the patches listed below.","","

. You need to take the following action :

[ OpenSSH < 9.6 Multiple Vulnerabilities (187201) ]

+ Action to take : Upgrade to OpenSSH version 9.6 or later.


"
"70544","","","None","192.168.0.8","tcp","8653","SSL Cipher Block Chaining Cipher Suites Supported","The remote service supports the use of SSL Cipher Block Chaining
ciphers, which combine previous blocks with subsequent ones.","The remote host supports the use of SSL ciphers that operate in Cipher
Block Chaining (CBC) mode.  These cipher suites offer additional
security over Electronic Codebook (ECB) mode, but have the potential to
leak information if used improperly.","n/a","https://www.openssl.org/docs/manmaster/man1/ciphers.html
http://www.nessus.org/u?cc4a822a
https://www.openssl.org/~bodo/tls-cbc.txt","
Here is the list of SSL CBC ciphers supported by the remote server :

  High Strength Ciphers (>= 112-bit key)

    Name                          Code             KEX           Auth     Encryption             MAC
    ----------------------        ----------       ---           ----     ---------------------  ---
    DHE-RSA-AES128-SHA            0x00, 0x33       DH            RSA      AES-CBC(128)           SHA1
    DHE-RSA-AES256-SHA            0x00, 0x39       DH            RSA      AES-CBC(256)           SHA1
    ECDHE-RSA-AES128-SHA          0xC0, 0x13       ECDH          RSA      AES-CBC(128)           SHA1
    ECDHE-RSA-AES256-SHA          0xC0, 0x14       ECDH          RSA      AES-CBC(256)           SHA1
    DHE-RSA-AES128-SHA256         0x00, 0x67       DH            RSA      AES-CBC(128)           SHA256
    DHE-RSA-AES256-SHA256         0x00, 0x6B       DH            RSA      AES-CBC(256)           SHA256
    ECDHE-RSA-AES128-SHA256       0xC0, 0x27       ECDH          RSA      AES-CBC(128)           SHA256
    ECDHE-RSA-AES256-SHA384       0xC0, 0x28       ECDH          RSA      AES-CBC(256)           SHA384

The fields above are :

  {Tenable ciphername}
  {Cipher ID code}
  Kex={key exchange}
  Auth={authentication}
  Encrypt={symmetric encryption method}
  MAC={message authentication code}
  {export flag}
"
"70657","","","None","192.168.0.8","tcp","22","SSH Algorithms and Languages Supported","An SSH server is listening on this port.","This script detects which algorithms and languages are supported by
the remote service for encrypting communications.","n/a","","
Nessus negotiated the following encryption algorithm with the server : 

The server supports the following options for kex_algorithms : 

  diffie-hellman-group-exchange-sha1
  diffie-hellman-group-exchange-sha256
  diffie-hellman-group1-sha1
  diffie-hellman-group14-sha1
  ecdh-sha2-nistp256
  ecdh-sha2-nistp384
  ecdh-sha2-nistp521
  kex-strict-s-v00@openssh.com

The server supports the following options for server_host_key_algorithms : 

  ecdsa-sha2-nistp256
  rsa-sha2-256
  rsa-sha2-512
  ssh-ed25519
  ssh-rsa

The server supports the following options for encryption_algorithms_client_to_server : 

  aes128-ctr
  aes128-gcm@openssh.com
  aes192-ctr
  aes256-ctr
  aes256-gcm@openssh.com
  chacha20-poly1305@openssh.com

The server supports the following options for encryption_algorithms_server_to_client : 

  aes128-ctr
  aes128-gcm@openssh.com
  aes192-ctr
  aes256-ctr
  aes256-gcm@openssh.com
  chacha20-poly1305@openssh.com

The server supports the following options for mac_algorithms_client_to_server : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
  hmac-sha2-256
  hmac-sha2-256-etm@openssh.com
  hmac-sha2-512
  hmac-sha2-512-etm@openssh.com
  umac-128-etm@openssh.com
  umac-128@openssh.com
  umac-64-etm@openssh.com
  umac-64@openssh.com

The server supports the following options for mac_algorithms_server_to_client : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
  hmac-sha2-256
  hmac-sha2-256-etm@openssh.com
  hmac-sha2-512
  hmac-sha2-512-etm@openssh.com
  umac-128-etm@openssh.com
  umac-128@openssh.com
  umac-64-etm@openssh.com
  umac-64@openssh.com

The server supports the following options for compression_algorithms_client_to_server : 

  none
  zlib@openssh.com

The server supports the following options for compression_algorithms_server_to_client : 

  none
  zlib@openssh.com
"
"70657","","","None","192.168.0.8","tcp","7122","SSH Algorithms and Languages Supported","An SSH server is listening on this port.","This script detects which algorithms and languages are supported by
the remote service for encrypting communications.","n/a","","
Nessus negotiated the following encryption algorithm with the server : 

The server supports the following options for kex_algorithms : 

  diffie-hellman-group-exchange-sha1
  diffie-hellman-group-exchange-sha256
  diffie-hellman-group1-sha1
  diffie-hellman-group14-sha1
  ecdh-sha2-nistp256
  ecdh-sha2-nistp384
  ecdh-sha2-nistp521
  kex-strict-s-v00@openssh.com

The server supports the following options for server_host_key_algorithms : 

  ecdsa-sha2-nistp256
  rsa-sha2-256
  rsa-sha2-512
  ssh-ed25519
  ssh-rsa

The server supports the following options for encryption_algorithms_client_to_server : 

  aes128-ctr
  aes128-gcm@openssh.com
  aes192-ctr
  aes256-ctr
  aes256-gcm@openssh.com
  chacha20-poly1305@openssh.com

The server supports the following options for encryption_algorithms_server_to_client : 

  aes128-ctr
  aes128-gcm@openssh.com
  aes192-ctr
  aes256-ctr
  aes256-gcm@openssh.com
  chacha20-poly1305@openssh.com

The server supports the following options for mac_algorithms_client_to_server : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
  hmac-sha2-256
  hmac-sha2-256-etm@openssh.com
  hmac-sha2-512
  hmac-sha2-512-etm@openssh.com
  umac-128-etm@openssh.com
  umac-128@openssh.com
  umac-64-etm@openssh.com
  umac-64@openssh.com

The server supports the following options for mac_algorithms_server_to_client : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
  hmac-sha2-256
  hmac-sha2-256-etm@openssh.com
  hmac-sha2-512
  hmac-sha2-512-etm@openssh.com
  umac-128-etm@openssh.com
  umac-128@openssh.com
  umac-64-etm@openssh.com
  umac-64@openssh.com

The server supports the following options for compression_algorithms_client_to_server : 

  none
  zlib@openssh.com

The server supports the following options for compression_algorithms_server_to_client : 

  none
  zlib@openssh.com
"
"84502","","","None","192.168.0.8","tcp","8653","HSTS Missing From HTTPS Server","The remote web server is not enforcing HSTS.","The remote HTTPS server is not enforcing HTTP Strict Transport Security (HSTS). 
HSTS is an optional response header that can be configured on the server to instruct 
the browser to only communicate via HTTPS. The lack of HSTS allows downgrade attacks,
SSL-stripping man-in-the-middle attacks, and weakens cookie-hijacking protections.","Configure the remote web server to use HSTS.","https://tools.ietf.org/html/rfc6797","
  The remote HTTPS server does not send the HTTP
  ""Strict-Transport-Security"" header.
"
"94761","","","None","192.168.0.8","tcp","8653","SSL Root Certification Authority Certificate Information","A root Certification Authority certificate was found at the top of the
certificate chain.","The remote service uses an SSL certificate chain that contains a
self-signed root Certification Authority certificate at the top of the
chain.","Ensure that use of this root Certification Authority certificate
complies with your organization's acceptable use and security
policies.","https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc778623(v=ws.10)","
The following root Certification Authority certificate was found :

|-Subject             : C=US/O=DigiCert Inc/OU=www.digicert.com/CN=DigiCert Global Root CA
|-Issuer              : C=US/O=DigiCert Inc/OU=www.digicert.com/CN=DigiCert Global Root CA
|-Valid From          : Nov 10 00:00:00 2006 GMT
|-Valid To            : Nov 10 00:00:00 2031 GMT
|-Signature Algorithm : SHA-1 With RSA Encryption
"
"95631","","","None","192.168.0.8","tcp","8653","SSL Certificate Signed Using Weak Hashing Algorithm (Known CA)","A known CA SSL certificate in the certificate chain has been signed
using a weak hashing algorithm.","The remote service uses a known CA certificate in the SSL certificate chain that has been signed using a 
cryptographically weak hashing algorithm (e.g., MD2, MD4, MD5, or SHA1). These signature algorithms are known to be 
vulnerable to collision attacks (CVE-2004-2761, for example). An attacker can exploit this to generate another 
certificate with the same digital signature, allowing the attacker to masquerade as the affected service.

Note that this plugin reports all SSL certificate chains signed with SHA-1 that expire after January 1, 2017 as 
vulnerable. This is in accordance with Google's gradual sunsetting of the SHA-1 cryptographic hash algorithm.

Note that this plugin will only fire on root certificates that are known certificate authorities as listed in Tenable 
Community Knowledge Article 000001752. That is what differentiates this plugin from plugin 35291, which will fire on any
certificate, not just known certificate authority root certificates.

Known certificate authority root certificates are inherently trusted and so any potential issues with the signature, 
including it being signed using a weak hashing algorithm, are not considered security issues.","Contact the Certificate Authority to have the certificate reissued.","http://www.nessus.org/u?ae636e78
https://tools.ietf.org/html/rfc3279
http://www.nessus.org/u?9bb87bf2","
The following known CA certificates were part of the certificate
chain sent by the remote host, but contain hashes that are considered
to be weak.

Subject             : C=US/O=DigiCert Inc/OU=www.digicert.com/CN=DigiCert Global Root CA
Signature Algorithm : SHA-1 With RSA Encryption
Valid From          : Nov 10 00:00:00 2006 GMT
Valid To            : Nov 10 00:00:00 2031 GMT
Raw PEM certificate : 
-----BEGIN CERTIFICATE-----
MIIDrzCCApegAwIBAgIQCDvgVpBCRrGhdWrJWZHHSjANBgkqhkiG9w0BAQUFADBhMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBDQTAeFw0wNjExMTAwMDAwMDBaFw0zMTExMTAwMDAwMDBaMGExCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5jb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4jvhEXLeqKTTo1eqUKKPC3eQyaKl7hLOllsBCSDMAZOnTjC3U/dDxGkAV53ijSLdhwZAAIEJzs4bg7/fzTtxRuLWZscFs3YnFo97nh6Vfe63SKMI2tavegw5BmV/Sl0fvBf4q77uKNd0f3p4mVmFaG5cIzJLv07A6Fpt43C/dxC//AH2hdmoRBBYMql1GNXRor5H4idq9Joz+EkIYIvUX7Q6hL+hqkpMfT7PT19sdl6gSzeRntwi5m3OFBqOasv+zbMUZBfHWymeMr/y7vrTC0LUq7dBMtoM1O/4gdW7jVg/tRvoSSiicNoxBN33shbyTApOB6jtSj1etX+jkMOvJwIDAQABo2MwYTAOBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUA95QNVbRTLtm8KPiGxvDl7I90VUwHwYDVR0jBBgwFoAUA95QNVbRTLtm8KPiGxvDl7I90VUwDQYJKoZIhvcNAQEFBQADggEBAMucN6pIExIK+t1EnE9SsPTfrgT1eXkIoyQY/EsrhMAtudXH/vTBH1jLuG2cenTnmCmrEbXjcKChzUyImZOMkXDiqw8cvpOp/2PV5Adg06O/nVsJ8dWO41P0jmP6P6fbtGbfYmbW0W5BjfIttep3Sp+dWOIrWcBAI+0tKIJFPnlUkiaY4IBIqDfv8NZ5YBberOgOzW6sRBc4L0na4UU+Krk2U886UAb3LujEV0lsYSEY1QSteDwsOoBrp+uvFRTp2InBuThs4pFsiv9kuXclVzDAGySj4dzp30d8tbQkCAUw7C29C79Fv1C5qfPrmAESrciIxpg0X40KPMbp1ZWVbd4=
-----END CERTIFICATE-----
"
"104743","","6.1","Medium","192.168.0.8","tcp","8653","TLS Version 1.0 Protocol Detection","The remote service encrypts traffic using an older version of TLS.","The remote service accepts connections encrypted using TLS 1.0. TLS 1.0 has a
number of cryptographic design flaws. Modern implementations of TLS 1.0
mitigate these problems, but newer versions of TLS like 1.2 and 1.3 are
designed against these flaws and should be used whenever possible.

As of March 31, 2020, Endpoints that aren’t enabled for TLS 1.2
and higher will no longer function properly with major web browsers and major vendors.

PCI DSS v3.2 requires that TLS 1.0 be disabled entirely by June 30,
2018, except for POS POI terminals (and the SSL/TLS termination
points to which they connect) that can be verified as not being
susceptible to any known exploits.","Enable support for TLS 1.2 and 1.3, and disable support for TLS 1.0.","https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00","TLSv1 is enabled and the server supports at least one cipher."
"110723","","","None","192.168.0.8","tcp","0","Target Credential Status by Authentication Protocol - No Credentials Provided","Nessus was able to find common ports used for local checks,
however, no credentials were provided in the scan policy.","Nessus was not able to successfully authenticate directly to the
remote target on an available authentication protocol. Nessus was
able to connect to the remote port and identify that the service
running on the port supports an authentication protocol, but Nessus
failed to authenticate to the remote service using the provided
credentials. There may have been a protocol failure that prevented
authentication from being attempted or all of the provided credentials
for the authentication protocol may be invalid. See plugin output for
error details.

Please note the following :

- This plugin reports per protocol, so it is possible for
  valid credentials to be provided for one protocol and not
  another. For example, authentication may succeed via SSH
  but fail via SMB, while no credentials were provided for
  an available SNMP service.

- Providing valid credentials for all available
  authentication protocols may improve scan coverage, but
  the value of successful authentication for a given
  protocol may vary from target to target depending upon
  what data (if any) is gathered from the target via that
  protocol. For example, successful authentication via SSH
  is more valuable for Linux targets than for Windows
  targets, and likewise successful authentication via SMB
  is more valuable for Windows targets than for Linux
  targets.","n/a","","SSH was detected on ports 7122, 22 but no credentials were provided.
SSH local checks were not enabled.

"
"117886","","","None","192.168.0.8","tcp","0","OS Security Patch Assessment Not Available","OS Security Patch Assessment is not available.","OS Security Patch Assessment is not available on the remote host.
This does not necessarily indicate a problem with the scan.
Credentials may not have been provided, OS security patch assessment
may not be supported for the target, the target may not have been
identified, or another issue may have occurred that prevented OS
security patch assessment from being available. See plugin output for
details.

This plugin reports non-failure information impacting the availability
of OS Security Patch Assessment. Failure information is reported by
plugin 21745 : 'OS Security Patch Assessment failed'.  If a target
host is not supported for OS Security Patch Assessment, plugin
110695 : 'OS Security Patch Assessment Checks Not Supported' will
report concurrently with this plugin.","n/a","","
The following issues were reported :

  - Plugin      : no_local_checks_credentials.nasl
    Plugin ID   : 110723
    Plugin Name : Target Credential Status by Authentication Protocol - No Credentials Provided
    Message     : 
Credentials were not provided for detected SSH service.
"
"121010","","","None","192.168.0.8","tcp","8653","TLS Version 1.1 Protocol Detection","The remote service encrypts traffic using an older version of TLS.","The remote service accepts connections encrypted using TLS 1.1.
TLS 1.1 lacks support for current and recommended cipher suites.
Ciphers that support encryption before MAC computation, and
authenticated encryption modes such as GCM cannot be used with
TLS 1.1

As of March 31, 2020, Endpoints that are not enabled for TLS 1.2 
and higher will no longer function properly with major web browsers and major vendors.","Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.","https://tools.ietf.org/html/draft-ietf-tls-oldversions-deprecate-00
http://www.nessus.org/u?c8ae820d","TLSv1.1 is enabled and the server supports at least one cipher."
"132634","","","None","192.168.0.8","tcp","0","Deprecated SSLv2 Connection Attempts","Secure Connections, using a deprecated protocol were attempted as part of the scan","This plugin enumerates and reports any SSLv2 connections which 
  were attempted as part of a scan. This protocol has been deemed prohibited since 2011 because of security 
  vulnerabilities and most major ssl libraries such as openssl, nss, mbed and wolfssl do not provide this functionality
  in their latest versions. This protocol has been deprecated in Nessus 8.9 and later.","N/A","","
Nessus attempted the following SSLv2 connection(s) as part of this scan: 

Plugin ID: 42476
Timestamp: 2024-05-07 01:25:11
Port: 22

"
"136318","","","None","192.168.0.8","tcp","8653","TLS Version 1.2 Protocol Detection","The remote service encrypts traffic using a version of TLS.","The remote service accepts connections encrypted using TLS 1.2.","N/A","https://tools.ietf.org/html/rfc5246","TLSv1.2 is enabled and the server supports at least one cipher."
"149334","","","None","192.168.0.8","tcp","22","SSH Password Authentication Accepted","The SSH server on the remote host accepts password authentication.","The SSH server on the remote host accepts password authentication.","n/a","https://tools.ietf.org/html/rfc4252#section-8",""
"149334","","","None","192.168.0.8","tcp","7122","SSH Password Authentication Accepted","The SSH server on the remote host accepts password authentication.","The SSH server on the remote host accepts password authentication.","n/a","https://tools.ietf.org/html/rfc4252#section-8",""
"153588","","","None","192.168.0.8","tcp","22","SSH SHA-1 HMAC Algorithms Enabled","The remote SSH server is configured to enable SHA-1 HMAC algorithms.","The remote SSH server is configured to enable SHA-1 HMAC algorithms.

Although NIST has formally deprecated use of SHA-1 for digital signatures, SHA-1 is still considered secure for HMAC as
the security of HMAC does not rely on the underlying hash function being resistant to collisions.

Note that this plugin only checks for the options of the remote SSH server.","n/a","","
The following client-to-server SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1
  hmac-sha1-etm@openssh.com

The following server-to-client SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
"
"153588","","","None","192.168.0.8","tcp","7122","SSH SHA-1 HMAC Algorithms Enabled","The remote SSH server is configured to enable SHA-1 HMAC algorithms.","The remote SSH server is configured to enable SHA-1 HMAC algorithms.

Although NIST has formally deprecated use of SHA-1 for digital signatures, SHA-1 is still considered secure for HMAC as
the security of HMAC does not rely on the underlying hash function being resistant to collisions.

Note that this plugin only checks for the options of the remote SSH server.","n/a","","
The following client-to-server SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1
  hmac-sha1-etm@openssh.com

The following server-to-client SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
"
"153953","","2.6","Low","192.168.0.8","tcp","22","SSH Weak Key Exchange Algorithms Enabled","The remote SSH server is configured to allow weak key exchange algorithms.","The remote SSH server is configured to allow key exchange algorithms which are considered weak.

This is based on the IETF draft document Key Exchange (KEX) Method Updates and Recommendations for Secure Shell (SSH)
RFC9142. Section 4 lists guidance on key exchange algorithms that SHOULD NOT and MUST NOT be
enabled. This includes:

  diffie-hellman-group-exchange-sha1

  diffie-hellman-group1-sha1

  gss-gex-sha1-*

  gss-group1-sha1-*

  gss-group14-sha1-*

  rsa1024-sha1

Note that this plugin only checks for the options of the SSH server, and it does not check for vulnerable software
versions.","Contact the vendor or consult product documentation to disable the weak algorithms.","https://datatracker.ietf.org/doc/html/rfc9142","
The following weak key exchange algorithms are enabled : 

  diffie-hellman-group-exchange-sha1
  diffie-hellman-group1-sha1
"
"153953","","2.6","Low","192.168.0.8","tcp","7122","SSH Weak Key Exchange Algorithms Enabled","The remote SSH server is configured to allow weak key exchange algorithms.","The remote SSH server is configured to allow key exchange algorithms which are considered weak.

This is based on the IETF draft document Key Exchange (KEX) Method Updates and Recommendations for Secure Shell (SSH)
RFC9142. Section 4 lists guidance on key exchange algorithms that SHOULD NOT and MUST NOT be
enabled. This includes:

  diffie-hellman-group-exchange-sha1

  diffie-hellman-group1-sha1

  gss-gex-sha1-*

  gss-group1-sha1-*

  gss-group14-sha1-*

  rsa1024-sha1

Note that this plugin only checks for the options of the SSH server, and it does not check for vulnerable software
versions.","Contact the vendor or consult product documentation to disable the weak algorithms.","https://datatracker.ietf.org/doc/html/rfc9142","
The following weak key exchange algorithms are enabled : 

  diffie-hellman-group-exchange-sha1
  diffie-hellman-group1-sha1
"
"156899","","","None","192.168.0.8","tcp","8653","SSL/TLS Recommended Cipher Suites","The remote host advertises discouraged SSL/TLS ciphers.","The remote host has open SSL/TLS ports which advertise discouraged cipher suites. It is recommended to only enable
support for the following cipher suites:

TLSv1.3:
  - 0x13,0x01 TLS13_AES_128_GCM_SHA256
  - 0x13,0x02 TLS13_AES_256_GCM_SHA384
  - 0x13,0x03 TLS13_CHACHA20_POLY1305_SHA256

TLSv1.2:
  - 0xC0,0x2B ECDHE-ECDSA-AES128-GCM-SHA256
  - 0xC0,0x2F ECDHE-RSA-AES128-GCM-SHA256
  - 0xC0,0x2C ECDHE-ECDSA-AES256-GCM-SHA384
  - 0xC0,0x30 ECDHE-RSA-AES256-GCM-SHA384
  - 0xCC,0xA9 ECDHE-ECDSA-CHACHA20-POLY1305
  - 0xCC,0xA8 ECDHE-RSA-CHACHA20-POLY1305

This is the recommended configuration for the vast majority of services, as it is highly secure and compatible with
nearly every client released in the last five (or more) years.","Only enable support for recommened cipher suites.","https://wiki.mozilla.org/Security/Server_Side_TLS
https://ssl-config.mozilla.org/","The remote host has listening SSL/TLS ports which advertise the discouraged cipher suites outlined below:


  High Strength Ciphers (>= 112-bit key)

    Name                          Code             KEX           Auth     Encryption             MAC
    ----------------------        ----------       ---           ----     ---------------------  ---
    DHE-RSA-AES128-SHA256         0x00, 0x9E       DH            RSA      AES-GCM(128)           SHA256
    DHE-RSA-AES256-SHA384         0x00, 0x9F       DH            RSA      AES-GCM(256)           SHA384
    DHE-RSA-AES128-SHA            0x00, 0x33       DH            RSA      AES-CBC(128)           SHA1
    DHE-RSA-AES256-SHA            0x00, 0x39       DH            RSA      AES-CBC(256)           SHA1
    ECDHE-RSA-AES128-SHA          0xC0, 0x13       ECDH          RSA      AES-CBC(128)           SHA1
    ECDHE-RSA-AES256-SHA          0xC0, 0x14       ECDH          RSA      AES-CBC(256)           SHA1
    DHE-RSA-AES128-SHA256         0x00, 0x67       DH            RSA      AES-CBC(128)           SHA256
    DHE-RSA-AES256-SHA256         0x00, 0x6B       DH            RSA      AES-CBC(256)           SHA256
    ECDHE-RSA-AES128-SHA256       0xC0, 0x27       ECDH          RSA      AES-CBC(128)           SHA256
    ECDHE-RSA-AES256-SHA384       0xC0, 0x28       ECDH          RSA      AES-CBC(256)           SHA384

The fields above are :

  {Tenable ciphername}
  {Cipher ID code}
  Kex={key exchange}
  Auth={authentication}
  Encrypt={symmetric encryption method}
  MAC={message authentication code}
  {export flag}
"
"157288","","6.1","Medium","192.168.0.8","tcp","8653","TLS Version 1.1 Protocol Deprecated","The remote service encrypts traffic using an older version of TLS.","The remote service accepts connections encrypted using TLS 1.1. TLS 1.1 lacks support for current and recommended
cipher suites. Ciphers that support encryption before MAC computation, and authenticated encryption modes such as GCM
cannot be used with TLS 1.1

As of March 31, 2020, Endpoints that are not enabled for TLS 1.2 and higher will no longer function properly with major
web browsers and major vendors.","Enable support for TLS 1.2 and/or 1.3, and disable support for TLS 1.1.","https://datatracker.ietf.org/doc/html/rfc8996
http://www.nessus.org/u?c8ae820d","TLSv1.1 is enabled and the server supports at least one cipher."
"181418","","","None","192.168.0.8","tcp","22","OpenSSH Detection","An OpenSSH-based SSH server was detected on the remote host.","An OpenSSH-based SSH server was detected on the remote host.","n/a","https://www.openssh.com/","
  Service : ssh
  Version : 8.8
  Banner  : SSH-2.0-OpenSSH_8.8
"
"181418","","","None","192.168.0.8","tcp","7122","OpenSSH Detection","An OpenSSH-based SSH server was detected on the remote host.","An OpenSSH-based SSH server was detected on the remote host.","n/a","https://www.openssh.com/","
  Service : ssh
  Version : 8.8
  Banner  : SSH-2.0-OpenSSH_8.8
"
"187201","CVE-2023-48795","6.4","Medium","192.168.0.8","tcp","22","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_8.8
  Installed version : 8.8
  Fixed version     : 9.6p1 / 9.6
"
"187201","CVE-2023-51384","6.4","Medium","192.168.0.8","tcp","22","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_8.8
  Installed version : 8.8
  Fixed version     : 9.6p1 / 9.6
"
"187201","CVE-2023-51385","6.4","Medium","192.168.0.8","tcp","22","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_8.8
  Installed version : 8.8
  Fixed version     : 9.6p1 / 9.6
"
"187201","CVE-2023-48795","6.4","Medium","192.168.0.8","tcp","7122","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_8.8
  Installed version : 8.8
  Fixed version     : 9.6p1 / 9.6
"
"187201","CVE-2023-51384","6.4","Medium","192.168.0.8","tcp","7122","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_8.8
  Installed version : 8.8
  Fixed version     : 9.6p1 / 9.6
"
"187201","CVE-2023-51385","6.4","Medium","192.168.0.8","tcp","7122","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_8.8
  Installed version : 8.8
  Fixed version     : 9.6p1 / 9.6
"
"10107","","","None","192.168.0.9","tcp","8888","HTTP Server Type and Version","A web server is running on the remote host.","This plugin attempts to determine the type and the version of the
  remote web server.","n/a","","The remote web server type is :

tinyproxy/1.11.0-rc1-78-git-c4df45b"
"10114","CVE-1999-0524","0.0","None","192.168.0.9","icmp","0","ICMP Timestamp Request Remote Date Disclosure","It is possible to determine the exact time set on the remote host.","The remote host answers to an ICMP timestamp request.  This allows an
attacker to know the date that is set on the targeted machine, which
may assist an unauthenticated, remote attacker in defeating time-based
authentication protocols.

Timestamps returned from machines running Windows Vista / 7 / 2008 /
2008 R2 are deliberately incorrect, but usually within 1000 seconds of
the actual system time.","Filter out the ICMP timestamp requests (13), and the outgoing ICMP
timestamp replies (14).","","The difference between the local and remote clocks is 21 seconds.
"
"10195","","","None","192.168.0.9","tcp","8888","HTTP Proxy Open Relay Detection","The remote web proxy server accepts requests.","The remote web proxy accepts unauthenticated HTTP requests from the
Nessus scanner.  By routing requests through the affected proxy, a user
may be able to gain some degree of anonymity while browsing websites,
which will see requests as originating from the remote host itself
rather than the user's host.","Make sure access to the proxy is limited to valid users / hosts.","",""
"10223","CVE-1999-0632","0.0","None","192.168.0.9","udp","111","RPC portmapper Service Detection","An ONC RPC portmapper is running on the remote host.","The RPC portmapper is running on this port.

The portmapper allows someone to get the port number of each RPC
service running on the remote host by sending either multiple lookup
requests or a DUMP request.","n/a","",""
"10267","","","None","192.168.0.9","tcp","22","SSH Server Type and Version Information","An SSH server is listening on this port.","It is possible to obtain information about the remote SSH server by
sending an empty authentication request.","n/a","","
SSH version : SSH-2.0-OpenSSH_8.8
SSH supported authentication : publickey,password
"
"10287","","","None","192.168.0.9","udp","0","Traceroute Information","It was possible to obtain traceroute information.","Makes a traceroute to the remote host.","n/a","","For your information, here is the traceroute from 192.168.0.4 to 192.168.0.9 : 
192.168.0.4
192.168.0.9

Hop Count: 1
"
"10881","","","None","192.168.0.9","tcp","22","SSH Protocol Versions Supported","A SSH server is running on the remote host.","This plugin determines the versions of the SSH protocol supported by
the remote SSH daemon.","n/a","","The remote SSH daemon supports the following versions of the
SSH protocol :

  - 1.99
  - 2.0
"
"11111","","","None","192.168.0.9","tcp","111","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on TCP port 111 :

 - program: 100000 (portmapper), version: 4
 - program: 100000 (portmapper), version: 3
 - program: 100000 (portmapper), version: 2
"
"11111","","","None","192.168.0.9","udp","111","RPC Services Enumeration","An ONC RPC service is running on the remote host.","By sending a DUMP request to the portmapper, it was possible to
enumerate the ONC RPC services running on the remote port.  Using this
information, it is possible to connect and bind to each service by
sending an RPC request to the remote port.","n/a","","
The following RPC services are available on UDP port 111 :

 - program: 100000 (portmapper), version: 4
 - program: 100000 (portmapper), version: 3
 - program: 100000 (portmapper), version: 2
"
"11154","","","None","192.168.0.9","tcp","4330","Unknown Service Detection: Banner Retrieval","There is an unknown service running on the remote host.","Nessus was unable to identify a service on the remote host even though
it returned a banner of some type.","n/a","","
If you know what this service is and think the banner could be used to
identify it, please send a description of the service along with the
following output to svc-signatures@nessus.org :

  Port   : 4330
  Type   : spontaneous
  Banner : 
0x00:  00 00 00 10 00 00 70 00 00 00 00 00 FF FF CF 9D    ......p.........
           0x10:                                                                     
           
"
"11154","","","None","192.168.0.9","tcp","44321","Unknown Service Detection: Banner Retrieval","There is an unknown service running on the remote host.","Nessus was unable to identify a service on the remote host even though
it returned a banner of some type.","n/a","","
If you know what this service is and think the banner could be used to
identify it, please send a description of the service along with the
following output to svc-signatures@nessus.org :

  Port   : 44321
  Type   : spontaneous
  Banner : 
0x00:  00 00 00 14 00 00 70 00 00 00 00 00 00 00 00 00    ......p.........
           0x10:  02 01 0E 57                                        ...W            
           
"
"11219","","","None","192.168.0.9","tcp","22","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 22/tcp was found to be open"
"11219","","","None","192.168.0.9","tcp","111","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 111/tcp was found to be open"
"11219","","","None","192.168.0.9","tcp","4330","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 4330/tcp was found to be open"
"11219","","","None","192.168.0.9","tcp","8888","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 8888/tcp was found to be open"
"11219","","","None","192.168.0.9","tcp","44321","Nessus SYN scanner","It is possible to determine which TCP ports are open.","This plugin is a SYN 'half-open' port scanner.  It shall be reasonably
quick even against a firewalled target. 

Note that SYN scans are less intrusive than TCP (full connect) scans
against broken services, but they might cause problems for less robust
firewalls and also leave unclosed connections on the remote target, if
the network is loaded.","Protect your target with an IP filter.","","Port 44321/tcp was found to be open"
"11936","","","None","192.168.0.9","tcp","0","OS Identification","It is possible to guess the remote operating system.","Using a combination of remote probes (e.g., TCP/IP, SMB, HTTP, NTP,
SNMP, etc.), it is possible to guess the name of the remote operating
system in use. It is also possible sometimes to guess the version of
the operating system.","n/a","","
Remote operating system : Linux Kernel 2.6
Confidence level : 65
Method : SinFP

 
The remote host is running Linux Kernel 2.6"
"14788","","","None","192.168.0.9","tcp","0","IP Protocols Scan","This plugin detects the protocols understood by the remote IP stack.","This plugin detects the protocols understood by the remote IP stack.","n/a","http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml","The following IP protocols are accepted on this host:
1	ICMP
2	IGMP
6	TCP
17	UDP
103	PIM
136	UDPLite
"
"19506","","","None","192.168.0.9","tcp","0","Nessus Scan Information","This plugin displays information about the Nessus scan.","This plugin displays, for each tested host, information about the
scan itself :

  - The version of the plugin set.
  - The type of scanner (Nessus or Nessus Home).
  - The version of the Nessus Engine.
  - The port scanner(s) used.
  - The port range scanned.
  - The ping round trip time 
  - Whether credentialed or third-party patch management
    checks are possible.
  - Whether the display of superseded patches is enabled
  - The date of the scan.
  - The duration of the scan.
  - The number of hosts scanned in parallel.
  - The number of checks done in parallel.","n/a","","Information about this scan : 

Nessus version : 10.3.1
Nessus build : 20006
Plugin feed version : 202402261439
Scanner edition used : Nessus

ERROR: Your plugins have not been updated since 2024/2/26
Performing a scan with an older plugin set will yield out-of-date results and
produce an incomplete audit. Please run nessus-update-plugins to get the
newest vulnerability checks from Nessus.org.

Scanner OS : WINDOWS
Scanner distribution : win-x86-64
Scan type : Normal
Scan name : 手机报24年4月扫描
Scan policy used : dict_policy_low
Scanner IP : 192.168.0.4
Port scanner(s) : nessus_syn_scanner 
Port range : all
Ping RTT : Unavailable
Thorough tests : yes
Experimental tests : no
Plugin debugging enabled : no
Paranoia level : 1
Report verbosity : 1
Safe checks : yes
Optimize the test : yes
Credentialed checks : no
Patch management checks : None
Display superseded patches : yes (supersedence plugin did not launch)
CGI scanning : enabled
Web application tests : enabled
Web app tests -  Test mode : all_pairs
Web app tests -  Try all HTTP methods : yes
Web app tests -  Maximum run time : 10 minutes.
Web app tests -  Stop at first flaw : param
Max hosts : 15
Max checks : 2
Recv timeout : 15
Backports : None
Allow post-scan editing : Yes
Nessus Plugin Signature Checking : Enabled
Audit File Signature Checking : Disabled
Scan Start Date : 2024/5/7 9:09 China Standard Time
Scan duration : 1384 sec
Scan for malware : no
"
"22964","","","None","192.168.0.9","tcp","22","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","An SSH server is running on this port."
"22964","","","None","192.168.0.9","tcp","8888","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","A web server is running on this port."
"22964","","","None","192.168.0.9","tcp","8888","Service Detection","The remote service could be identified.","Nessus was able to identify the remote service by its banner or by
looking at the error message it sends when it receives an HTTP
request.","n/a","","An HTTP proxy is running on this port."
"24260","","","None","192.168.0.9","tcp","8888","HyperText Transfer Protocol (HTTP) Information","Some information about the remote HTTP configuration can be extracted.","This test gives some information about the remote HTTP protocol - the
version used, whether HTTP Keep-Alive is enabled, etc... 

This test is informational only and does not denote any security
problem.","n/a","","
Response Code : HTTP/1.0 400 Bad Request

Protocol version : HTTP/1.0
HTTP/2 TLS Support: No
HTTP/2 Cleartext Support: No
SSL : no
Keep-Alive : no
Options allowed : (Not implemented)
Headers :

  Via: 1.1 tinyproxy (tinyproxy/1.11.0-rc1-78-git-c4df45b)
  Server: tinyproxy/1.11.0-rc1-78-git-c4df45b
  Content-Type: text/html
  
Response Body :

<?xml version=""1.0"" encoding=""UTF-8"" ?>
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.1//EN"" ""http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"">

<html xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""en"">

<head>
<title>400 Bad Request</title>
<meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"" />
</head>

<body>

<h1>Bad Request</h1>

<p>You tried to connect to the machine the proxy is running on</p>

<hr />

<p><em>Generated by <a href=""https://tinyproxy.github.io/"">tinyproxy</a> version 1.11.0-rc1-78-git-c4df45b.</em></p>

</body>

</html>
"
"25220","","","None","192.168.0.9","tcp","0","TCP/IP Timestamps Supported","The remote service implements TCP timestamps.","The remote host implements TCP timestamps, as defined by RFC1323.  A
side effect of this feature is that the uptime of the remote host can
sometimes be computed.","n/a","http://www.ietf.org/rfc/rfc1323.txt",""
"43111","","","None","192.168.0.9","tcp","8888","HTTP Methods Allowed (per directory)","This plugin determines which HTTP methods are allowed on various CGI
directories.","By calling the OPTIONS method, it is possible to determine which HTTP
methods are allowed on each directory.

The following HTTP methods are considered insecure:
  PUT, DELETE, CONNECT, TRACE, HEAD

Many frameworks and languages treat 'HEAD' as a 'GET' request, albeit
one without any body in the response. If a security constraint was
set on 'GET' requests such that only 'authenticatedUsers' could
access GET requests for a particular servlet or resource, it would be
bypassed for the 'HEAD' version. This allowed unauthorized blind
submission of any privileged GET request.

As this list may be incomplete, the plugin also tests - if 'Thorough
tests' are enabled or 'Enable web applications tests' is set to 'yes'
in the scan policy - various known HTTP methods on each directory and
considers them as unsupported if it receives a response code of 400,
403, 405, or 501.

Note that the plugin output is only informational and does not
necessarily indicate the presence of any security vulnerabilities.","n/a","http://www.nessus.org/u?d9c03a9a
http://www.nessus.org/u?b019cbdb
https://www.owasp.org/index.php/Test_HTTP_Methods_(OTG-CONFIG-006)","
Based on tests of each method : 

  - HTTP method CONNECT is allowed on :

    /

"
"45590","","","None","192.168.0.9","tcp","0","Common Platform Enumeration (CPE)","It was possible to enumerate CPE names that matched on the remote
system.","By using information obtained from a Nessus scan, this plugin reports
CPE (Common Platform Enumeration) matches for various hardware and
software products found on a host. 

Note that if an official CPE is not available for the product, this
plugin computes the best possible CPE based on the information
available from the scan.","n/a","http://cpe.mitre.org/
https://nvd.nist.gov/products/cpe","
The remote operating system matched the following CPE : 

  cpe:/o:linux:linux_kernel -> Linux Kernel

Following application CPE matched on the remote system : 

  cpe:/a:openbsd:openssh:8.8 -> OpenBSD OpenSSH
"
"53335","","","None","192.168.0.9","tcp","111","RPC portmapper (TCP)","An ONC RPC portmapper is running on the remote host.","The RPC portmapper is running on this port. 

The portmapper allows someone to get the port number of each RPC
service running on the remote host by sending either multiple lookup
requests or a DUMP request.","n/a","",""
"54615","","","None","192.168.0.9","tcp","0","Device Type","It is possible to guess the remote device type.","Based on the remote operating system, it is possible to determine
what the remote system type is (eg: a printer, router, general-purpose
computer, etc).","n/a","","Remote device type : general-purpose
Confidence level : 65
"
"66334","","","None","192.168.0.9","tcp","0","Patch Report","The remote host is missing several patches.","The remote host is missing one or more security patches. This plugin lists the newest version of each patch to install 
to make sure the remote host is up-to-date.

Note: Because the 'Show missing patches that have been superseded' setting in your scan policy depends on this plugin,
it will always run and cannot be disabled.","Install the patches listed below.","","

. You need to take the following action :

[ SSH Terrapin Prefix Truncation Weakness (CVE-2023-48795) (187315) ]

+ Action to take : Contact the vendor for an update with the strict key exchange countermeasures or disable the affected algorithms.


"
"70657","","","None","192.168.0.9","tcp","22","SSH Algorithms and Languages Supported","An SSH server is listening on this port.","This script detects which algorithms and languages are supported by
the remote service for encrypting communications.","n/a","","
Nessus negotiated the following encryption algorithm with the server : 

The server supports the following options for kex_algorithms : 

  diffie-hellman-group-exchange-sha1
  diffie-hellman-group-exchange-sha256
  diffie-hellman-group1-sha1
  diffie-hellman-group14-sha1
  ecdh-sha2-nistp256
  ecdh-sha2-nistp384
  ecdh-sha2-nistp521

The server supports the following options for server_host_key_algorithms : 

  ecdsa-sha2-nistp256
  rsa-sha2-256
  rsa-sha2-512
  ssh-ed25519
  ssh-rsa

The server supports the following options for encryption_algorithms_client_to_server : 

  aes128-ctr
  aes128-gcm@openssh.com
  aes192-ctr
  aes256-ctr
  aes256-gcm@openssh.com
  chacha20-poly1305@openssh.com

The server supports the following options for encryption_algorithms_server_to_client : 

  aes128-ctr
  aes128-gcm@openssh.com
  aes192-ctr
  aes256-ctr
  aes256-gcm@openssh.com
  chacha20-poly1305@openssh.com

The server supports the following options for mac_algorithms_client_to_server : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
  hmac-sha2-256
  hmac-sha2-256-etm@openssh.com
  hmac-sha2-512
  hmac-sha2-512-etm@openssh.com
  umac-128-etm@openssh.com
  umac-128@openssh.com
  umac-64-etm@openssh.com
  umac-64@openssh.com

The server supports the following options for mac_algorithms_server_to_client : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
  hmac-sha2-256
  hmac-sha2-256-etm@openssh.com
  hmac-sha2-512
  hmac-sha2-512-etm@openssh.com
  umac-128-etm@openssh.com
  umac-128@openssh.com
  umac-64-etm@openssh.com
  umac-64@openssh.com

The server supports the following options for compression_algorithms_client_to_server : 

  none
  zlib@openssh.com

The server supports the following options for compression_algorithms_server_to_client : 

  none
  zlib@openssh.com
"
"110723","","","None","192.168.0.9","tcp","0","Target Credential Status by Authentication Protocol - No Credentials Provided","Nessus was able to find common ports used for local checks,
however, no credentials were provided in the scan policy.","Nessus was not able to successfully authenticate directly to the
remote target on an available authentication protocol. Nessus was
able to connect to the remote port and identify that the service
running on the port supports an authentication protocol, but Nessus
failed to authenticate to the remote service using the provided
credentials. There may have been a protocol failure that prevented
authentication from being attempted or all of the provided credentials
for the authentication protocol may be invalid. See plugin output for
error details.

Please note the following :

- This plugin reports per protocol, so it is possible for
  valid credentials to be provided for one protocol and not
  another. For example, authentication may succeed via SSH
  but fail via SMB, while no credentials were provided for
  an available SNMP service.

- Providing valid credentials for all available
  authentication protocols may improve scan coverage, but
  the value of successful authentication for a given
  protocol may vary from target to target depending upon
  what data (if any) is gathered from the target via that
  protocol. For example, successful authentication via SSH
  is more valuable for Linux targets than for Windows
  targets, and likewise successful authentication via SMB
  is more valuable for Windows targets than for Linux
  targets.","n/a","","SSH was detected on port 22 but no credentials were provided.
SSH local checks were not enabled.

"
"117886","","","None","192.168.0.9","tcp","0","OS Security Patch Assessment Not Available","OS Security Patch Assessment is not available.","OS Security Patch Assessment is not available on the remote host.
This does not necessarily indicate a problem with the scan.
Credentials may not have been provided, OS security patch assessment
may not be supported for the target, the target may not have been
identified, or another issue may have occurred that prevented OS
security patch assessment from being available. See plugin output for
details.

This plugin reports non-failure information impacting the availability
of OS Security Patch Assessment. Failure information is reported by
plugin 21745 : 'OS Security Patch Assessment failed'.  If a target
host is not supported for OS Security Patch Assessment, plugin
110695 : 'OS Security Patch Assessment Checks Not Supported' will
report concurrently with this plugin.","n/a","","
The following issues were reported :

  - Plugin      : no_local_checks_credentials.nasl
    Plugin ID   : 110723
    Plugin Name : Target Credential Status by Authentication Protocol - No Credentials Provided
    Message     : 
Credentials were not provided for detected SSH service.
"
"132634","","","None","192.168.0.9","tcp","0","Deprecated SSLv2 Connection Attempts","Secure Connections, using a deprecated protocol were attempted as part of the scan","This plugin enumerates and reports any SSLv2 connections which 
  were attempted as part of a scan. This protocol has been deemed prohibited since 2011 because of security 
  vulnerabilities and most major ssl libraries such as openssl, nss, mbed and wolfssl do not provide this functionality
  in their latest versions. This protocol has been deprecated in Nessus 8.9 and later.","N/A","","
Nessus attempted the following SSLv2 connection(s) as part of this scan: 

Plugin ID: 42476
Timestamp: 2024-05-07 01:12:55
Port: 22

"
"149334","","","None","192.168.0.9","tcp","22","SSH Password Authentication Accepted","The SSH server on the remote host accepts password authentication.","The SSH server on the remote host accepts password authentication.","n/a","https://tools.ietf.org/html/rfc4252#section-8",""
"153588","","","None","192.168.0.9","tcp","22","SSH SHA-1 HMAC Algorithms Enabled","The remote SSH server is configured to enable SHA-1 HMAC algorithms.","The remote SSH server is configured to enable SHA-1 HMAC algorithms.

Although NIST has formally deprecated use of SHA-1 for digital signatures, SHA-1 is still considered secure for HMAC as
the security of HMAC does not rely on the underlying hash function being resistant to collisions.

Note that this plugin only checks for the options of the remote SSH server.","n/a","","
The following client-to-server SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1
  hmac-sha1-etm@openssh.com

The following server-to-client SHA-1 Hash-based Message Authentication Code (HMAC) algorithms are supported : 

  hmac-sha1
  hmac-sha1-etm@openssh.com
"
"153953","","2.6","Low","192.168.0.9","tcp","22","SSH Weak Key Exchange Algorithms Enabled","The remote SSH server is configured to allow weak key exchange algorithms.","The remote SSH server is configured to allow key exchange algorithms which are considered weak.

This is based on the IETF draft document Key Exchange (KEX) Method Updates and Recommendations for Secure Shell (SSH)
RFC9142. Section 4 lists guidance on key exchange algorithms that SHOULD NOT and MUST NOT be
enabled. This includes:

  diffie-hellman-group-exchange-sha1

  diffie-hellman-group1-sha1

  gss-gex-sha1-*

  gss-group1-sha1-*

  gss-group14-sha1-*

  rsa1024-sha1

Note that this plugin only checks for the options of the SSH server, and it does not check for vulnerable software
versions.","Contact the vendor or consult product documentation to disable the weak algorithms.","https://datatracker.ietf.org/doc/html/rfc9142","
The following weak key exchange algorithms are enabled : 

  diffie-hellman-group-exchange-sha1
  diffie-hellman-group1-sha1
"
"181418","","","None","192.168.0.9","tcp","22","OpenSSH Detection","An OpenSSH-based SSH server was detected on the remote host.","An OpenSSH-based SSH server was detected on the remote host.","n/a","https://www.openssh.com/","
  Service : ssh
  Version : 8.8
  Banner  : SSH-2.0-OpenSSH_8.8
"
"187201","CVE-2023-48795","6.4","Medium","192.168.0.9","tcp","22","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_8.8
  Installed version : 8.8
  Fixed version     : 9.6p1 / 9.6
"
"187201","CVE-2023-51384","6.4","Medium","192.168.0.9","tcp","22","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_8.8
  Installed version : 8.8
  Fixed version     : 9.6p1 / 9.6
"
"187201","CVE-2023-51385","6.4","Medium","192.168.0.9","tcp","22","OpenSSH < 9.6 Multiple Vulnerabilities","The SSH server running on the remote host is affected by multiple vulnerabilities.","The version of OpenSSH installed on the remote host is prior to 9.6. It is, therefore, affected by multiple
vulnerabilities as referenced in the release-9.6 advisory.

  - ssh(1), sshd(8): implement protocol extensions to thwart the so-called Terrapin attack discovered by
    Fabian Bumer, Marcus Brinkmann and Jrg Schwenk. This attack allows a MITM to effect a limited break of
    the integrity of the early encrypted SSH transport protocol by sending extra messages prior to the
    commencement of encryption, and deleting an equal number of consecutive messages immediately after
    encryption starts. A peer SSH client/server would not be able to detect that messages were deleted. While
    cryptographically novel, the security impact of this attack is fortunately very limited as it only allows
    deletion of consecutive messages, and deleting most messages at this stage of the protocol prevents user
    user authentication from proceeding and results in a stuck connection. The most serious identified impact
    is that it lets a MITM to delete the SSH2_MSG_EXT_INFO message sent before authentication starts, allowing
    the attacker to disable a subset of the keystroke timing obfuscation features introduced in OpenSSH 9.5.
    There is no other discernable impact to session secrecy or session integrity. OpenSSH 9.6 addresses this
    protocol weakness through a new strict KEX protocol extension that will be automatically enabled when
    both the client and server support it. This extension makes two changes to the SSH transport protocol to
    improve the integrity of the initial key exchange. Firstly, it requires endpoints to terminate the
    connection if any unnecessary or unexpected message is received during key exchange (including messages
    that were previously legal but not strictly required like SSH2_MSG_DEBUG). This removes most malleability
    from the early protocol. Secondly, it resets the Message Authentication Code counter at the conclusion of
    each key exchange, preventing previously inserted messages from being able to make persistent changes to
    the sequence number across completion of a key exchange. Either of these changes should be sufficient to
    thwart the Terrapin Attack. More details of these changes are in the PROTOCOL file in the OpenSSH source
    distribition. (CVE-2023-48795)

  - ssh-agent(1): when adding PKCS#11-hosted private keys while specifying destination constraints, if the
    PKCS#11 token returned multiple keys then only the first key had the constraints applied. Use of regular
    private keys, FIDO tokens and unconstrained keys are unaffected. (CVE-2023-51384)

  - ssh(1): if an invalid user or hostname that contained shell metacharacters was passed to ssh(1), and a
    ProxyCommand, LocalCommand directive or match exec predicate referenced the user or hostname via %u, %h
    or similar expansion token, then an attacker who could supply arbitrary user/hostnames to ssh(1) could
    potentially perform command injection depending on what quoting was present in the user-supplied
    ssh_config(5) directive. This situation could arise in the case of git submodules, where a repository
    could contain a submodule with shell characters in its user/hostname. Git does not ban shell
    metacharacters in user or host names when checking out repositories from untrusted sources. Although we
    believe it is the user's responsibility to ensure validity of arguments passed to ssh(1), especially
    across a security boundary such as the git example above, OpenSSH 9.6 now bans most shell metacharacters
    from user and hostnames supplied via the command-line. This countermeasure is not guaranteed to be
    effective in all situations, as it is infeasible for ssh(1) to universally filter shell metacharacters
    potentially relevant to user-supplied commands. User/hostnames provided via ssh_config(5) are not subject
    to these restrictions, allowing configurations that use strange names to continue to be used, under the
    assumption that the user knows what they are doing in their own configuration files. (CVE-2023-51385)

Note that Nessus has not tested for these issues but has instead relied only on the application's self-reported version
number.","Upgrade to OpenSSH version 9.6 or later.","https://www.openssh.com/txt/release-9.6","
  Version source    : SSH-2.0-OpenSSH_8.8
  Installed version : 8.8
  Fixed version     : 9.6p1 / 9.6
"
"187315","CVE-2023-48795","5.4","Medium","192.168.0.9","tcp","22","SSH Terrapin Prefix Truncation Weakness (CVE-2023-48795)","The remote SSH server is vulnerable to a mitm prefix truncation attack.","The remote SSH server is vulnerable to a man-in-the-middle prefix truncation weakness known as Terrapin. This can
allow a remote, man-in-the-middle attacker to bypass integrity checks and downgrade the connection's security.

Note that this plugin only checks for remote SSH servers that support either ChaCha20-Poly1305 or CBC with
Encrypt-then-MAC and do not support the strict key exchange countermeasures. It does not check for vulnerable software
versions.","Contact the vendor for an update with the strict key exchange countermeasures or disable the affected algorithms.","https://terrapin-attack.com/","Supports following ChaCha20-Poly1305 Client to Server algorithm : chacha20-poly1305@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : umac-64-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : umac-128-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha2-256-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha2-512-etm@openssh.com
Supports following Encrypt-then-MAC Client to Server algorithm  : hmac-sha1-etm@openssh.com
Supports following ChaCha20-Poly1305 Server to Client algorithm : chacha20-poly1305@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : umac-64-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : umac-128-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha2-256-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha2-512-etm@openssh.com
Supports following Encrypt-then-MAC Server to Client algorithm  : hmac-sha1-etm@openssh.com
"
